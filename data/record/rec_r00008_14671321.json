{
    "id": 8,
    "abstract": "ABSTRACT  Devices and techniques for implementing virtual system management controllers are described herein. A baseboard management controller (BMC) can include processing circuitry to monitor system sensors, and to provide monitoring information for system sensors responsive to requests for monitoring information. The processing circuitry may further implement a virtual satellite controller within a firmware stack. The BMC and the virtual satellite controller may comply with a specification of the Intelligent Platform Management Interface (IPMI) family of specifications to provide monitoring information for the system sensors. Other embodiments are also described.  24",
    "initialClaims": [
        "1. Title: VIRTUAL INTELLIGENT PLATFORM MANAGEMENT INTERFACE (IPMI) SATELLITE CONTROLLER AND METHOD IN THE CLAIMS 1. (Original) A baseboard management controller (BMC) comprising: provide monitoring information, in accordance with a specification of the Intelligent Platform Management Interface (IPMI) family of specifications, for the system 2. (Original) The BMC of claim 1, wherein the processing circuitry is further configured to: implement a plurality of virtual satellite controllers within the firmware stack, and wherein each of the plurality of virtual satellite controllers corresponds to a set of between 1 and 256 system sensors. 3. (Original) The BMC of claim 2, wherein the processing circuitry is further configured to: communicate with a physical satellite controller that does not execute within the firmware stack of the BMC, and wherein the BMC is arranged to provide requests for system management information to the physical satellite controller. 4. (Original) The BMC of claim 3, wherein the BMC communicates with the physical satellite controller via a management bus, and wherein the management bus is managed by an Intelligent Chassis Management Bridge (ICMB) if the physical satellite controller resides outside a chassis in which the BMC resides. Title: VIRTUAL INTELLIGENT PLATFORM MANAGEMENT INTERFACE (IPMI) SATELLITE CONTROLLER AND METHOD 5. (Original) The BMC of claim 4, further comprising: non-volatile memory to store sensor data records (SDRs) for the system sensors, wherein the SDRs include a controller identifier to identify which controller, of the BMC, the plurality of virtual satellite controllers, and the physical satellite controller, corresponds to a respective system sensor, and wherein a request for monitoring information include the controller identifier for the controller corresponding to the system sensor for which the request is being made. 6. (Original) The BMC of claim 2, wherein the processing circuitry provides an application programming interface (API) for providing monitoring information. 7. (Original) The BMC of claim 6, wherein the API complies with an Intelligent Platform Management Interface (IPMI) specification. 8. (Original) The BMC of claim 2, wherein the processing circuitry is included as part of a special purpose application-specific integrated circuit (ASIC). 9. (Original) The BMC of claim 8, wherein the ASIC further includes a front panel controller to control a front panel and to receive user inputs. 10. (Original) The BMC of claim 2, wherein at least one virtual satellite controller of the plurality of virtual satellite controllers corresponds to a set of Peripheral Component Interconnect Express (PCIe) card sensors. 11. (Withdrawn) A method for implementing a virtual system management controller, performed by a baseboard management controller (BMC), the method comprising: receiving a request to access sensor information for a system sensor, the request including identification information of a controller that corresponds to the system sensor for which the request is being made; and providing a response to the request based on information of a virtual satellite controller if Title: VIRTUAL INTELLIGENT PLATFORM MANAGEMENT INTERFACE (IPMI) SATELLITE CONTROLLER AND METHOD the identification information corresponds to a virtual satellite controller executing in a firmware stack of the BMC. 12. (Withdrawn) The method of claim 11, wherein the request is in accordance with a specification of an Intelligent Platform Management Interface (IPMI) family of specifications. 13. (Withdrawn) The method of claim 12, further comprising: providing the request over a management bus if the identification information corresponds to a physical satellite controller executing outside the firmware stack of the BMC; and relaying sensor information from the physical satellite controller, responsive to providing the request, to a requesting system. 14. (Withdrawn) The method of claim 13, wherein the management bus is managed by an Intelligent Chassis Management Bridge (ICMB) if the physical satellite controller resides outside a chassis in which the BMC resides. 15. (Withdrawn) A machine-readable medium including instructions that, when executed on a baseboard management controller (BMC), cause the BMC to including: receive a request to access sensor information for a system sensor, the request including identification information of a controller that corresponds to the system sensor for which the request is being made; and provide a response to the request based on information of a virtual satellite controller if the identification information corresponds to a virtual satellite controller executing in a firmware stack of the BMC. 16. (Withdrawn) The machine-readable medium of claim 15, wherein the request is in accordance with a specification of an Intelligent Platform Management Interface (IPMI) family of specifications. Title: VIRTUAL INTELLIGENT PLATFORM MANAGEMENT INTERFACE (IPMI) SATELLITE CONTROLLER AND METHOD 17. (Withdrawn) The machine-readable medium of claim 15, wherein the instructions further cause the BMC to: provide the request over a management bus if the identification information corresponds to a physical satellite controller executing outside the firmware stack of the BMC; and relay sensor information from the physical satellite controller, responsive to providing the request, to a requesting system. 18. (Withdrawn) The machine-readable medium of claim 17 wherein the management bus is managed by an Intelligent Chassis Management Bridge (ICMB) when the physical satellite controller resides outside a chassis in which the BMC resides. 19. (Withdrawn) A computer system comprising: circuitry for executing a baseboard management controller (BMC) and a virtual satellite controller, wherein the virtual satellite controller is implemented in a firmware stack of the BMC, and wherein each of the BMC and the virtual satellite controller comply with a specification of the Intelligent Platform Management Interface (IPMI) family of specifications to provide monitoring information for the plurality of system sensors; and a management tool for requesting monitoring information for the plurality of system sensors from the BMC and for displaying the monitoring information. 20. (Withdrawn) The computer system of claim 19, further comprising: a physical satellite controller, executed on a processor separate from the BMC, wherein the physical satellite controller resides in a separate chassis from the BMC; and a management bus, managed by an Intelligent Chassis Management Bridge (ICMB), to provide communication between the BMC and the physical satellite controller. 21. (Withdrawn) The computer system of claim 19, wherein the computer system is a server computer system.",
        "2. The BMC of claim 1, wherein the processing circuitry is further configured to: implement a plurality of virtual satellite controllers within the firmware stack, and wherein each of the plurality of virtual satellite controllers corresponds to a set of between 1 and 256 system sensors.",
        "3. The BMC of claim 2, wherein the processing circuitry is further configured to: communicate with a physical satellite controller that does not execute within the firmware stack of the BMC, and wherein the BMC is arranged to provide requests for system management information to the physical satellite controller.",
        "4. The BMC of claim 3, wherein the BMC communicates with the physical satellite controller via a management bus, and wherein the management bus is managed by an Intelligent Chassis Management Bridge (ICMB) if the physical satellite controller resides outside a chassis in which the BMC resides.",
        "5. The BMC of claim 4, further comprising: non-volatile memory to store sensor data records (SDRs) for the system sensors, wherein the SDRs include a controller identifier to identify which controller, of the BMC, the plurality of virtual satellite controllers, and the physical satellite controller, corresponds to a respective system sensor, and wherein a request for monitoring information include the controller identifier for the controller corresponding to the system sensor for which the request is being made.",
        "6. The BMC of claim 2, wherein the processing circuitry provides an application programming interface (API) for providing monitoring information.",
        "7. The BMC of claim 6, wherein the API complies with an Intelligent Platform Management Interface (IPMI) specification.",
        "8. The BMC of claim 2, wherein the processing circuitry is included as part of a special purpose application-specific integrated circuit (ASIC).",
        "9. The BMC of claim 8, wherein the ASIC further includes a front panel controller to control a front panel and to receive user inputs.",
        "10. The BMC of claim 2, wherein at least one virtual satellite controller of the plurality of virtual satellite controllers corresponds to a set of Peripheral Component Interconnect Express (PCIe) card sensors.",
        "11. A method for implementing a virtual system management controller, performed by a baseboard management controller (BMC), the method comprising: receiving a request to access sensor information for a system sensor, the request including identification information of a controller that corresponds to the system sensor for which the request is being made; and providing a response to the request based on information of a virtual satellite controller if Title: VIRTUAL INTELLIGENT PLATFORM MANAGEMENT INTERFACE (IPMI) SATELLITE CONTROLLER AND METHOD the identification information corresponds to a virtual satellite controller executing in a firmware stack of the BMC.",
        "12. The method of claim 11, wherein the request is in accordance with a specification of an Intelligent Platform Management Interface (IPMI) family of specifications.",
        "13. The method of claim 12, further comprising: providing the request over a management bus if the identification information corresponds to a physical satellite controller executing outside the firmware stack of the BMC; and relaying sensor information from the physical satellite controller, responsive to providing the request, to a requesting system.",
        "14. The method of claim 13, wherein the management bus is managed by an Intelligent Chassis Management Bridge (ICMB) if the physical satellite controller resides outside a chassis in which the BMC resides.",
        "15. A machine-readable medium including instructions that, when executed on a baseboard management controller (BMC), cause the BMC to including: receive a request to access sensor information for a system sensor, the request including identification information of a controller that corresponds to the system sensor for which the request is being made; and provide a response to the request based on information of a virtual satellite controller if the identification information corresponds to a virtual satellite controller executing in a firmware stack of the BMC.",
        "16. The machine-readable medium of claim 15, wherein the request is in accordance with a specification of an Intelligent Platform Management Interface (IPMI) family of specifications.",
        "17. The machine-readable medium of claim 15, wherein the instructions further cause the BMC to: provide the request over a management bus if the identification information corresponds to a physical satellite controller executing outside the firmware stack of the BMC; and relay sensor information from the physical satellite controller, responsive to providing the request, to a requesting system.",
        "18. The machine-readable medium of claim 17 wherein the management bus is managed by an Intelligent Chassis Management Bridge (ICMB) when the physical satellite controller resides outside a chassis in which the BMC resides.",
        "19. A computer system comprising: circuitry for executing a baseboard management controller (BMC) and a virtual satellite controller, wherein the virtual satellite controller is implemented in a firmware stack of the BMC, and wherein each of the BMC and the virtual satellite controller comply with a specification of the Intelligent Platform Management Interface (IPMI) family of specifications to provide monitoring information for the plurality of system sensors; and a management tool for requesting monitoring information for the plurality of system sensors from the BMC and for displaying the monitoring information.",
        "20. The computer system of claim 19, further comprising: a physical satellite controller, executed on a processor separate from the BMC, wherein the physical satellite controller resides in a separate chassis from the BMC; and a management bus, managed by an Intelligent Chassis Management Bridge (ICMB), to provide communication between the BMC and the physical satellite controller.",
        "21. The computer system of claim 19, wherein the computer system is a server computer system."
    ],
    "finalClaims": [
        "1. A baseboard management controller (BMC) comprising: processing circuitry to monitor system sensors, provide monitoring information, in accordance with a specification of the Intelligent Platform Management Interface (IPMI) family of specifications, for the system sensors responsive to requests for monitoring information, implement a virtual satellite controller within a firmware stack, implement a plurality of virtual satellite controllers within the firmware stack, and wherein each of the plurality of virtual satellite controllers corresponds to a set of between 1 and 256 system sensors, and communicate with a physical satellite controller that does not execute within the firmware stack of the BMC, and wherein the BMC is arranged to provide requests for system management information to the physical satellite controller, and non-volatile memory to store sensor data records (SDRs) for the system sensors, wherein the SDRs include a controller identifier to identify which controller, of the BMC, the plurality of virtual satellite controllers, and the physical satellite controller, corresponds to a respective system sensor, and wherein a request for monitoring information include the controller identifier for the controller corresponding to the system sensor for which the request is being made.",
        "2. (Cancelled)",
        "3. (Cancelled)",
        "4. The BMC of claim 1, wherein the BMC communicates with the physical satellite controller via a management bus, and wherein the management bus is managed by an Intelligent Chassis Management Bridge (ICMB) if the physical satellite controller resides outside a chassis in which the BMC resides.",
        "5. (Cancelled)",
        "6. The BMC of claim , wherein the processing circuitry provides an application programming interface (API) for providing monitoring information.",
        "7. The BMC of claim 6, wherein the API complies with an Intelligent Platform Management Interface (IPMI) specification.",
        "8. The BMC of claim !, wherein the processing circuitry is included as part of a special purpose application-specific integrated circuit (ASIC).",
        "9. The BMC of claim 8, wherein the ASIC further includes a front panel controller to control a front panel and to receive user inputs.",
        "10. The BMC of claim 1, wherein at least one virtual satellite controller of the plurality of virtual satellite controllers corresponds to a set of Peripheral Component Interconnect Express (PCIe) card sensors.",
        "11. A method for implementing a virtual system management controller, performed by a baseboard management controller (BMC), the method comprising: receiving a request to access sensor information for a system sensor, the request including identification information of a controller that corresponds to the system sensor for which the request is being made; and providing a response to the request based on information of a virtual satellite controller if the identification information corresponds to a virtual satellite controller executing in a firmware stack of the BMC.",
        "12. The method of claim 11, wherein the request is in accordance with a specification of an Intelligent Platform Management Interface (IPMI) family of specifications.",
        "13. The method of claim 12, further comprising: providing the request over a management bus if the identification information corresponds to a physical satellite controller executing outside the firmware stack of the BMC; and relaying sensor information from the physical satellite controller, responsive to providing the request, to a requesting system.",
        "14. The method of claim 13, wherein the management bus is managed by an Intelligent Chassis Management Bridge (ICMB) if the physical satellite controller resides outside a chassis in which the BMC resides.",
        "15. A machine-readable medium including instructions that, when executed on a baseboard management controller (BMC), cause the BMC to including: receive a request to access sensor information for a system sensor, the request including identification information of a controller that corresponds to the system sensor for which the request is being made; and provide a response to the request based on information of a virtual satellite controller if the identification information corresponds to a virtual satellite controller executing in a firmware stack of the BMC.",
        "16. The machine-readable medium of claim 15, wherein the request is in accordance with a specification of an Intelligent Platform Management Interface (IPMI) family of specifications.",
        "17. The machine-readable medium of claim 15, wherein the instructions further cause the BMC to: provide the request over a management bus if the identification information corresponds to a physical satellite controller executing outside the firmware stack of the BMC; and relay sensor information from the physical satellite controller, responsive to providing the request, to a requesting system.",
        "18. The machine-readable medium of claim 17 wherein the management bus is managed by an Intelligent Chassis Management Bridge (ICMB) when the physical satellite controller resides outside a chassis in which the BMC resides.",
        "19. A computer system comprising: circuitry for executing a baseboard management controller (BMC) and a virtual satellite controller, wherein the virtual satellite controller is implemented in a firmware stack of the BMC, and wherein each of the BMC and the virtual satellite controller comply with a specification of the Intelligent Platform Management Interface (IPMI) family of specifications to provide monitoring information for the plurality of system sensors; and a management tool for requesting monitoring information for the plurality of system sensors from the BMC and for displaying the monitoring information.",
        "20. The computer system of claim 19, further comprising: a physical satellite controller, executed on a processor separate from the BMC, wherein the physical satellite controller resides in a separate chassis from the BMC; and a management bus, managed by an Intelligent Chassis Management Bridge (ICMB), to provide communication between the BMC and the physical satellite controller.",
        "21. The computer system of claim 19, wherein the computer system is a server computer system."
    ],
    "CTNFDocumentIdentifier": "J3LPQPETRXEAPX3",
    "CTNFBodyText": "The present application, filed on or after March 16, 2013, is being examined under the first inventor to file provisions of the AIA .\nDETAILED ACTION\nThe instant application having Application Number: 14/671,321 filed on 3/27/15 has a total of 21 claims pending for examination; there are 4 independent claims and 17 dependent claims, of which only claims 1-10 are examined below.\nElection/Restrictions\nApplicant’s election without traverse of Species 1, figure 2 (claims 1-10) in the reply filed on 5/26/17 is acknowledged.\nInformation Disclosure Statement\nThe Information Disclosure Statement(s) has been reviewed by the examiner and is found to comply with the provisions of 37 CFR 1.97, 1.98 and MPEP § 609.\nDrawings\nThe drawing(s) have been reviewed by the examiner and are found comply with the provisions of 37 CFR 1.81 to 1.85.\nSpecification\nThe disclosure is objected to because of the following informalities:\n The lengthy specification has not been checked to the extent necessary to determine the presence of all possible minor errors.  Applicant's cooperation is requested in correcting any errors of which applicant may become aware in the specification.\nAppropriate correction is required.\n Claim Rejections - 35 USC § 102\nIn the event the determination of the status of the application as subject to AIA  35 U.S.C. 102 and 103 (or as subject to pre-AIA  35 U.S.C. 102 and 103) is incorrect, any correction of the statutory basis for the rejection will not be considered a new ground of rejection if the prior art relied upon, and the rationale supporting the rejection, would be the same under either status.  \nThe following is a quotation of the appropriate paragraphs of 35 U.S.C. 102 that form the basis for the rejections under this section made in this Office action:\nA person shall be entitled to a patent unless –\n\n(a)(1) the claimed invention was patented, described in a printed publication, or in public use, on sale or otherwise available to the public before the effective filing date of the claimed invention.\n\n\nClaim(s) 1-4 and 8-9 is/are rejected under 35 U.S.C. 102(a)(1) as being anticipated by US Patent Application Publication No. 20140280837 to Ayanam et al. (hereinafter Ayanam).\nWith regards to claim 1, Ayanam teaches a baseboard management controller ( BMC) [fig 1 element 120 – paragraphs 27, 29] comprising: \nprocessing circuitry [fig 1 elements 121-132] to \nmonitor system sensors [fig 1 elements 146-1 to 146-N – paragraphs 31, 40, 41, 47-48], \nprovide monitoring information, in accordance with a specification of the Intelligent Platform Management Interface ( IPMI) family of specifications, for the system sensors responsive to requests for monitoring information [paragraphs 4-5, 31-32, 41, 46], and \n implement a virtual satellite controller [fig 1 elements 132-1 to 132-N] within a firmware stack[fig 1 element 121- paragraphs 4-5, 31-32, 41, 46]. \n\nWith regards to claim 2, Ayanam teaches the BMC of claim 1, wherein the processing circuitry is further configured to: \nimplement a plurality of virtual satellite controllers within the firmware stack, and wherein each of the plurality of virtual satellite controllers corresponds to a set of between 1 and 256 system sensors [paragraphs 7, 33]. \n\nWith regards to claim 3, Ayanam teaches the BMC of claim 2, wherein the processing circuitry is further configured to: \ncommunicate with a physical satellite controller that does not execute within the firmware stack of the BMC [fig 1 elements 148], and wherein the BMC is arranged to provide requests for system management information to the physical satellite controller [paragraphs 41, 45 ]. \n\nWith regards to claim 4, Ayanam teaches the BMC of claim 3, wherein the BMC communicates with the physical satellite controller via a management bus, and wherein the management bus is managed by an Intelligent Chassis Management Bridge (ICMB) if the physical satellite controller resides outside a chassis in which the BMC resides [paragraph 41, IPMI includes ICMB]. \n\n\n\nWith regards to claim 8, Ayanam teaches the BMC of claim 2, wherein the processing circuitry is included as part of a special purpose application-specific integrated circuit (ASIC) [paragraph 81]. \n\nWith regards to claim 9, Ayanam teaches the BMC of claim 8, wherein the ASIC further includes a front panel controller to control a front panel and to receive user inputs [paragraph 81]. \n\n\nClaim Rejections - 35 USC § 103\nThe following is a quotation of 35 U.S.C. 103 which forms the basis for all obviousness rejections set forth in this Office action:\nA patent for a claimed invention may not be obtained, notwithstanding that the claimed invention is not identically disclosed as set forth in section 102, if the differences between the claimed invention and the prior art are such that the claimed invention as a whole would have been obvious before the effective filing date of the claimed invention to a person having ordinary skill in the art to which the claimed invention pertains. Patentability shall not be negated by the manner in which the invention was made.\n\nClaim s 6-7 is/are rejected under 35 U.S.C. 103 as being unpatentable over US Patent Application Publication No. 20140280837 to Ayanam et al. (hereinafter Ayanam) in view of US Patent Application Publication No. 20070255430 to Sharma et al. (hereinafter Sharma).\nWith regards to claim 6, Ayanam is silent as to the BMC of claim 2, wherein the processing circuitry provides an application programming interface (API) for providing monitoring information. \n However, Sharma teaches a BMC having processing circuitry that provides an application programming interface (API) for providing monitoring information [Sharma paragraph 10] for the benefit of adapting a system to legacy and future IPMI specifications [Sharma paragraph 10]. \nIt would have been obvious to one of ordinary skill in the art before the effective filing date of the claimed invention to combine the teachings of Ayanam and Sharma to have processing circuitry provides an application programming interface (API) for providing monitoring information [Sharma paragraph 10] for the benefit of adapting a system to legacy and future IPMI specifications [Sharma paragraph 10].\n\nWith regards to claim 7, the combination of Ayanam and Sharma teaches the BMC of claim 6, wherein the API complies with an Intelligent Platform Management Interface (IPMI) specification [Sharma paragraph 10], combined under the same rationale as above. \n\nClaim 10 is/are rejected under 35 U.S.C. 103 as being unpatentable over US Patent Application Publication No. 20140280837 to Ayanam et al. (hereinafter Ayanam) in view of US Patent Application Publication No. 20140365641 to Cho et al. (hereinafter Cho).\nWith regards to claim 10, is silent as to the BMC of claim 2, wherein at least one virtual satellite controller of the plurality of virtual satellite controllers corresponds to a set of Peripheral Component Interconnect Express (PCIe) card sensors.\n However, Cho teaches at least one virtual satellite controller of the plurality of virtual satellite controllers corresponds to a set of Peripheral Component Interconnect Express (PCIe) card sensors [Cho paragraphs 61, 68, 81, figs 2, 3], for the benefit of collecting PCI-e module data for monitoring [Cho paragraphs 5-10].\nIt would have been obvious to one of ordinary skill in the art before the effective filing date of the claimed invention to combine the teachings of Ayanam and Cho to have at least one virtual satellite controller of the plurality of virtual satellite controllers corresponds to a set of Peripheral Component Interconnect Express (PCIe) card sensors [Cho paragraphs 61, 68, 81, figs 2, 3], for the benefit of collecting PCI-e module data for monitoring [Cho paragraphs 5-10].\n\nAllowable Subject Matter\nClaim 5 is objected to as being dependent upon a rejected base claim, but would be allowable if rewritten in independent form including all of the limitations of the base claim and any intervening claims.\nThe following is a statement of reasons for the indication of allowable subject matter:  With regards to claim 5, the prior art of record alone or in combination fails to teach or fairly suggest further comprising: non-volatile memory to store sensor data records (SDRs) for the system sensors, wherein the SDRs include a controller identifier to identify which controller, of the BMC, the plurality of virtual satellite controllers, and the physical satellite controller, corresponds to a respective system sensor, and wherein a request for monitoring information include the controller identifier for the controller  corresponding to the system sensor for which the request is being made, in combination with other limitations found in the claim. \nConclusion\nThe prior art made of record and not relied upon is considered pertinent to applicant's disclosure.\nUS Patent Application Publication No. 20160248619 to Itkin teaches a BMC having processing circuitry and memory, the memory including firmware that further includes virtual BMC stacks.\nUS Patent Application Publication No. 20140280947 to Christopher et al. teaches a BMC having processing circuitry and memory, the memory including firmware that further includes virtual BMC stacks.\nUS Patent Application Publication No. 20130289926 to Maity et al. teaches a BMC having processing circuitry and memory, the memory including firmware that further includes virtual BMC stacks.\n",
    "NOABodyText": "CNTA  14/671,321  NOA  79869     15-10-aia AIA 07-03-aia The present application, filed on or after March 16, 2013, is being examined under the first inventor to file provisions of the AIA.  DETAILED ACTION  Election/Restrictions  08-07 AIA This application is in condition for allowance except for the presence of claim s 11-21 directed to species non-elected without traverse.  Accordingly, claim s 11-21 been cancelled.  EXAMINER'S AMENDMENT  13-02 AIA An examiner’s amendment to the record appears below. Should the changes and/or additions be unacceptable to applicant, an amendment may be filed as provided by 37 CFR 1.312. To ensure consideration of such an amendment, it MUST be submitted no later than the payment of the issue fee.  The application has been amended as follows:  12-151-10 AIA 12-51-10 Claim s 11-21 have been canceled.  Allowable Subject Matter  Claims 1, 4, 6-10 are allowed over the prior art of record.  13-03 AIA The following is an examiner’s statement of reasons for allowance:  With regards to claims 1, 4 and 6-10, the Examiner finds Applicant’s arguments submitted in the Remarks pages 6-7 and filed 8/28/17 persuasive, as such, said Applicant’s arguments are deemed as the reasons for allowance .  Any comments considered necessary by applicant must be submitted no later than the payment of the issue fee and, to avoid processing delays, should preferably accompany the issue fee.  Such submissions should be clearly labeled “Comments on Statement of Reasons for Allowance.”  Conclusion  Any inquiry concerning this communication or earlier communications from the examiner should be directed to DAVID E MARTINEZ whose telephone number is (571)272-4152.  The examiner can normally be reached on Monday-Friday 8:30am-5pm.  Examiner interviews are available via telephone, in-person, and video conferencing using a USPTO supplied web-based collaboration tool. To schedule an interview, applicant is encouraged to use the USPTO Automated Interview Request (AIR) at http://www.uspto.gov/interviewpractice.  If attempts to reach the examiner by telephone are unsuccessful, the examiner’s supervisor, Idriss N Alrobaye can be reached on (571)270-1023.  The fax phone number for the organization where this application or proceeding is assigned is 571-273-8300.  Information regarding the status of an application may be obtained from the Patent Application Information Retrieval (PAIR) system.  Status information for published applications may be obtained from either Private PAIR or Public PAIR.  Status information for unpublished applications is available through Private PAIR only.  For more information about the PAIR system, see http://pair-direct.uspto.gov. Should you have questions on access to the Private PAIR system, contact the Electronic Business Center (EBC) at 866-217-9197 (toll-free). If you would like assistance from a USPTO Customer Service Representative or access to the automated information system, call 800-786-9199 (IN USA OR CANADA) or 571-272-1000.        DEM  /DAVID E MARTINEZ/Primary Examiner, Art Unit 2181      Application/Control Number:  Page 2    Art Unit:         Application/Control Number:  Page 3    Art Unit:         Application/Control Number:  Page 4    Art Unit:",
    "applicationNumber": "14671321",
    "patentsCitedByExaminer": [
        {
            "referenceIdentifier": "20130289926",
            "abstract": "Certain aspects of the present disclosure are directed to a computer system, including: a hypervisor configured to run on a CPU and to provide a first domain; and a virtual baseboard management controller (BMC) stack configured to run in the first domain or as part of the hypervisor. Certain aspects of the present disclosure are directed to a non-transitory computer readable medium that stores instructions executable by at least one processor, the instructions including loading a virtual baseboard management controller (BMC) stack in a first domain of, or as a part of, a hypervisor running on the processor.",
            "claims": [
                "1. A computer system, comprising:\na hypervisor configured to run on a CPU and to provide a first domain; and\na virtual baseboard management controller (BMC) stack configured to run in the first domain.",
                "2. The computer system of claim 1, wherein the virtual BMC stack is configured to receive a first parameter relating to operation or performance or health of the computer system and measured by a first sensor.",
                "3. The computer system of claim 2, wherein the first parameter is transmitted to the virtual BMC stack through a system bus of the computer system.",
                "4. The computer system of claim 2, wherein the first parameter is a CPU temperature and is measured by a CPU temperature sensor.",
                "5. The computer system of claim 1, wherein the hypervisor is further configured to provide a second domain, wherein an operating system of the computer system is configured to run in the second domain.",
                "6. The computer system of claim 5, wherein the virtual BMC stack of the first domain is isolated from the operating system of the second domain.",
                "7. The computer system of claim 5, wherein the first domain is a privileged domain and includes a first network interface assigned a first MAC address, wherein the first MAC address functions as the MAC address of the hypervisor, wherein the virtual BMC stack is in communication with the first network interface and receives packets addressed to the first MAC address.",
                "8. The computer system of claim 7, wherein the first domain further includes a TCP/IP stack, wherein the first network interface is assigned a first IP address, wherein the first IP address functions as the IP address of the hypervisor, wherein the virtual BMC stack responds to IPMI commands addressed to the first IP address.",
                "9. The computer system of claim 5, wherein the first domain is a privileged domain, wherein the hypervisor is configured to provide a virtualized video controller, wherein the virtual BMC stack redirects video graphics output of the operating system rendered by the virtualized video controller to a remote client computer.",
                "10. The computer system of claim 1, wherein the first domain is an unprivileged domain and has a first network interface, wherein the first network interface writes a first packet received from the virtual BMC stack and addressed to a remote computer in a shared memory segment of the hypervisor, wherein the first network interface reads a second packet in the shared memory segment and addressed to the virtual BMC stack as well as sends the second packet to the virtual BMC stack.",
                "11. The computer system of claim 10, wherein the hypervisor includes a second domain that is a privileged domain, wherein the second domain has a second network interface, wherein the second network interface reads the first packet written in the shared memory segment by the first network interface and forwards the first packet en route to the remote computer.",
                "12. The computer system of claim 1, further comprising a BMC component chip in communication through a management bus with a plurality of sensors each sensing a parameter relating to operation or performance or health of the computer system, wherein the BMC component chip transmits a plurality of sensed parameters to the virtual BMC stack through a system bus.",
                "13. The computer system of claim 12, wherein the BMC component chip is not a full-fledged service processor and does not independently provide substantial baseboard management functions.",
                "14. The computer system of claim 12, wherein the BMC component chip is in communication with a first temperature sensor and a second temperature sensor through a management bus, wherein the first temperature sensor measures a first temperature in a first thermal zone of the computer system, wherein the second temperature sensor measures a second temperature in a second thermal zone of the computer system, wherein the BMC component chip collects the first and second temperatures and forwards the first and second temperatures to the virtual BMC stack.",
                "15. The computer system of claim 12, wherein the BMC component chip has firmware that processes the parameters received from the plurality of sensors and sends the processed results to the virtual BMC stack.",
                "16. The computer system of claim 1, wherein the virtual BMC stack has a management host application, wherein the computer system further includes a remote client computer configured to run a management client application, wherein the management host application and the management client application are configured to communicate out-of-band.",
                "17. A computer system, comprising:\na hypervisor configured to run on a CPU; and\na virtual baseboard management controller (BMC) stack configured to run as a part of the hypervisor.",
                "18. The computer system of claim 17, wherein the virtual BMC stack is configured to receive a first parameter relating to operation or performance or health of the computer system and measured by a first sensor.",
                "19. The computer system of claim 18, wherein the first parameter is transmitted to the CPU through a system bus of the computer system.",
                "20. The computer system of claim 18, wherein the first parameter is a CPU temperature and is measured by a CPU temperature sensor.",
                "21. The computer system of claim 17, wherein the hypervisor is further configured to provide a first domain, wherein an operating system of the computer system is configured to run in the first domain.",
                "22. The computer system of claim 21, wherein the hypervisor includes a first network interface assigned a first MAC address, wherein the virtual BMC stack is in communication with the first network interface and receives packets addressed to the first MAC address.",
                "23. The computer system of claim 22, wherein the hypervisor further includes a TCP/IP stack, wherein the first network interface is assigned a first IP address, wherein the virtual BMC stack responds to IPMI command addressed to the first address.",
                "24. The computer system of claim 17, further comprising a BMC component chip in communication through a management bus with a plurality of sensors each sensing a parameter relating to operation or performance or health of the computer system, wherein the BMC component chip transmits a plurality of sensed parameters to the virtual BMC stack through a system bus.",
                "25. The computer system of claim 24, wherein the BMC component chip is not a full-fledged service processor and does not independently provide substantial baseboard management functions.",
                "26. The computer system of claim 24, wherein the BMC component chip is in communication with a first temperature sensor and a second temperature sensor through a management bus, wherein the first temperature sensor measures a first temperature in a first thermal zone of the computer system, wherein the second temperature sensor measures a second temperature in a second thermal zone of the computer system, wherein the BMC component chip collects the first and second temperatures and forwards the first and second temperatures to the virtual BMC stack.",
                "27. The computer system of claim 24, wherein the BMC component chip has firmware that processes the parameters received from the plurality of sensors and sends the processed results to the virtual BMC stack.",
                "28. A non-transitory computer readable medium that stores instructions executable by at least one processor, the instructions comprising:\nloading a virtual baseboard management controller (BMC) stack in a first domain of, or as a part of, a hypervisor running on the processor.",
                "29. The non-transitory computer readable medium of claim 28, wherein the instructions include:\nexecuting the virtual BMC stack to receive a first parameter relating to operation or performance or health of the computer system and measured by a first sensor.",
                "30. The non-transitory computer readable medium of claim 29, wherein the first parameter is transmitted to the virtual BMC stack through a system bus of the computer system.",
                "31. The non-transitory computer readable medium of claim 29, where in the first parameter is a CPU temperature and is measured by a CPU temperature sensor.",
                "32. The non-transitory computer readable medium of claim 28, wherein the instructions include loading an operating system in a second domain of the hypervisor, wherein the virtual BMC stack is loaded in the first domain.",
                "33. The non-transitory computer readable medium of claim 32, wherein the virtual BMC stack of the first domain is isolated from the operating system of the second domain.",
                "34. The non-transitory computer readable medium of claim 32, wherein the first domain is a privileged domain and includes a first network interface assigned a first MAC address, wherein the first MAC address functions as the MAC address of the hypervisor, wherein the instructions include executing the virtual BMC stack to communication with the first network interface and to receive packets addressed to the first MAC address.",
                "35. The non-transitory computer readable medium of claim 34, wherein the first domain further includes a TCP/IP stack, wherein the first network interface is assigned a first IP address, wherein the first IP address functions as the IP address of the hypervisor, wherein the instructions include executing the virtual BMC stack to respond to IPMI commands addressed to the first IP address.",
                "36. The non-transitory computer readable medium of claim 32, wherein the first domain is a privileged domain, wherein the hypervisor is configured to provide a virtualized video controller, wherein the instructions include executing the virtual BMC stack to redirect video graphics output of the operating system rendered by the virtualized video controller to a remote client computer.",
                "37. The non-transitory computer readable medium of claim 28, wherein the virtual BMC stack is loaded in the first domain, wherein the first domain is an unprivileged domain and has a first network interface, wherein the first network interface writes a first packet received from the virtual BMC stack and addressed to a remote computer in a shared memory segment of the hypervisor, wherein the first network interface reads a second packet in the shared memory segment and addressed to the virtual BMC stack as well as sends the second packet to the virtual BMC stack.",
                "38. The non-transitory computer readable medium of claim 37, wherein the hypervisor includes a second domain that is a privileged domain, wherein the second domain has a second network interface, wherein the second network interface reads the first packet written in the shared memory segment by the first network interface and forwards the first packet en route to the remote computer.",
                "39. The non-transitory computer readable medium of claim 28, wherein the instructions include executing the virtual BMC stack to receive a plurality of sensed parameters from a BMC component chip through a system bus, wherein the BMC component chip is in communication through a management bus with a plurality of sensors each sensing a parameter relating to operation or performance or health of the computer system.",
                "40. The non-transitory computer readable medium of claim 39, wherein the BMC component chip is not a full-fledged service processor and does not independently provide substantial baseboard management functions.",
                "41. The non-transitory computer readable medium of claim 39, wherein the BMC component chip is in communication with a first temperature sensor and a second temperature sensor through a management bus, wherein the first temperature sensor measures a first temperature in a first thermal zone of the computer system, wherein the second temperature sensor measures a second temperature in a second thermal zone of the computer system, wherein the BMC component chip collects the first and second temperatures, wherein the instructions include executing the virtual BMC stack to receive the first and second temperatures.",
                "42. The non-transitory computer readable medium of claim 39, wherein the BMC component chip has firmware that processes the parameters received from the plurality of sensors, wherein the instructions include executing the virtual BMC stack to receive the processed results.",
                "43. The non-transitory computer readable medium of claim 28, wherein the virtual BMC stack has a management host application, wherein the instructions include executing the management host application to communicate, out-of-band, with a management client application on a remote client computer."
            ],
            "title": "Virtual Service Processor Stack"
        },
        {
            "referenceIdentifier": "20070255430",
            "abstract": "A fault tolerant, multi-protocol shelf management controller architecture that is extensible provides an intelligent platform management interface that is version indifferent as well as programmable and reconfigurable. The shelf management controller is arranged in a dual redundant configuration in a client-server mode and has a message driven configuration with the messages conforming to the Intelligent Platform Management Interface (IPMI) specification as extended by PICMG 3.0. In one embodiment, each shelf management controller includes at least one bit stream processor comprising sequenced stage machines implementing one or more finite state machines associated with one or more devices that are under control of the shelf management controller. The finite state machines could be hardware or software based. The shelf management controller is also modeled as a layered architecture that includes an IPMI API layer. The IPMI API layer enables the shelf manager to interface with legacy and future IPMI specifications.",
            "claims": [
                "1. A system for providing a shelf management functions for a shelf accommodating electronic components, the system comprising:\nat least two shelf management controllers associated with the shelf and disposed in an active-passive redundant configuration, each shelf management controller communicatively coupled to at least one controlled device on the shelf and optionally to at least one satellite controller located remote from each of the at least two shelf management controllers;\nprogrammable means stored in a machine readable medium accessible to each of the two shelf management controllers for implementing a layered architecture and capable of being executed by each of the shelf management controllers for causing the shelf management controller to provide a first shelf management function;\nat least one processor adapted to execute the layered architecture of the programming means to implement the shelf management function; and\nan application programming interface (API) interfacing with the layered architecture of the programming means to enable modification of the programming means according to a first communication protocol governing communication exchange between the shelf management controllers and a managed device controlled by the shelf management controllers as a result of the provision of the shelf management function wherein one of the at least two shelf management controllers is active and the other passive and wherein the active shelf management controller provides the shelf management function until a fail-over in which case the standby shelf management controller provides the shelf management function.",
                "2. A method for a redundant fault tolerant intelligent platform management including the steps of:\nproviding a first and a second shelf management controllers communicatively coupled to each other and to at least one managed device on the platform;\ndisposing each of the first and second shelf management controllers in active mode wherein both controllers store state information about the at least one managed device; and\ncontrolling the managed device using the first shelf management controller until fail over in which case making the second shelf management controller take over the function of the first shelf management controller."
            ],
            "title": "SHELF MANAGEMENT CONTROLLER WITH HARDWARE/SOFTWARE IMPLEMENTED DUAL REDUNDANT CONFIGURATION"
        },
        {
            "referenceIdentifier": "20140280837",
            "abstract": "Certain aspects of the present disclosure are directed to a baseboard management controller (BMC) managing a computer system including N computer nodes and N is an integer greater than 1. The BMC has: (a) a processor, (b) a first communication interface controller, (c) a memory. The memory stores a firmware, and the firmware is executed by a processor of the BMC. The firmware, when executed by the processor, is configured to (a) dynamically obtain the value of N, and (b) initiate N virtual BMC stacks each managing at least one health or performance related aspect of a respective one of the N computer nodes. The first and second virtual BMC stacks of the N virtual BMC stacks communicate, through the first communication interface controller, with the first and second computer nodes of the N computer nodes, respectively.",
            "claims": [
                "1. A baseboard management controller (BMC) managing a computer system including N computer nodes, N being an integer greater than 1, comprising:\na processor;\na first communication interface controller;\na memory having firmware stored therein, wherein the firmware, when executed by the processor, is configured to dynamically obtain the value of N; and\ninitiate N virtual BMC stacks each managing at least one health or performance related aspect of a respective one of the N computer nodes, wherein first and second virtual BMC stacks of the N virtual BMC stacks communicate, through the first communication interface controller, with the first and second computer nodes of the N computer nodes, respectively.",
                "2. The BMC of claim 1, wherein the firmware, when executed by the processor, is configured to access a configuration file to obtain the value of N.",
                "3. The BMC of claim 1, wherein the firmware, when executed by the processor, is configured to initiate a predetermined number of virtual BMC stacks, including the first virtual BMC stack, during a booting process, wherein the first virtual BMC stack communicates with each of the N computer nodes to obtain the value of N.",
                "4. The BMC of claim 3, wherein the first virtual BMC stack is configured to receive an IPMI message from each of the N computer notes during obtaining the value of N.",
                "5. The BMC of claim 4, wherein the first virtual BMC stack is configured to receive the IPMI message from a BIOS or an OS of the each computer node.",
                "6. The BMC of claim 1, wherein the firmware, when executed by the processor, is configured to initiate a predetermined number of virtual BMC stacks, including the first virtual BMC stack, during a booting process, wherein the first virtual BMC stack receives an IPMI message from one of the N computer nodes, the IPMI message indicating the value of N.",
                "7. The BMC of claim 1, wherein each of the virtual BMC stacks implements all management functions for managing health and performance related aspects of the respective one of the N computer nodes.",
                "8. The BMC of claim 1, wherein each of the virtual BMC stacks includes a Web server, a management program, a redirection program, and a virtual media program.",
                "9. The BMC of claim 1, wherein the first communication interface controller is a controller for controlling one of a keyboard controller style (\"KCS\") interface, a system management interface chip (\"SMIC\") interface, a block transfer (\"BT\") interface, an SMBus System Interface (SSIF), an IPMB interface, a USB interface, a serial/modem interface, and a network interface.",
                "10. The BMC of claim 1, further comprising a second communication interface controller different from the first communication interface controller, wherein the first and second virtual BMC stacks communicate, through the second communication interface controller, with the first and second computer nodes, respectively.",
                "11. A base board management controller (BMC) implemented method for managing a computer system having N computer nodes, N being an integer greater than 1, comprising:\ndynamically obtaining, at the BMC, the value of N by accessing a configuration file by a firmware stored in a memory of the BMC; and\ninitiating N virtual BMC stacks at a processor, each managing at least one health or performance related aspect of a respective one of the N computer nodes, wherein first and second virtual BMC stacks of the N virtual BMC stacks communicate, through a first communication interface controller, with the first and second computer nodes of the N computer nodes, respectively.",
                "12. The BMC implemented method of claim 11, comprising:\ninitiating, at the BMC, a predetermined number of virtual BMC stacks, including the first virtual BMC stack, during a booting process, wherein the first virtual BMC stack communicates with each of the N computer nodes to obtain the value of N.",
                "13. The BMC implemented method of claim 12, further comprising:\nreceiving, at the first virtual BMC stack, an IPMI message from each of the N computer notes during obtaining the value of N; and\nreceiving, at the first virtual BMC stack, the IPMI message from a BIOS or an OS of the each computer node.",
                "14. The BMC implemented method of claim 11, further comprising:\ninitiating, at the BMC, a predetermined number of virtual BMC stacks, including the first virtual BMC stack, during a booting process, wherein the first virtual BMC stack receives an IPMI message from one of the N computer nodes, the IPMI message indicating the value of N.",
                "15. The BMC implemented method of claim 11, wherein each of the virtual BMC stacks implements all management functions for managing health and performance related aspects of the respective one of the N computer nodes.",
                "16. The BMC implemented method of claim 11, wherein each of the virtual BMC stacks includes a Web server, a management program, a redirection program, and a virtual media program.",
                "17. The BMC implemented method of claim 11, wherein the first communication interface controller is a controller for controlling one of a keyboard controller style (\"KCS\") interface, a system management interface chip (\"SMIC\") interface, a block transfer (\"BY\") interface, an SMBus System Interface (SSIF), an IPMB interface, a USB interface, a serial/modem interface, and a network interface.",
                "18. The BMC implemented method of claim 11, further comprising:\nthe first and second virtual BMC stacks communicating, through a second communication interface controller, with the first and second computer nodes, respectively, wherein the second communication interface controller is different from the first communication interface controller.",
                "19. A non-transitory computer storage medium having computer-executable instructions stored thereon which, when executed by a processor of a base board management controller (BMC), cause the processor to:\ndynamically obtain a value of N, N being an integer greater than 1; and\ninitiate N virtual BMC stacks at the processor, each managing at least one health or performance related aspect of a respective one of the N computer nodes, wherein first and second virtual BMC stacks of the N virtual BMC stacks communicate, through a first communication interface controller, with the first and second computer nodes of the N computer nodes, respectively.",
                "20. The non-transitory computer storage medium of claim 19, wherein the computer-executable instructions cause the processor to initiate, at the BMC, a predetermined number of virtual BMC stacks, including the first virtual BMC stack, during a booting process, wherein the first virtual BMC stack communicates with each of the N computer nodes to obtain the value of N.",
                "21. The non-transitory computer storage medium of claim 19, wherein the computer-executable instructions cause the processor to receive, at the first virtual BMC stack, an IPMI message from each of the N computer notes during obtaining the value of N; and\nreceive, at the first virtual BMC stack, the IPMI message from a BIOS or an OS of the each computer node.",
                "22. The non-transitory computer storage medium of claim 19, wherein the computer-executable instructions cause the processor to initiate, at the BMC, a predetermined number of virtual BMC stacks, including the first virtual BMC stack, during a booting process, wherein the first virtual BMC stack receives an IPMI message from one of the N computer nodes, the IPMI message indicating the value of N.",
                "23. The non-transitory computer storage medium of claim 19, wherein each of the virtual BMC stacks implements all management functions for managing health and performance related aspects of the respective one of the N computer nodes, and each of the virtual BMC stacks includes a Web server, a management program, a redirection program, and a virtual media program.",
                "24. The non-transitory computer storage medium of claim 19, wherein the first communication interface controller is a controller for controlling one of a keyboard controller style (\"KCS\") interface, a system management interface chip (\"SMIC\") interface, a block transfer (\"BT\") interface, an SMBus System Interface (SSIF), an IPMB interface, a USB interface, a serial/modem interface, and a network interface.",
                "25. The non-transitory computer storage medium of claim 19, wherein the computer-executable instructions cause the processor to communicate the first and second virtual BMC stacks, through a second communication interface controller, with the first and second computer nodes, respectively, wherein the second communication interface controller is different from the first communication interface controller."
            ],
            "title": "DYNAMIC SCALABLE BASEBOARD MANAGEMENT CONTROLLER STACKS ON SINGLE HARDWARE STRUCTURE"
        },
        {
            "referenceIdentifier": "20140280947",
            "abstract": "Certain aspects of the present disclosure are directed to a baseboard management controller (BMC) managing a computer system including N computer nodes. The BMC has: (a) a processor, (b) a physical network interface controller, (c) a first communication interface controller, (d) a memory having firmware stored. The firmware can: (a) initiate N virtual BMC stacks each managing at least one health or performance related aspect of a respective one of the N computer nodes, and (b) initiate N virtual network interface controllers each communicating with the physical network interface controller. Each of the virtual BMC stacks has a network interface configured to communicate with a respective virtual network interface controller, and each of the N virtual BMC stacks is configured to communicate with a network connected to the physical network interface controller through a virtual network interface controller.",
            "claims": [
                "1. A baseboard management controller (BMC) managing a computer system including N computer nodes, N being an integer greater than 1, comprising:\na processor;\na physical network interface controller;\na first communication interface controller;\na memory having firmware stored therein, wherein the firmware, when executed by the processor, is configured to initiate N virtual BMC stacks each managing at least one health or performance related aspect of a respective one of the N computer nodes; and\ninitiate N virtual network interface controllers each communicating with the physical network interface controller;\nwherein each of the virtual BMC stacks has a network interface configured to communicate with a respective one of the virtual network interface controllers, and wherein each of the N virtual BMC stacks is configured to communicate with a network connected to the physical network interface controller through the respective one virtual network interface controller; and\nwherein first and second virtual BMC stacks of the N virtual BMC stacks communicate, through the first communication interface controller, with first and second computer nodes of the N computer nodes, respectively.",
                "2. The BMC of claim 1, wherein the firmware, when executed by the processor, is configured to obtain and assign a unique virtual MAC address for each of the N virtual network interface controllers.",
                "3. The BMC of claim 2, wherein the firmware, when executed by the processor, is configured to dynamically generate the unique virtual MAC address for each of the N virtual network interface controllers.",
                "4. The BMC of claim 2, wherein the firmware, when executed by the processor, is configured to obtain the unique virtual MAC address for each of the N virtual network interface controllers from a dynamic MAC address protocol server in the network.",
                "5. The BMC of claim 2, wherein the firmware, when executed by the processor, is configured to obtain an IP address dynamically for each of the N virtual network interface controllers using the virtual MAC address of the each virtual network interface controller.",
                "6. The BMC of claim 2, wherein the firmware, when executed by the processor, is configured to instruct the physical network interface controller to receive a network packet addressed to a first IP address assigned to a first virtual network interface controller and to forward the network packet to the first virtual network interface controller.",
                "7. The BMC of claim 1, wherein the firmware, when executed by the processor, is configured to initiate a management service module, wherein the management service module has a network interface configured to access the physical network interface controller directly.",
                "8. The BMC of claim 7, wherein the firmware, when executed by the processor, is configured to instruct the physical network interface controller to receive a network packet addressed to a second IP address assigned to the physical network interface controller and to forward the network packet to the management service module.",
                "9. The BMC of claim 7, wherein each of the virtual BMC stacks includes a Web server and a management program, wherein the management service module includes a redirection program and a virtual media program.",
                "10. The BMC of claim 1, wherein the first communication interface controller is a controller for controlling one of a keyboard controller style (\"KCS\") interface, a system management interface chip (\"SMIC\") interface, a block transfer (\"BT\") interface, SMBus System Interface (SSIF), an IPMB interface, a USB interface, a serial/modem interface, and a network interface.",
                "11. The BMC of claim 1, further comprising a second communication interface controller different from the first communication interface controller, wherein the first and second virtual BMC stacks communicate, through the second communication interface controller, with the first and second computer nodes, respectively.",
                "12. A baseboard management controller (BMC) implemented method of managing a computer system including N computer nodes, N being an integer greater than 1, comprising:\ninitiating, at the BMC, N virtual BMC stacks each managing at least one health or performance related aspect of a respective one of the N computer nodes;\ninitiating N virtual network interface controllers each communicating with the physical network interface controller; and\nobtaining and assigning a unique virtual MAC address for each of the N virtual network interface controllers;\nwherein each of the virtual BMC stacks has a network interface configured to communicate with a respective one of the virtual network interface controllers, and wherein each of the N virtual BMC stacks is configured to communicate with a network connected to the physical network interface controller through the respective one virtual network interface controller; and\nwherein first and second virtual BMC stacks of the N virtual BMC stacks communicate, through the first communication interface controller, with first and second computer nodes of the N computer nodes, respectively.",
                "13. The BMC implemented method of claim 12, comprising:\ndynamically generating the unique virtual MAC address for each of the N virtual network interface controllers;\nobtaining the unique virtual MAC address for each of the N virtual network interface controllers from a dynamic MAC address protocol server in the network; and\nobtaining an IP address dynamically for each of the N virtual network interface controllers using the virtual MAC address of the each virtual network interface controller.",
                "14. The BMC implemented method of claim 12, comprising:\ninstructing the physical network interface controller to receive a network packet addressed to a first IP address assigned to a first virtual network interface controller and to forward the network packet to the first virtual network interface controller;\ninitiating a management service module, wherein the management service module has a network interface configured to access the physical network interface controller directly; and\ninstructing the physical network interface controller to receive a network packet addressed to a second IP address assigned to the physical network interface controller and to forward the network packet to the management service module.",
                "15. The BMC implemented method of claim 12, wherein each of the virtual BMC stacks includes a Web server and a management program, and wherein the management service module includes a redirection program and a virtual media program.",
                "16. The BMC implemented method of claim 12, wherein the first communication interface controller comprises a controller for controlling one of a keyboard controller style (\"KCS\") interface, a system management interface chip (\"SMIC\") interface, a block transfer (\"BT\") interface, SMBus System Interface (SSIF), an IPMB interface, a USB interface, a serial/modem interface, and a network interface.",
                "17. A non-transitory computer storage medium having computer-executable instructions stored thereon which, when executed by a processor of a baseboard management controller (BMC), cause the processor to initiate N virtual BMC stacks each managing at least one health or performance related aspect of a respective one of N computer nodes; and\ninitiate N virtual network interface controllers each communicating with a physical network interface controller;\nwherein each of the virtual BMC stacks has a network interface configured to communicate with a respective one of the virtual network interface controllers, and wherein each of the N virtual BMC stacks is configured to communicate with a network connected to the physical network interface controller through the respective one virtual network interface controller; and\nwherein first and second virtual BMC stacks of the N virtual BMC stacks communicate, through the first communication interface controller, with first and second computer nodes of the N computer nodes, respectively.",
                "18. The non-transitory computer storage medium of claim 17, wherein the computer-executable instructions, when executed by the processor, cause the processor to obtain and assign a unique virtual MAC address for each of the N virtual network interface controllers;\ndynamically generate the unique virtual MAC address for each of the N virtual network interface controllers;\nobtain the unique virtual MAC address for each of the N virtual network interface controllers from a dynamic MAC address protocol server in the network; and\nobtain an IP address dynamically for each of the N virtual network interface controllers using the virtual MAC address of the each virtual network interface controller.",
                "19. The non-transitory computer storage medium of claim 17, wherein the computer-executable instructions, when executed by the processor, cause the processor to instruct the physical network interface controller to receive a network packet addressed to a first IP address assigned to a first virtual network interface controller and to forward the network packet to the first virtual network interface controller;\ninitiate a management service module, wherein the management service module has a network interface configured to access the physical network interface controller directly; and\ninstruct the physical network interface controller to receive a network packet addressed to a second IP address assigned to the physical network interface controller and to forward the network packet to the management service module.",
                "20. The non-transitory computer storage medium of claim 17, wherein the first communication interface controller comprises a controller for controlling one of a keyboard controller style (\"KCS\") interface, a system management interface chip (\"SMIC\") interface, a block transfer (\"BT\") interface, SMBus System Interface (SSIF), an IPMB interface, a USB interface, a serial/modem interface, and a network interface."
            ],
            "title": "SCALABLE BMC MANAGEMENT STACKS USING VIRTUAL NETWORKS ON SINGLE PHYSICAL NETWORK DEVICE"
        },
        {
            "referenceIdentifier": "20160248619",
            "abstract": "A network adapter includes one or more ports and circuitry. The one or more ports are configured to connect to a communication network. The circuitry is coupled to a network node that includes multiple hosts, and is configured to exchange management packets between a control server and a Baseboard Management Controller (BMC) that runs at least first and second BMC instances that share a single MAC address and are associated respectively with first and second hosts, and to exchange, over the communication network via the one or more ports, data packets between the hosts and one or more remote nodes.",
            "claims": [
                "1. A network adapter, comprising:\none or more ports, which are configured to connect to a communication network; and\ncircuitry, which is coupled to a network node that comprises multiple hosts, and which is configured to exchange management packets between a control server and a Baseboard Management Controller (BMC) that runs at least first and second BMC instances that share a single MAC address and are associated respectively with first and second hosts, and to exchange, over the communication network via the one or more ports, data packets between the hosts and one or more remote nodes.",
                "2. The network adapter according to claim 1, wherein the circuitry is configured to exchange the management packets by maintaining respective associations between the first and second BMC instances and the first and second hosts.",
                "3. The network adapter according to claim 2, wherein the circuitry is configured to maintain the associations by holding a respective different IP address for each of the first and second BMC instances.",
                "4. The network adapter according to claim 3, wherein the circuitry is configured to exchange the management packets by routing the management packets related to the first or second BMC instance based at least on one of the respective IP address and the single MAC address.",
                "5. The network adapter according to claim 2, wherein the circuitry is configured to exchange the management packets by routing the management packets to and from the first or second BMC instance based on the associations.",
                "6. The network adapter according to claim 2, wherein the circuitry is configured to emulate, using the associations, a separate respective NIC for each of the first and second BMC instances.",
                "7. The network adapter according to claim 2, wherein the network adapter comprises physical interfaces of two or more different types for exchanging the management packets, and wherein the circuitry is configured to select a physical interface for each of the first and second BMC instances based on the respective associations.",
                "8. The network adapter according to claim 7, wherein the circuitry is configured to transition from using a physical interface of a first type by one of the first and second BMC instances to using a physical interface of a second different type by the same BMC instance.",
                "9. The network adapter according to claim 8, wherein the circuitry is configured to transition from using the physical interface of the first type when the physical interface of the first type becomes unavailable.",
                "10. The network adapter according to claim 1, wherein the circuitry is configured to identify a management packet that is destined for multiple BMC instances, to send the identified management packet to the BMC only once when the BMC supports duplication of packets to multiple BMC instances, and to send a respective duplicate of the identified management packet to each of the BMC instances to which the identified packet is destined, otherwise.",
                "11. A method for remote management, comprising:\nin a network node that comprises multiple hosts and a Baseboard Management Controller (BMC) that runs at least first and second BMC instances that share a single MAC address and are associated respectively with first and second hosts, exchanging over a communication network management packets between a control server and the BMC using a network adapter; and\nexchanging using the network adapter, over the communication network, data packets between the hosts and one or more remote nodes.",
                "12. The method according to claim 11, wherein exchanging the management packets comprises maintaining respective associations between the first and second BMC instances and the first and second hosts.",
                "13. The method according to claim 12, wherein maintaining the associations comprises holding a respective different IP address for each of the first and second BMC instance.",
                "14. The method according to claim 13, wherein exchanging the management packets comprises routing the management packets related to the first or second BMC instance based at least on one of the respective IP address and the single MAC address.",
                "15. The method according to claim 12, wherein exchanging the management packets comprises routing the management packets to and from the first or second BMC instance based on the associations.",
                "16. The method according to claim 12, and comprising emulating, using the associations, a separate respective NIC for each of the first and second BMC instances.",
                "17. The method according to claim 12, wherein the network adapter comprises physical interfaces of two or more different types for exchanging the management packets, and wherein exchanging the management packets comprises selecting a physical interface for each of the first and second BMC instances based on the respective associations.",
                "18. The method according to claim 17, wherein selecting the physical interface comprises transitioning from using a physical interface of a first type by one of the first and second BMC instances to using a physical interface of a second different type by the same BMC instance.",
                "19. The method according to claim 18, wherein selecting the physical interface comprises transitioning from using the physical interface of the first type when the physical interface of the first type becomes unavailable.",
                "20. The method according to claim 11, wherein exchanging the management packets comprises identifying a management packet that is destined for multiple BMC instances, sending the identified management packet to the BMC only once when the BMC supports duplication of packets to multiple BMC instances, and sending a respective duplicate of the identified management packet to each of the BMC instances to which the identified packet is destined, otherwise.",
                "21. A network node, comprising:\nmultiple hosts;\na Baseboard Management Controller (BMC) that is configured to run at least first and second BMC instances that share a single MAC address, and are associated respectively with first and second hosts; and\na network adapter, which is configured to exchange, over a communication network, management packets between a control server and the BMC, and to exchange, over the communication network, data packets between the hosts and one or more remote nodes."
            ],
            "title": "DIFFERENTIATING AMONG MULTIPLE MANAGEMENT CONTROL INSTANCES USING IP ADDRESSES"
        },
        {
            "referenceIdentifier": "20140365641",
            "abstract": "A microserver includes a plurality of processor modules, a communicator configured to perform communication with an external managing server, and a module manager configured to collect apparatus information about at least one of the plurality of processor modules and to provide an Intelligent Platform Management Interface service with respect to the at least one of the plurality of processor modules for the external managing server.",
            "claims": [
                "1. A microserver, comprising:\na plurality of processor modules;\na communicator configured to perform communication with an external managing server; and\na module manager configured to collect apparatus information about at least one of the plurality of processor modules, and to provide an Intelligent Platform Management Interface service with respect to the at least one of the plurality of processor modules for the external managing server.",
                "2. The microserver according to claim 1, wherein the Intelligent Platform Management Interface service is configured to perform at least one of monitoring, logging, recovery, inventory, and hardware control with respect to the processor modules.",
                "3. The microserver according to claim 1, wherein the module manager is configured to virtualize such that a processor module that corresponds to the apparatus information is configured to transmit the apparatus information to the external managing server.",
                "4. The microserver according to claim 1, wherein when control information about a specific processor module is received from the external managing server, the module manager is configured to perform hardware control that corresponds to the control information about the specific processor module.",
                "5. The microserver according to claim 1, wherein the module manager is configured to sense an abnormality in the at least one of the plurality of processor modules based on the apparatus information, and to transmit, to the external managing server, the apparatus information about the at least one of the plurality of processor modules for which the abnormality has been sensed.",
                "6. The microserver according to claim 1, further comprising a collector configured to collect additional information that includes at least one of fan state information, power information, and network information of the microserver, wherein the module manager is configured to combine the additional information and the apparatus information, and to provide the Intelligent Platform Management Interface service with respect to the at least one of the plurality of processor modules.",
                "7. The microserver according to claim 1, wherein the module manager is configured to virtualize the Intelligent Platform Management Interface service with respect to the at least one of the plurality of processor modules and to provide the Intelligent Platform Management Interface service in a virtualized form for the external managing server.",
                "8. The microserver according to claim 7, wherein the module manager is configured to virtualize the Intelligent Platform Management Interface service with respect to the at least one of the plurality of processor modules using at least one of a Full Virtualization method, a Para-Virtualization method, and an Application Virtualization method.",
                "9. The microserver according to claim 1, wherein the apparatus information is at least one of information about a central processing unit, operation information of the processor modules, and state information of the processor modules.",
                "10. The microserver according to claim 1, further comprising a common interface bus configured to transceive data and a control command inside the microserver, wherein the common interface bus is at least one interface bus of an Inter-Integrated Circuit interface, a Peripheral Component Interconnect Express interface, and a System Management Bus interface.",
                "11. The microserver according to claim 10, wherein the module manager is configured to collect the apparatus information about the at least one of the plurality of processor modules using the Inter-Integrated Circuit interface.",
                "12. The microserver according to claim 1, wherein the at least one of the plurality of processor modules comprises:\na central processing unit configured to perform control operations;\na module controller configured to control an operation of the central processing unit; and\na collector configured to collect the apparatus information about the at least one of the plurality of processor modules and to provide the apparatus information to the module manager.",
                "13. The microserver according to claim 12, wherein the collector is configured to at least one of proceed with a recovery of the at least one of the plurality of processor modules under a control of the module manager and upgrade a firmware of the module controller.",
                "14. The microserver according to claim 1, further comprising a baseboard where the communicator and module manager are mounted and that includes a plurality of slots configured to be connected to the plurality of processor modules, wherein the plurality of processor modules are configured to be at least one of attached to and detached from the plurality of slots.",
                "15. The microserver according to claim 14, further comprising:\nan input/output device including at least one input/output card configured to transceive data from an outside; and\na switch configured to selectively connect the input/output device and the plurality of processor modules, wherein the switch comprises a Peripheral Component Interconnect Express switch circuit, and is configured to selectively adjust a connection between the plurality of processor modules and the at least one input/output card.",
                "16. A processor module mounted on a baseboard of a microserver, the processor module, comprising:\na central processing unit configured to perform control operations;\na module controller configured to control the processor module; and\na collector configured to collect apparatus information about the processor module and to transmit the apparatus information to the microserver so that an Intelligent Platform Management Interface service with respect to the processor module is provided to a managing server.",
                "17. The processor module according to claim 16, wherein the collector is configured to at least one of proceed with a recovery of the processor module under a control of the microserver and upgrade a firmware of the module controller.",
                "18. A method of controlling a plurality of processor modules in a microserver, the method comprising:\ncollecting, in a module manager of the microserver, apparatus information about at least one of the plurality of processors; and\nproviding an Intelligent Platform Management Interface service with respect to the at least one of the plurality of processor modules using the apparatus information.",
                "19. The method according to claim 18, wherein the providing the Intelligent Platform Management Interface service virtualizes the Intelligent Platform Management Interface service with respect to the at least one of the plurality of processor modules and provides the Intelligent Platform Management Interface service in a virtualized form to an external managing server.",
                "20. The method according to claim 19, wherein the providing the Intelligent Platform Management Interface service virtualizes the Intelligent Platform Management Interface service with respect to at least one of the plurality of processor modules using at least one of a Full Virtualization method, a Para Virtualization method, and an Application Virtualization method.",
                "21. A non-transitory computer-readable recording medium containing instructions which, when executed by an electronic processing element, cause the electronic processing element to perform the method of claim 18."
            ],
            "title": "PROCESSOR MODULE, SERVER SYSTEM AND METHOD OF CONTROLLING PROCESSOR MODULE"
        }
    ],
    "firstInventorToFileIndicator": "Y",
    "applicationStatusCode": 150,
    "applicationTypeCode": "UTL",
    "entityStatusData": {
        "smallEntityStatusIndicator": false,
        "businessEntityStatusCategory": "Regular Undiscounted"
    },
    "filingDate": "2015-03-27",
    "class/subclass": "710/301",
    "nationalStageIndicator": false,
    "firstInventorName": "David R. Richardson",
    "cpcClassificationBag": [
        "G06F13/4282",
        "G06F13/362",
        "G06F11/3058",
        "G06F11/301",
        "G06F11/3031"
    ],
    "effectiveFilingDate": "2015-03-27",
    "publicationDateBag": [
        "2016-09-29"
    ],
    "publicationSequenceNumberBag": [
        "0283424"
    ],
    "earliestPublicationDate": "2016-09-29",
    "applicationTypeLabelName": "Utility",
    "applicationStatusDate": "2018-02-21",
    "class": "710",
    "applicationTypeCategory": "REGULAR",
    "applicationStatusDescriptionText": "Patented Case",
    "patentNumber": "9916270",
    "grantDate": "2018-03-13",
    "applicantBag": [
        {
            "applicantNameText": "Intel Corporation",
            "correspondenceAddressBag": [
                {
                    "cityName": "Santa Clara",
                    "geographicRegionName": "CALIFORNIA",
                    "geographicRegionCode": "CA",
                    "nameLineOneText": "Intel Corporation",
                    "postalAddressCategory": "postal"
                }
            ]
        }
    ],
    "firstApplicantName": "Intel Corporation",
    "customerNumber": 45457,
    "groupArtUnitNumber": "2181",
    "earliestPublicationNumber": "US20160283424A1",
    "inventionTitle": "VIRTUAL INTELLIGENT PLATFORM MANAGEMENT INTERFACE (IPMI) SATELLITE CONTROLLER AND METHOD",
    "applicationConfirmationNumber": 7354,
    "examinerNameText": "MARTINEZ, DAVID E",
    "subclass": "301",
    "publicationCategoryBag": [
        "Granted/Issued",
        "Pre-Grant Publications - PGPub"
    ],
    "docketNumber": "P80131 (884.S26US1)",
    "title": "VIRTUAL INTELLIGENT PLATFORM MANAGEMENT INTERFACE (IPMI) SATELLITE CONTROLLER AND METHOD"
}