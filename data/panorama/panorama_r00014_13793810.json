{
  "id": 14,
  "abstract": "ABSTRACTABST  13793810  1  2   2013-03-11   31234-0046001/45518-US-PAT  Abstract A computer-implemented authenticated encryption method for converting a plaintext message into a ciphertext message. The method includes dividing the plaintext message into at least two working blocks, each working block having a mathematical relationship to the plaintext message. For each working block, a working block ciphertext is computed as a function of such working block, a deterministic working block initialization vector, and a deterministic working block encryption key.  For each working block, a message authentication tag is computed as a function of a deterministic working block message authentication key and at least one of (a) the working block ciphertext computed for such working block and an indication corresponding to the mathematical relationship of such working block to the plaintext message and (b) such working block. The method further includes computing a global message authentication tag as a function of the message authentication tag computed for each working block and a global message authentication key. The ciphertext message comprises the working block ciphertext computed for each working block and the global message authentication tag.  -  49  -",
  "initialClaims": [
    "1. A computer-implemented authenticated encryption method for converting a plaintext message into a ciphertext message, said method comprising: dividing said plaintext message into at least two working blocks, each said working block having a mathematical relationship to said plaintext message; for each said working block, computing a working block ciphertext as a function of such working block, a deterministic working block initialization vector, and a deterministic working block encryption key; for each said working block, computing a message authentication tag as a function of a deterministic working block message authentication key and at least one of (a) the working block ciphertext computed for such working block and an indication corresponding to said mathematical relationship of such working block to said plaintext message and (b) such working block; computing a global message authentication tag as a function of the message authentication tag computed for each said working block and a global message authentication key; and wherein said ciphertext message comprises the working block ciphertext computed for each said working block and said global message authentication tag.",
    "2. The method of claim 1 wherein said ciphertext message further comprises the message authentication tag computed for each said working block.",
    "3. The method of claim 2 wherein said dividing said plaintext message into at least two working blocks comprises partitioning said plaintext message into at least two working blocks, and wherein, for each said working block, the indication corresponding to said mathematical relationship of such working block to said plaintext message comprises an indication corresponding to a position of such working block within said plaintext message.",
    "4. The method of claim 3 wherein, for each said working block, the deterministic working block initialization vector used to compute the working block ciphertext computed for such working block is a function of a global initialization vector and the indication corresponding to said position of such working block within said plaintext message.",
    "5. The method of claim 4 wherein, for each said working block, the deterministic working block encryption key used to compute the working block ciphertext computed for such working block is a single encryption key common to said at least two working blocks.",
    "6. The method of claim 5 wherein, for each said working block, the deterministic working block message authentication key used to compute the message authentication tag computed for such working block is said global message authentication key, wherein said computing a global message authentication tag is further a function of the length of each said working block, and wherein said computing a global message authentication tag is further a function of said global initialization vector.",
    "7. The method of claim 6 wherein, for each said working block, said computing a message authentication tag for such working block comprises computing a function of a deterministic working block message authentication key and such working block.",
    "8. The method of claim 6 wherein, for each said working block, said computing a message authentication tag for such working block comprises computing a function of a deterministic working block message authentication key, the working block ciphertext computed for such working block, and at least one of (a) the deterministic working block initialization vector used to compute the working block ciphertext computed for such working block and (b) the indication corresponding to the position of such working block within said plaintext message.",
    "9. The method of claim 5 wherein, for each said working block, the deterministic working block message authentication key used to compute the message authentication tag for such working block is a function of an initial value and the indication corresponding to the position of such working block within said plaintext message; wherein, for each said working block, said computing a message authentication tag for such working block comprises computing a function of a deterministic working block message authentication key and the working block ciphertext computed for such working block.",
    "10. A computer-implemented method for converting at least two ciphertext working blocks into a plaintext message, said at least two ciphertext working blocks associated with a global message authentication tag, said method comprising: for each said ciphertext working block, computing a plaintext working block as a function of such ciphertext working block, a deterministic working block initialization vector, and a deterministic working block decryption key; for each said ciphertext working block, computing a message authentication tag as a function of a deterministic working block message authentication key and at least one of (a) such ciphertext working block and an indication corresponding to a mathematical relationship of such ciphertext working block to said plaintext message and (b) the plaintext working block computed for such ciphertext working block; computing a global message authentication tag as a function of the message authentication tag computed for each said working block and a global message authentication key; comparing said computed global message authentication tag with said global message authentication tag associated with said at least two ciphertext working blocks; and wherein said plaintext message comprises each plaintext working block computed for each said ciphertext working block.",
    "11. The method of claim 10 wherein each said ciphertext working block is associated with a message authentication tag and wherein said method further comprises, for each said ciphertext working block, comparing the message authentication tag computed for such ciphertext working block with said message authentication tag associated with such ciphertext working block.",
    "12. The method of claim 11 wherein said plaintext message comprises the concatenation of each plaintext working block computed for each said ciphertext working block, and wherein, for each said ciphertext working block, the indication corresponding to said mathematical relationship of such ciphertext working block to said plaintext message comprises an indication corresponding to a position of the plaintext working block computed for such ciphertext working block within said plaintext message.",
    "13. The method of claim 12 wherein, for each said ciphertext working block, the deterministic working block initialization vector used to compute the plaintext working block for such ciphertext working block is a function of a global initialization vector and the indication corresponding to said position of the plaintext working block computed for such ciphertext working block within said plaintext message.",
    "14. The method of claim 13 wherein, for each said ciphertext working block, the deterministic working block decryption key used to compute the plaintext working block for such ciphertext working block is a single decryption key common to said at least two ciphertext working blocks.",
    "15. The method of claim 14 wherein, for each said ciphertext working block, the deterministic working block message authentication key used to compute the message authentication tag for such ciphertext working block is said global message authentication key, wherein said computing a global message authentication tag is further a function of the length of each plaintext working block computed for each said ciphertext working block, and wherein said computing a global message authentication tag is further a function of said global initialization vector.",
    "16. The method of claim 15 wherein, for each said ciphertext working block, said computing a message authentication tag comprises computing a function of a deterministic working block message authentication key and the plaintext working block computed for such ciphertext working block.",
    "17. The method of claim 15 wherein, for each said ciphertext working block, said computing a message authentication tag comprises computing a function of a deterministic working block message authentication key, such ciphertext working block, and at least one of (a) the deterministic working block initialization vector used to compute the plaintext working block for such ciphertext working block and (b) the indication corresponding to the position of the plaintext working block computed for such ciphertext working block within said plaintext message.",
    "18. The method of claim 14 wherein, for each said ciphertext working block, the deterministic working block message authentication key used to compute the message authentication tag for such ciphertext working block is a function of an initial value and the indication corresponding to the position of the plaintext working block computed for such ciphertext working block within said plaintext message; wherein, for each said ciphertext working block, said computing a message authentication tag for such ciphertext working block comprises computing a function of a deterministic working block message authentication key and such ciphertext working block.",
    "19. A computer-implemented message authentication method for producing message authentication information, said method comprising: dividing a message into at least two working blocks, each said working block having a mathematical relationship to said message; for each said working block, computing a message authentication tag as a function of such working block and at least one of (a) a global message authentication key and an indication corresponding to said mathematical relationship of such working block to said message and (b) a deterministic working block message authentication key that comprises an indication corresponding to said mathematical relationship of such working block to said message; computing a global message authentication tag as a function of the message authentication tag computed for each said working block and said global message authentication key; and wherein said message authentication information comprises said global message authentication tag.",
    "20. The method of claim 19 wherein said message authentication information further comprises the message authentication tag computed for each said working block, and wherein said dividing said message into at least two working blocks comprises partitioning said message into at least two working blocks.",
    "21. The method of claim 20 wherein, for each said working block, the indication corresponding to said mathematical relationship of such working block to said message comprises an indication corresponding to a position of such working block within said message, and wherein said computing a global message authentication tag is further a function of the length of each said working block.",
    "22. The method of claim 20 wherein, for each said working block, the deterministic working block message authentication key that comprises an indication corresponding to said mathematical relationship of such working block to said message is a function of an initial value and an indication corresponding to a position of such working block within said message.",
    "23. A computer-implemented method for determining the authenticity of at least two working blocks comprising a message, said at least two working blocks associated with a global message authentication tag, said method comprising: for each said working block, computing a message authentication tag as a function of such working block and at least one of (a) a global message authentication key and an indication corresponding to a mathematical relationship of such working block to said message and (b) a deterministic working block message authentication key that comprises an indication corresponding to said mathematical relationship of such working block to said message; computing a global message authentication tag as a function of the message authentication tag computed for each said working block and said global message authentication key; and comparing said computed global message authentication tag with said global message authentication tag associated with said at least two working blocks.",
    "24. The method of claim 23 wherein each said working block is associated with a message authentication tag and wherein said method further comprises, for each said working block, comparing the message authentication tag computed for such working block with said message authentication tag associated with said working block, and wherein said message comprises the concatenation of each said working block.",
    "25. The method of claim 24 wherein, for each said working block, the indication corresponding to said mathematical relationship of such working block to said message comprises an indication corresponding to a position of such working block within said message, and wherein said computing a global message authentication tag is further a function of the length of each said working block.",
    "26. The method of claim 24 wherein, for each said working block, the deterministic working block message authentication key that comprises an indication corresponding to said mathematical relationship of such working block to said message is a function of an initial value and an indication corresponding to a position of such working block within said message.",
    "27. The method of claim 1, said method further comprising: providing an updated plaintext message that is an update to said plaintext message; dividing said updated plaintext message into at least two updated working blocks, each said updated working block having a mathematical relationship to said updated plaintext message and corresponding to one of said working blocks; identifying at least one updated working block that is affected by said update to said plaintext message; for each identified updated working block, computing an updated working block ciphertext as a function of such identified updated working block, a deterministic working block initialization vector, and a deterministic working block encryption key; for each identified updated working block, computing an updated message authentication tag as a function of a deterministic working block message authentication key and at least one of (a) the updated working block ciphertext computed for such identified updated working block and an indication corresponding to said mathematical relationship of such identified updated working block to said updated plaintext message and (b) such identified updated working block; computing an updated global message authentication tag as a function of said global message authentication tag, the updated message authentication tag computed for each identified updated working block, the message authentication tag computed for the working block corresponding to each identified updated working block, and said global message authentication key; and wherein an updated ciphertext message comprises the working block ciphertext computed for each said working block not identified, if any, the updated working block ciphertext computed for each identified updated working block, and said updated global message authentication tag.",
    "28. A computer readable memory storing computer executable instructions thereon that when executed by a computer performs the method of at least one of Claims 1, 10, 19 and 23."
  ],
  "finalClaims": [
    "1. A computer-implemented authenticated encryption method for converting a plaintext message into a ciphertext message, said method comprising: dividing said plaintext message into at least two working blocks, each respective working block of said at least two working blocks having a mathematical relationship to said plaintext message; for each respective working block of said at least two working blocks: computing a working block ciphertext by using direct inputs that include said respective working block, a deterministic working block initialization vector, and a deterministic working block encryption key; and computing a message authentication tag for said respective working block by using direct inputs that include a deterministic working block message authentication key, the working block ciphertext computed for said respective working block, and said deterministic working block initialization vector used to compute said respective working block ciphertext for said respective working block, and wherein the message authentication tag for said respective working block is computed based on an indication corresponding to said mathematical relationship of said respective working block to said plaintext message, wherein the indication indicates a position of said respective working block within said plaintext message; computing a global message authentication tag as a function of the message authentication tag computed for each respective working block of said at least two working blocks and a global message authentication key; and transmitting, to a receiving device, said ciphertext message, wherein said ciphertext message comprises the working block ciphertext computed for each respective working block of said at least two working blocks and said global message authentication tag, and said global message authentication tag is used to authenticate the working block ciphertext for each respective working block of said at least two working blocks.",
    "2. The method of claim 1 wherein said ciphertext message further comprises the message authentication tag computed for each respective working block of said at least two working blocks.",
    "3. The method of claim 2 wherein said dividing said plaintext message into at least two working blocks comprises partitioning said plaintext message into at least two working blocks.",
    "4. The method of claim 3 wherein, for each respective working block of said at least two working blocks, the deterministic working block initialization vector used to compute the working block ciphertext computed for said respective working block is a function of a global initialization vector and the indication corresponding to said position of said respective working block within said plaintext message.",
    "5. The method of claim 4 wherein, for each respective working block of said at least two working blocks, the deterministic working block encryption key used to compute the working block ciphertext computed for said respective working block is a single encryption key common to said at least two working blocks.",
    "6. The method of claim 5 wherein, for each respective working block of said at least two working blocks, the deterministic working block message authentication key used to compute the message authentication tag computed for said respective working block is said global message authentication key, wherein said computing a global message authentication tag is further a function of a length of each respective working block of said at least two working blocks, and wherein said computing a global message authentication tag is further a function of said global initialization vector.",
    "7. The method of claim 6 wherein, for each respective working block of said at least two working blocks, said computing a message authentication tag for respective First Named Inventor Atsushi Yamada Attorney's Docket No.: 29717-2042001 / 45518-US- working block comprises computing a function of a deterministic working block message authentication key and said respective working block.",
    "8. The method of claim 6 wherein, for each respective working block of said at least two working blocks, said computing a message authentication tag for respective working block comprises computing a function of a deterministic working block message authentication key, the working block ciphertext computed for respective working block, and at least one of (a) the deterministic working block initialization vector used to compute the working block ciphertext computed for respective working block and (b) the indication corresponding to the position of respective working block within said plaintext message.",
    "9. The method of claim 5 wherein, for each respective working block of said at least two said working blocks, the deterministic working block message authentication key used to compute the message authentication tag for said respective working block is a function of an initial value and the indication corresponding to the position of respective working block within said plaintext message; wherein, for each respective working block of said at least two said working blocks, said computing a message authentication tag for said respective working block comprises computing a function of a deterministic working block message authentication key and the working block ciphertext computed for said respective working block.",
    "10. A computer-implemented method for converting at least two ciphertext working blocks into a plaintext message, said at least two ciphertext working blocks associated with a global message authentication tag, said method comprising: receiving said global message authentication tag; for each respective ciphertext working block of said at least two ciphertext working blocks: computing a plaintext working block by using direct inputs that include said respective ciphertext working block, a deterministic working block initialization vector, and a deterministic working block decryption key; First Named Inventor Atsushi Yamada Attorney's Docket No.: 29717-2042001 / 45518-US- computing a message authentication tag for said respective ciphertext working block by using direct inputs that include a deterministic working block message authentication key, said respective ciphertext working block, said deterministic working block initialization vector used to compute said respective plaintext working block for said respective ciphertext working block, and wherein the message authentication tag for said respective ciphertext working block is computed based on an indication corresponding to a mathematical relationship of said respective ciphertext working block to said plaintext message, wherein the indication indicates a position of said respective working block within said plaintext message; computing a global message authentication tag as a function of the message authentication tag computed for each respective ciphertext working block of said at least two ciphertext working blocks and a global message authentication key; comparing said computed global message authentication tag with said global message authentication tag associated with said at least two ciphertext working blocks; determining whether said at least two ciphertext working blocks are authenticated based on the comparing of said computed global message authentication tag with said global message authentication tag; and wherein said plaintext message comprises the plaintext working block computed for each respective ciphertext working block said at least two ciphertext working blocks.",
    "11. The method of claim 10 wherein each respective ciphertext working block of said at least two ciphertext working blocks is associated with a message authentication tag and wherein said method further comprises, for each respective ciphertext working block of said at least two ciphertext working blocks, comparing the message authentication tag computed for said respective ciphertext working block with said message authentication tag associated with said respective ciphertext working block.",
    "12. The method of claim 11 wherein said plaintext message comprises a concatenation of the plaintext working block computed for each respective ciphertext working block of said at least two ciphertext working blocks.",
    "13. The method of claim 12 wherein, for each respective ciphertext working block of said at least two ciphertext working blocks, the deterministic working block initialization vector used to compute the plaintext working block for said respective ciphertext working block is a function of a global initialization vector and the indication corresponding to said position of the plaintext working block computed for said respective ciphertext working block within said plaintext message.",
    "14. The method of claim 13 wherein, for each respective ciphertext working block of said at least two ciphertext working blocks, the deterministic working block decryption key used to compute the plaintext working block for said respective ciphertext working block is a single decryption key common to said at least two ciphertext working blocks.",
    "15. The method of claim 14 wherein, for each respective ciphertext working block of said at least two ciphertext working blocks, the deterministic working block message authentication key used to compute the message authentication tag for said respective ciphertext working block is said global message authentication key, wherein said computing a global message authentication tag is further a function of a length of the plaintext working block computed for each respective ciphertext working block of said at least two ciphertext working blocks, and wherein said computing a global message authentication tag is further a function of said global initialization vector.",
    "16. The method of claim 15 wherein, for each respective ciphertext working block of said at least two ciphertext working blocks, said computing a message authentication tag comprises computing a function of a deterministic working block message authentication key and the plaintext working block computed for respective ciphertext working block.",
    "17. The method of claim 15 wherein, for each respective ciphertext working block of said at least two ciphertext working blocks, said computing a message First Named Inventor Atsushi Yamada Attorney's Docket No.: 29717-2042001 / 45518-US- authentication tag comprises computing a function of a deterministic working block message authentication key, said respective ciphertext working block, and at least one of (a) the deterministic working block initialization vector used to compute the plaintext working block for said respective ciphertext working block and (b) the indication corresponding to the position of the plaintext working block computed for said respective ciphertext working block within said plaintext message.",
    "18. The method of claim 14 wherein, for each respective ciphertext working block of said at least two ciphertext working blocks, the deterministic working block message authentication key used to compute the message authentication tag for said respective ciphertext working block is a function of an initial value and the indication corresponding to the position of the plaintext working block computed for said respective ciphertext working block within said plaintext message; wherein, for each respective ciphertext working block of said at least two ciphertext working blocks, said computing a message authentication tag for said respective ciphertext working block comprises computing a function of a deterministic working block message authentication key and said respective ciphertext working block.",
    "19. A computer-implemented message authentication method for producing message authentication information, said method comprising: dividing a message into at least two working blocks, each respective working block of said at least two working blocks having a mathematical relationship to said message; for each respective working block of said at least two working blocks: computing a message authentication tag for said respective working block by using direct inputs that include said respective working block, a deterministic working block initialization vector used to compute a respective ciphertext working block for said respective working block, and wherein the message authentication tag for said respective working block is computed based on at least one of (a) a global message authentication key and an indication corresponding to said mathematical relationship of said respective working block to said message and (b) a deterministic working block message authentication key First Named Inventor Atsushi Yamada Attorney's Docket No.: 29717-2042001 / 45518-US- that comprises an indication corresponding to said mathematical relationship of said respective working block to said message, wherein the indication indicates a position of said respective working block within said message; computing a global message authentication tag as a function of the message authentication tag computed for each respective working block of said at least two working blocks and said global message authentication key; and transmitting, to a receiving device, said message authentication information, wherein said message authentication information comprises said global message authentication tag, and said global message authentication tag is used to authenticate the ciphertext working block for each respective working block of said at least two working blocks.",
    "20. The method of claim 19 wherein said message authentication information further comprises the message authentication tag computed for each respective working block of said at least two working blocks, and wherein said dividing said message into at least two working blocks comprises partitioning said message into at least two working blocks.",
    "21. The method of claim 20 wherein, for each respective working block of said at least two working blocks, and wherein said computing a global message authentication tag is further a function of a length of each respective working block of said at least two working blocks.",
    "22. The method of claim 20 wherein, for each respective working block of said at least two working blocks, the deterministic working block message authentication key that comprises an indication corresponding to said mathematical relationship of said respective working block to said message is a function of an initial value and the indication.",
    "23. A computer-implemented method for determining an authenticity of at least two working blocks comprising a message, said at least two working blocks associated with a global message authentication tag, said method comprising: First Named Inventor Atsushi Yamada Attorney's Docket No.: 29717-2042001 / 45518-US- receiving said global message authentication tag; for each respective working block of said at least two working blocks, computing a message authentication tag by using direct inputs that include said respective working block, a deterministic working block initialization vector used to compute a respective ciphertext working block for said respective working block, and wherein the message authentication tag is computed based on at least one of (a) a global message authentication key and an indication corresponding to a mathematical relationship of said respective working block to said message and (b) a deterministic working block message authentication key that comprises an indication corresponding to said mathematical relationship of said respective working block to said message, wherein the indication indicates a position of said respective working block within said message; computing a global message authentication tag as a function of the message authentication tag computed for each of said at least two working blocks and said global message authentication key; comparing said computed global message authentication tag with said global message authentication tag associated with said at least two working blocks; and determining whether said at least two working blocks are authenticated based on the comparing of said computed global message authentication tag with said global message authentication tag.",
    "24. The method of claim 23 wherein each respective working block of said at least two working blocks is associated with a message authentication tag and wherein said method further comprises, for each respective working block of said at least two working block, comparing the message authentication tag computed for respective working block with said message authentication tag associated with said respective working block, and wherein said message comprises an concatenation of each respective working block of said at least two working blocks.",
    "25. The method of claim 24, wherein said computing a global message authentication tag is further a function of a length of each respective working block of said at least two working blocks.",
    "26. The method of claim 24 wherein, for each respective working block of said at least two working blocks, the deterministic working block message authentication key that comprises an indication corresponding to said mathematical relationship of said respective working block to said message is a function of an initial value and the indication.",
    "27. The method of claim 1, said method further comprising: providing an updated plaintext message that is an update to said plaintext message; dividing said updated plaintext message into at least two updated working blocks, each respective working block of said at least two updated working blocks having a mathematical relationship to said updated plaintext message and corresponding to one of said at least two working blocks; identifying at least one updated working block that is affected by said update to said plaintext message; for each respective identified working block of said at least two identified updated working blocks: computing an updated working block ciphertext as a function of said respective identified updated working block, a deterministic working block initialization vector, and a deterministic working block encryption key; computing an updated message authentication tag as a function of a deterministic working block message authentication key and the updated working block ciphertext computed for said respective identified updated working block and an indication corresponding to said mathematical relationship of said respective identified updated working block to said updated plaintext message; computing an updated global message authentication tag as a function of said global message authentication tag, the updated message authentication tag computed for each respective identified updated working block, the message authentication tag computed for the working First Named Inventor Atsushi Yamada Attorney's Docket No.: 29717-2042001 / 45518-US- block corresponding to each respective identified updated working block, and said global message authentication key; and wherein an updated ciphertext message comprises the working block ciphertext computed for each respective working block of said at least two working blocks not identified, if any, the updated working block ciphertext computed for each respective identified updated working block, and said updated global message authentication tag.",
    "28. A non-transitory computer readable memory storing computer executable instructions thereon that when executed by a computer performs a method of authenticated encryption method for converting a plaintext message into a ciphertext message, said method comprising: dividing said plaintext message into at least two working blocks, each respective working block of said at least two working blocks having a mathematical relationship to said plaintext message; for each respective working block of said at least two working blocks: computing a working block ciphertext by using direct inputs that include said respective working block, a deterministic working block initialization vector, and a deterministic working block encryption key; and computing a message authentication tag by using direct inputs that include a deterministic working block message authentication key, the working block ciphertext computed for said respective working block, said deterministic working block initialization vector used to compute said working block ciphertext for said respective working block, and wherein the message authentication tag is computed based on an indication corresponding to said mathematical relationship of said respective working block to said plaintext message, wherein the indication indicates a position of said respective working block within said plaintext message; computing a global message authentication tag as a function of the message authentication tag computed for each respective working block of said at least two working blocks and a global message authentication key; and First Named Inventor Atsushi Yamada Attorney's Docket No.: 29717-2042001 / 45518-US- transmitting, to a receiving device, said ciphertext message, wherein said ciphertext message comprises the working block ciphertext computed for each respective working block of said at least two working blocks and said global message authentication tag, and said global message authentication tag is used to authenticate the working block ciphertext for each respective working block of said at least two working blocks.",
    "29. A non-transitory computer readable memory storing computer executable instructions thereon that when executed by a computer performs a method for converting at least two ciphertext working blocks into a plaintext message, said at least two ciphertext working blocks associated with a global message authentication tag, said method comprising: receiving said global message authentication tag; for each respective ciphertext working block of said at least two ciphertext working blocks: computing a plaintext working block by using direct inputs that include said respective ciphertext working block, a deterministic working block initialization vector, and a deterministic working block decryption key; computing a message authentication tag by using direct inputs that include a deterministic working block message authentication key, said respective ciphertext working block, said deterministic working block initialization vector used to compute said plaintext working block for said respective ciphertext working block, and wherein the message authentication tag is computed based on an indication corresponding to a mathematical relationship of said respective ciphertext working block to said plaintext message, wherein the indication indicates a position of said respective working block within said plaintext message; computing a global message authentication tag as a function of the message authentication tag computed for each respective ciphertext working block of said at least two ciphertext working blocks and a global message authentication key; comparing said computed global message authentication tag with said global message authentication tag associated with said at least two ciphertext working blocks; First Named Inventor Atsushi Yamada Attorney's Docket No.: 29717-2042001 / 45518-US- determining whether said at least two ciphertext working blocks are authenticated based on the comparing of said computed global message authentication tag with said global message authentication tag; and wherein said plaintext message comprises the plaintext working block computed for each respective ciphertext working block said at least two ciphertext working blocks.",
    "30. A non-transitory computer readable memory storing computer executable instructions thereon that when executed by a computer performs a message authentication method for producing message authentication information, said method comprising: dividing a message into at least two working blocks, each respective working block of said at least two working blocks having a mathematical relationship to said message; for each respective working block of said at least two working blocks: computing a message authentication tag by using direct inputs that include said respective working block, a deterministic working block initialization vector used to compute a respective ciphertext working block for said respective working block, and wherein the message authentication tag is computed based on at least one of (a) a global message authentication key and an indication corresponding to said mathematical relationship of said respective working block to said message and (b) a deterministic working block message authentication key that comprises an indication corresponding to said mathematical relationship of said respective working block to said message, wherein the indication indicates a position of said respective working block within said message; computing a global message authentication tag as a function of the message authentication tag computed for each respective working block of said at least two working blocks and said global message authentication key; and transmitting, to a receiving device, said message authentication information, wherein said message authentication information comprises said global message authentication tag, and said global message authentication tag is used to authenticate the ciphertext working block for each respective working block of said at least two working blocks.",
    "31. A non-transitory computer readable memory storing computer executable instructions thereon that when executed by a computer performs a method for determining an authenticity of at least two working blocks comprising a message, said at least two working blocks associated with a global message authentication tag, said method comprising: receiving said global message authentication tag; for each respective working block of said at least two working blocks, computing a message authentication tag by using direct inputs that include said respective working block, a deterministic working block initialization vector used to compute a respective ciphertext working block for said respective working block,, and wherein the message authentication tag is computed based on at least one of (a) a global message authentication key and an indication corresponding to a mathematical relationship of said respective working block to said message and (b) a deterministic working block message authentication key that comprises an indication corresponding to said mathematical relationship of said respective working block to said message, wherein the indication indicates a position of said respective working block within said message; computing a global message authentication tag as a function of the message authentication tag computed for each of said at least two working blocks and said global message authentication key; comparing said computed global message authentication tag with said global message authentication tag associated with said at least two working blocks; and determining whether said at least two working blocks are authenticated based on the comparing of said computed global message authentication tag with said global message authentication tag."
  ],
  "CTNFDocumentIdentifier": "I5JNROM0PXXIFW4",
  "CTNFBodyText": "DETAILED ACTION\nThe present application is being examined under the pre-AIA  first to invent provisions. \nThis Office Action is in response to the application 13/793810 filed on 03/11/2013.  Claims 1, 10, 19, and 23 are independent claims. Claims 1-28 have been examined and are pending. This Action is made non-FINAL. \n\nInformation Disclosure Statement\nThe information disclosure statement (IDS), submitted on 05/01/2014, is in compliance with the provisions of 37 CFR 1.97.  Accordingly, the information disclosure statement is being considered by the examiner.\nClaim Rejections - 35 USC § 112\nThe following is a quotation of 35 U.S.C. 112(b):\n(b)  CONCLUSION.—The specification shall conclude with one or more claims particularly pointing out and distinctly claiming the subject matter which the inventor or a joint inventor regards as the invention.\n\nThe following is a quotation of 35 U.S.C. 112 (pre-AIA ), second paragraph:\nThe specification shall conclude with one or more claims particularly pointing out and distinctly claiming the subject matter which the applicant regards as his invention.\n\n. \nClaims 1-27 are rejected under 35 U.S.C. 112(b) or 35 U.S.C. 112 (pre-AIA ), second paragraph,  as being indefinite for failing to particularly point out and distinctly claim the subject matter which the inventor or a joint inventor, or for pre-AIA  the applicant regards as the invention.\nRegarding claim 1; claim 1 recites the limitation said working block in lines 4.  There is insufficient antecedent basis for this limitation in the claim.  In addition, it is unclear as to whether “said working block” refers to what block.\n Regarding claim 1; claim 1 recites the limitation such working block in lines 5.  It is unclear as to whether “such working block” refers to what block.\nRegarding claim 2; claim 2 recites the limitation said working block in line 2.  There is insufficient antecedent basis for this limitation in the claim.\nRegarding claim 3; claim 3 recites the limitation “such working block” in lines 4 and 5.   It is unclear as to whether what working block the limitation refers to.\nRegarding claim 4; claim 4 recites “such working block” in lines 3 and 4.   It is unclear as to whether “such working block” refers to what block.\nRegarding claim 5; claim 5 recites “such working block” in lines 2-3.   It is unclear as to whether “such working block” refers to what block.\nRegarding claim 6; claim 6 recites the limitation “such working block” in lines 3 and 5.   It is unclear as to whether “such working block” refers to what block.\nRegarding claim 6; claim 6 recites the limitation “the length of each said working block” in lines 4-5.   It is unclear as to whether “the length of each said working block” refers to what length of each said working block. \nRegarding claim 7; claim 7 recites the limitation “such working block” in lines 2-3. It is unclear as to whether “such working block” refers to what block.\nRegarding claim 8; claim 8 recites the limitation “such working block” in lines 2, 4, and 5-6.   It is unclear as to whether “such working block” refers to what block.\nRegarding claim 9; claim 9 recites the limitation “such working block” in lines 3-4 & 7.   It is unclear as to whether “such working block” refers to what block.\nRegarding claim 27; claim 27 recites the limitation said updated working block in lines 4. It is unclear as to whether said updated working block” refers to what updated working block.\nRegarding claim 10; claim 10 recites the limitation said cipher working block in line 4. There is insufficient antecedent basis for this limitation in the claim. In addition, it is unclear as to whether “said working block” refers to what block.\nRegarding claim 12; claim 12 recites the limitation “such ciphertext  working block” in lines 5 and 6.   It is unclear as to whether “such ciphertext working block” refers to what block.\nRegarding claim 13; claim 13 recites the limitation “such ciphertext working block” in lines 3 and 5.   It is unclear as to whether “such ciphertext  working block” refers to what block.\nRegarding claim 14; claim 15 recites the limitation “such ciphertext working block” in lines 3-5.   It is unclear as to whether “such working block” refer to what block.\nRegarding claim 15; claim 15 recites the limitation “such ciphertext working block” in line 3.   It is unclear as to whether “such ciphertext  working block” refer to what block.\nRegarding claim 15; claim 15 recites the limitation “the length of each said ciphertext working block” in line 5.   It is unclear as to whether “the length of each said ciphertext  working block” refers to what length of each said working block.\nRegarding claim 16; claim 16 recites the limitation said ciphertext working block in line 1 and “such working block” in lines 3-4. It is unclear as to whether said ciphertext  working block & “such ciphertext  working block” refer to what block.\nRegarding claim 17; claim 17 recites the limitation said ciphertext  working block in line 1 and “such ciphertext working block” in lines 3, 5, and 6.  It is unclear as to whether said ciphertext  working block & “such ciphertext working block” refer to what block.\nRegarding claim 18; claim 18 recites the limitation “such ciphertext working block” in line 7.   It is unclear as to whether “such ciphertext working block” refers to what block.\nRegarding claim 19; claim 19 recites the limitation “such working block”  in line 6. It is unclear as to whether “such working block” refers to what block. \nRegarding claim 21; claim 21 recites the limitation “such working block” in lines 2 and 3.   It is unclear as to whether “such working block” refers to what block.\nRegarding claim 21; claim 21 recites the limitation “the length of each said working block” in line 5.   It is unclear as to whether “the length of each said working block” refers to what length of each said working block.\nRegarding claim 22; claim 22 recites the limitation “such working block” in lines 3 and 4.   It is unclear as to whether “such working block” refers to what block.\nRegarding claim 23; claim 23 recites the limitation “such working block” in line. It is unclear as to whether “such working block” refers to what block. \nRegarding claim 25; claim 25 recites the limitation “such working block” in lines 3 and 4.   It is unclear as to whether “such working block” refers to what block.\nRegarding claim 25; claim 25 recites the limitation “the length of each said working block” in line 5.   It is unclear as to whether “the length of each said working block” refers to what length of each said working block.\nRegarding claim 26; claim 26 recites the limitation “such working block” in line 1 and “such working block” in line 13, 14.   It is unclear as to whether “such working block” refers to what block.\nRegarding claims 2-9 and 27; claims 2-9 and 27  are dependent on claim 1, and therefore inherit the 35 U.S.C 112, second paragraph issues of the independent claim.\nRegarding claim 11-18; claims 11-18 are dependent on claim 10, and therefore inherit the 35 U.S.C 112, second paragraph issues of the independent claim\nRegarding claims 20-22; claims 20-22 are dependent on claim 19, and therefore inherit the 35 U.S.C 112, second paragraph issues of the independent claim.\nRegarding claims 24-26; claims 24-26 are dependent on claim 23, and therefore inherit the 35 U.S.C 112, second paragraph issues of the independent claim.\n\nThe following is a quotation of 35 U.S.C. 112(d):\n(d) REFERENCE IN DEPENDENT FORMS.—Subject to subsection (e), a claim in dependent form shall contain a reference to a claim previously set forth and then specify a further limitation of the subject matter claimed. A claim in dependent form shall be construed to incorporate by reference all the limitations of the claim to which it refers.\n\nThe following is a quotation of 35 U.S.C. 112 (pre-AIA ), fourth paragraph:\nSubject to the [fifth paragraph of 35 U.S.C. 112 (pre-AIA )], a claim in dependent form shall contain a reference to a claim previously set forth and then specify a further limitation of the subject matter claimed. A claim in dependent form shall be construed to incorporate by reference all the limitations of the claim to which it refers.\n\n\nClaim 28 is rejected under 35 U.S.C. 112(d) or pre-AIA  35 U.S.C. 112, 4th paragraph, as being of improper dependent form for failing to further limit the subject matter of the claim upon which it depends, or for failing to include all the limitations of the claim upon which it depends.  Claim 28 is a computer readable memory storing computer which depends on method claims 1 or 10, 19, and 23. Claim 28 fails to further limit the subject matter of the claim upon which it depends.  Applicant may cancel the claim(s), amend the claim(s) to place the claim(s) in proper dependent form, rewrite the claim(s) in independent form, or present a sufficient showing that the dependent claim(s) complies with the statutory requirements.\n Claim Rejections - 35 USC § 102\nThe following is a quotation of the appropriate paragraphs of pre-AIA  35 U.S.C. 102 that form the basis for the rejections under this section made in this Office action:\nA person shall be entitled to a patent unless \n(b) the invention was patented or described in a printed publication in this or a foreign country or in public use or on sale in this country, more than one year prior to the date of application for patent in the United States.\n\n\n\nClaim 1-26 and 28 are rejected under pre-AIA  35 U.S.C. 102(b) as being anticipated by Gregory Unruh (“Unruh,” US 2010/0303229 A1).\nRegarding claim 1, Unruh discloses a computer-implemented authenticated encryption method for converting a plaintext message into a ciphertext message, said method comprising: \n(A) dividing said plaintext message into at least two working blocks, each said working block having a mathematical relationship to said plaintext message (Unruh: fig. 2A, par. 0038, plaintext block 212 & plaintext block 222; fig. 3; par. 0058, initialization vector and index value;  fig. 1; pars. 0012-0013); \n(B) for each said working block, computing a working block ciphertext as a function of such working block, a deterministic working block initialization vector, and a deterministic working block encryption key (Unruh: fig. 2A, par. 0038; plaint text 1 (212), Seed(1) & encryption key for the operation 214 is represented by a value  Kw, Ciphertext 1 (216); fig. 3; par. 0058, initialization vector and index value; par. 0059-0061; fig. 1; pars. 0012-0013; encryption key, initialization vector (IV)); \n (C) for each said working block, computing a message authentication tag as a function of a deterministic working block message authentication key (Unruh: fig. 2C; par. 0040, applying hash function for each block cipher multH (218); fig. 1; par. 0012, Authentication tag which is generated by applying a hash function to each block of ciphertext) and at least one of (a) the working block ciphertext computed for such working block and (b) such working block (Unruh: Unruh: fig. 2C; par. 0040, applying hash function for each block cipher multH (218); fig. 1; par. 0012, Authentication tag, which is generated by applying a hash function to each block of ciphertext); \n(D) computing a global message authentication tag as a function of the message authentication tag computed for each said working block and a global message authentication key (Unruh: fig. 2C, 248 (Auth Tag), pars. 0046, 0052, Global message authentication ; fig. 1, par. 0016; The result of operations is Auth. Tag); and \n(E) wherein said ciphertext message comprises the working block ciphertext computed for each said working block and said global message authentication tag (Unruh: fig. 2C, ciphertext 1, ciphertext 2, … ciphertext N; Unruh: fig. 2C, 248 (Auth Tag), pars. 0046, 0052, Global message authentication; fig. 1, par. 0016; The result of operations is Auth. Tag). \nRegarding claim 2, Unruh discloses the method of claim 1. Unruh further discloses wherein said ciphertext message further comprises the message authentication tag computed for each said working block (Unruh: fig. 2C; par. 0040, applying hash function  for each block cipher multH (218); fig. 1; par. 0012, Authentication tag, which is generated by applying a hash function to each block of ciphertext). \nRegarding claim 3, Unruh discloses the method of claim 2. Unruh further discloses wherein said dividing said plaintext message into at least two working blocks comprises partitioning said plaintext message into at least two working blocks (Unruh: fig. 2A, par. 0038, plaintext block 212 & plaintext block 222; fig. 3; par. 0058, initialization vector and index value;  fig. 1; pars. 0012-0013), and wherein, for each said working block, the indication corresponding to said mathematical relationship of such working block to said plaintext message comprises an indication corresponding to a position of such working block within said plaintext message (Unruh: par. 0048; I is an index that corresponds to the position of a block  in the plaintext record; fig. 3; par. 0058, initialization vector and index value; pars. 0059-0061). \nRegarding claim 4, Unruh discloses the method of claim 3. Unruh further discloses wherein, for each said working block, the deterministic working block initialization vector used to compute the working block ciphertext computed for such working block is a function of a global initialization vector and the indication corresponding to said position of such working block within said plaintext message (Unruh: par. 0048; I is an index that corresponds to the position of a block  in the plaintext record; fig. 3; par. 0058, initialization vector and index value; pars. 0059-0061).\nRegarding claim 5, Unruh discloses the method of claim of claim 4. Unruh further discloses wherein, for each said working block, the deterministic working block number='10'encryption key used to compute the working block ciphertext computed for such working block is a single encryption key common to said at least two working blocks (Unruh: Unruh: fig. 2A, par. 0038; plaint text 1 (212), Seed(1) & encryption key for the operation 214 is represented by a value  Kw, Ciphertext 1 (216)). \nRegarding claim 6, Unruh discloses the method of claim of  5. Unruh further disclose wherein,  for each said working block, the deterministic working block message authentication key used to compute the message authentication tag computed for such working block is said global message authentication key (Unruh: fig. 2C, 248 (Auth Tag), pars. 0046, 0052, Global message authentication ; fig. 1, par. 0016; The result of operations is Auth. Tag (i.e. Global message authentication tag), wherein said computing a global message authentication tag is further a function of the length of each said working block (Unruh: pars. 0046, 0051, 0058; length of authentication data and the length of the ciphertext), and wherein said computing a global message authentication tag is further a function of said global initialization vector (Unruh: par. 0048; I is an index that corresponds to the position of a block  in the plaintext record; fig. 3; par. 0058, initialization vector and index value; pars. 0059-0061). \nRegarding claim 7, Unruh discloses the method of claim of 6.  Unruh further discloses wherein, for each said working block, said computing a message authentication tag for such working block comprises computing a function of a deterministic working block message authentication key and such working block (Unruh: fig. 2C; par. 0040, number='11'applying hash function for each block cipher multH (218); fig. 1; par. 0012, Authentication tag which is generated by applying a hash function to each block of ciphertext).\nRegarding claim 8, Unruh discloses the method of claim of 6. Unruh further discloses wherein, for each said working block, said computing a message authentication tag for such working block comprises computing a function of a deterministic working block message authentication key, the working block ciphertext computed for such working block (Unruh: fig. 2A, par. 0038; plaint text 1 (212), Seed(1) & encryption key for the operation 214 is represented by a value  Kw, Ciphertext 1 (216); fig. 3; par. 0058, initialization vector and index value; par. 0059-0061; fig. 1; pars. 0012-0013; encryption key, initialization vector (IV), and at least one of (a) the deterministic working block initialization vector used to compute the working block ciphertext computed for such working block and (b) the indication corresponding to the position of such working block within said plaintext message (Unruh: par. 0048; I is an index that corresponds to the position of a block  in the plaintext record; fig. 3; par. 0058, initialization vector and index value; pars. 0059-0061).\nRegarding claim 9, Unruh discloses the method of claim of 5. Unruh further disclose wherein, for each said working block, the deterministic working block message authentication key used to compute the message authentication tag for such working block is a function of an initial value and the indication corresponding to the position of such working block within said plaintext message (Unruh: fig. 2A, par. 0038; plaint text 1 (212), Seed(1) & encryption key for the operation 214 is represented by a value  Kw, Ciphertext 1 number='12'(216); fig. 3; par. 0058, initialization vector and index value; pars 0059-0061; fig. 1; pars. 0012-0013; encryption key, initialization vector (IV)); wherein, for each said working block, said computing a message authentication tag for such working block comprises computing a function of a deterministic working block message authentication key and the working block ciphertext computed for such working block (Unruh: fig. 2C; par. 0040, applying hash function for each block cipher multH (218); fig. 1; par. 0012, Authentication tag which is generated by applying a hash function to each block of ciphertext).\nRegarding claim 10, Unruh discloses a computer-implemented method for converting at least two ciphertext working blocks into a plaintext message, said at least two ciphertext working blocks associated with a global message authentication tag, said method comprising: \n(A) for each said ciphertext working block, computing a plaintext working block as a function of such ciphertext working block, a deterministic working block initialization vector, and a deterministic working block decryption key (Unruh: fig. 2D; Ciphertext 1, Ciphertext 2.., Plaintext 1, Plaintext 2, Seed (1), Seed(2), encryption key.; par. 0054; the ciphertext may be decrypted by reversing the direction of data flow; fig. 5, par. 0062); \n(B) for each said ciphertext working block, computing a message authentication tag as a function of a deterministic working block message authentication key (Unruh: fig. 2D; pars. 54-56, applying hash function for each block cipher multH (218); fig. 1; par. 0012, Authentication tag which is generated by applying a hash function to each block of ciphertext and at least one of (a) such ciphertext working block  and an indication corresponding to a mathematical relationship of such ciphertext working block to said number='13'plaintext message and (b) the plaintext working block computed for such ciphertext working block (Unruh: fig. 2D; pars. 54-56, applying hash function for each block cipher multH (218)); \n(C) computing a global message authentication tag as a function of the message authentication tag computed for each said working block and a global message authentication key (Unruh: fig. 2D, Auth. Tag (248); pars. 0054-0056; The tag T’); \n(D) comparing said computed global message authentication tag with said global message authentication tag associated with said at least two ciphertext working blocks (Unruh: par. 0056; The tag T’ generated by the decryption method (i.e. computed global message authentication tag) may be compared to the tag T generated (i.e. Global message authentication tag) by the encryption method); and \n(D) wherein said plaintext message comprises each plaintext working block computed for each said ciphertext working block (Unruh: fig. 2D, par. 0054).\nRegarding claim 11, Unruh discloses the method of claim 10. Unruh further discloses wherein each said ciphertext working block is associated with a message authentication tag and wherein said method further comprises, for each said ciphertext working block, comparing the message authentication tag computed for such ciphertext working block with said message authentication tag associated with such ciphertext working block (Unruh: pars. 0054-0056; The tag T’ generated by the decryption method (i.e. computed global message authentication tag) may be compared to the tag T generated (i.e. Global message authentication tag) by the encryption method)number='14'. \nRegarding claim 12, Unruh discloses the method of claim 11. Unruh further discloses wherein said plaintext message comprises the concatenation of each plaintext working block computed for each said ciphertext working block, and wherein, for each said ciphertext working block, the indication corresponding to said mathematical relationship of such ciphertext working block to said plaintext message comprises an indication corresponding to a position of the plaintext working block computed for such ciphertext working block within said plaintext message (Unruh: par. 0048; I is an index that corresponds to the position of a block  in the plaintext record; fig. 3; par. 0058, initialization vector and index value; pars. 0059-0061). \nRegarding claim 13, Unruh discloses the method of claim 12. Unruh further discloses wherein, for each said ciphertext working block, the deterministic working block initialization vector used to compute the plaintext working block for such ciphertext working block is a function of a global initialization vector (Unruh: par. 0048; I is an index that corresponds to the position of a block  in the plaintext record; fig. 3; par. 0058, initialization vector and index value; pars. 0059-0061) and the indication corresponding to said position of the plaintext working block computed for such ciphertext working block within said plaintext message (Unruh: par. 0048; I is an index that corresponds to the position of a block  in the plaintext record; fig. 3; par. 0058, initialization vector and index value; par. 0059-0061). \nRegarding claim 14, Unruh discloses the method of claim 13. Unruh further discloses wherein, for each said ciphertext working block, the deterministic working block number='15'decryption key used to compute the plaintext working block for such ciphertext working block is a single decryption key common to said at least two ciphertext working blocks (Unruh: fig. 2B, par. 0039; plaint text 1 (212), Seed(1) & encryption key for the operation 214 is represented by a value  Kw, Ciphertext 1 (216). \nRegarding claim 15, Unruh discloses the method of claim 14. Unruh further discloses wherein, for each said ciphertext working block, the deterministic working block message authentication key used to compute the message authentication tag for such ciphertext working block is said global message authentication key, wherein said computing a global message authentication tag is further a function of the length of each plaintext working block computed for each said ciphertext working block (Unruh: pars. 0046, 0051, 0058; length of authentication data and the length of the ciphertext), and wherein said computing a global message authentication tag is further a function of said global initialization vector (Unruh: par. 0048; I is an index that corresponds to the position of a block  in the plaintext record; fig. 3; par. 0058, initialization vector and index value; pars. 0059-0061). \nRegarding claim 16, Unruh discloses the method of claim 15. Unruh further discloses wherein, for each said ciphertext working block, said computing a message authentication tag comprises computing a function of a deterministic working block message authentication key and the plaintext working block computed for such ciphertext working block (Unruh: fig. 2D; par. 0054, applying hash function for each block cipher number='16'multH (218); fig. 1; par. 0012, Authentication tag which is generated by applying a hash function to each block of ciphertext.)\nRegarding claim 17, Unruh discloses the method of claim 15. Unruh further discloses wherein, for each said ciphertext working block, said computing a message authentication tag comprises computing a function of a deterministic working block message authentication key, such ciphertext working block, and at least one of (a) the deterministic working block initialization vector used to compute the plaintext working block for such ciphertext working block and (b) the indication corresponding to the position of the plaintext working block computed for such ciphertext working block within said plaintext message (Unruh: par. 0048; I is an index that corresponds to the position of a block  in the plaintext record; fig. 3; par. 0058, initialization vector and index value; pars. 0059-0061).\nRegarding claim 18, Unruh discloses the method of claim 14. Unruh further discloses wherein, for each said ciphertext working block, the deterministic working block message authentication key used to compute the message authentication tag for such ciphertext working block is a function of an initial value and the indication corresponding to the position of the plaintext working block computed for such ciphertext working block within said plaintext message (Unruh: fig. 3; par. 0058, initialization vector and index value); wherein, for each said ciphertext working block, said computing a message authentication tag for such ciphertext working block comprises computing a function of a number='17'deterministic working block message authentication key and such ciphertext working block (Unruh: fig. 2D, par. 0054). \nRegarding claim 19, Unruh discloses a computer-implemented message authentication method for producing message authentication information, said method comprising: \n(A) dividing a message into at least two working blocks, each said working block having a mathematical relationship to said message (Unruh: fig. 2A, par. 0038, plaintext block 212 & plaintext block 222; fig. 3; par. 0058, initialization vector and index value;  fig. 1; pars. 0012-0013); \n(B) for each said working block, computing a message authentication tag as a function of such working block (Unruh: fig. 2A, par. 0038; plaint text 1 (212), Seed(1) & encryption key for the operation 214 is represented by a value  Kw, Ciphertext 1 (216); fig. 3; par. 0058, initialization vector and index value; pars. 0059-0061; fig. 1; pars. 0012-0013; encryption key, initialization vector (IV)) and at least one of (a) a global message authentication key and an indication corresponding to said mathematical relationship of such working block to said message and (b) a deterministic working block message authentication key that comprises an indication corresponding to said mathematical relationship of such working block to said message (Unruh: par. 0048; I is an index that corresponds to the position of a block  in the plaintext record; fig. 3; par. 0058, initialization vector and index value; par. 0059-0061); \nnumber='18' (C) computing a global message authentication tag as a function of the message authentication tag computed for each said working block and said global message authentication key (Unruh: fig. 2C, 248 (Auth Tag), pars. 0046, 0052, Global message authentication; fig. 1, par. 0016; The result of operations is Auth. Tag); and \n(D) wherein said message authentication information comprises said global message authentication tag (Unruh: fig. 2C, 248 (Auth Tag) (i.e. Global message authentication tag), pars. 0046, 0052, Global message authentication; fig. 1, par. 0016; The result of operations is Auth. Tag).\nRegarding claim 20, Unruh discloses the method of claim 19. Unruh further discloses wherein said message authentication information further comprises the message authentication tag computed for each said working block Unruh: fig. 2A, par. 0038; plaint text 1 (212), Seed(1) & encryption key for the operation 214 is represented by a value  Kw, Ciphertext 1 (216); fig. 3; par. 0058, initialization vector and index value; par. 0059-0061; fig. 1; pars. 0012-0013; encryption key, initialization vector (IV), and wherein said dividing said message into at least two working blocks comprises partitioning said message into at least two working blocks (Unruh: fig. 2A, par. 0038, plaintext block 212 & plaintext block 222; fig. 3; par. 0058, initialization vector and index value;  fig. 1; pars. 0012-0013). \nRegarding claim 21, Unruh discloses the method of claim 20. Unruh further discloses wherein, for each said working block, the indication corresponding to said mathematical relationship of such working block to said message comprises an indication corresponding to a position of such working block within said message (Unruh: par. 0048; number='19'I is an index that corresponds to the position of a block  in the plaintext record; fig. 3; par. 0058, initialization vector and index value; pars. 0059-0061), and wherein said computing a global message authentication tag is further a function of the length of each said working block (Unruh: pars. 0046, 0051, 0058; length of authentication data and the length of the ciphertext) . \nRegarding claim 22, Unruh discloses the method of claim 20. Unruh further wherein, for each said working block, the deterministic working block message authentication key that comprises an indication corresponding to said mathematical relationship of such working block to said message is a function of an initial value and an indication corresponding to a position of such working block within said message (Unruh: fig. 3; par. 0058, initialization vector and index value). \nRegarding claim 23,  Unruh discloses a computer-implemented method for determining the authenticity of at least two working blocks comprising a message, said at least two working blocks associated with a global message authentication tag, said method comprising: \n(A) for each said working block, computing a message authentication tag as a function of such working block (Unruh: fig. 2D; pars. 54-56, applying hash function for each block cipher multH (218); fig. 1; par. 0012, Authentication tag which is generated by applying a hash function to each block of ciphertext) and at least one of (a) a global message authentication key and an indication corresponding to a mathematical relationship of such working block to said message and (b) a deterministic working block message number='20'authentication key that comprises an indication corresponding to said mathematical relationship of such working block to said message (Unruh: par. 0048; I is an index that corresponds to the position of a block  in the plaintext record; fig. 5, par. 0062); \n(B) computing a global message authentication tag as a function of the message authentication tag computed for each said working block and said global message authentication key (Unruh: fig. 2D, Auth. Tag (248); pars. 0054-0056; The tag T’); and \n(C) comparing said computed global message authentication tag with said global message authentication tag associated with said at least two working blocks (Unruh: par. 0056;The tag T’ generated by the decryption method (i.e. computed global message authentication tag) may be compared to the tag T generated (i.e. Global message authentication tag) by the encryption method). \nRegarding claim 24, Unruh discloses the method of claim 23. Unruh further discloses wherein each said working block is associated with a message authentication tag and wherein said method further comprises, for each said working block, comparing the message authentication tag computed for such working block with said message authentication tag associated with said working block (Unruh: pars. 0054-0056; The tag T’ generated by the decryption method (i.e. computed global message authentication tag) may be compared to the tag T generated (i.e. Global message authentication tag) by the encryption method), and wherein said message comprises the concatenation of each said working block (Unruh: pars. 0054-0056)number='21'. \nRegarding claim 25, Unruh discloses the method of claim 24. Unruh further wherein, for each said working block, the indication corresponding to said mathematical relationship of such working block to said message comprises an indication corresponding to a position of such working block within said message (Unruh: par. 0047; I is an index that corresponds to the position of a block  in the plaintext record; fig. 3; par. 0058, initialization vector and index value; pars. 0059-0061), and wherein said computing a global message authentication tag is further a function of the length of each said working block (Unruh: pars. 0046, 0051, 0058; length of authentication data and the length of the ciphertext). \nRegarding claim 26, Unruh discloses the method of claim 24. Unruh further discloses wherein, for each said working block, the deterministic working block message authentication key that comprises an indication corresponding to said mathematical relationship of such working block to said message is a function of an initial value and an indication corresponding to a position of such working block within said message (Unruh: fig. 3; par. 0058, initialization vector and index value). \nRegarding claim 28, claim 28 is directed to a computer readable memory storing computer executable instructions thereon that when executed by a computer perform the method of claim 1; claim 28 is similar in scope to claim 1, and is therefore rejected under similar rationale.\n\nnumber='22'Claim Rejections - 35 USC § 103\nThe following is a quotation of pre-AIA  35 U.S.C. 103(a) which forms the basis for all obviousness rejections set forth in this Office action:\n(a) A patent may not be obtained though the invention is not identically disclosed or described as set forth in section 102 of this title, if the differences between the subject matter sought to be patented and the prior art are such that the subject matter as a whole would have been obvious at the time the invention was made to a person having ordinary skill in the art to which said subject matter pertains.  Patentability shall not be negatived by the manner in which the invention was made.\n\n\nClaim 27 is rejected under pre-AIA  35 U.S.C. 103(a) as being unpatentable over Gregory Unruh (“Unruh,” US 2010/0303229 A1) in view of Hawkes et al. (“Hawkes,” US 2005/0213752 A1).\nRegarding claim 27, Unruh discloses the method of claim 1. \nUnruh does not explicitly disclose providing an updated plaintext message that is an update to said plaintext message, identifying at least one updated working block that is affected by said update to said plaintext message.\nHowever, in an analogous art, Hawkes discloses a stream cipher encryption and message authentication. In one embodiment, Hawkes discloses applying the keystream to plaintext to generate an encrypted message block having at least a portion of the plaintext converted to ciphertext, and updating the state value as a function of said at least a portion of the plaintext (Hawkes:abstract; pars. 0008, 0010).\nTherefore, it would have been obvious to one of ordinary skill in the art at the time the invention was made to combine the teachings of Hawkes with the method and system of Unruh wherein providing an updated plaintext message that is an update to said plaintext number='23'message to provide users with a means for to ensuring security of communication message effectively (Hawkes: par. 0008).\nConclusion\nThe prior art made of record and not relied upon is considered pertinent to applicant's disclosure. \nUS 20020051537 A1 to Rogaway, Phillip W.,\nUS 20080172562 A1 to CACHIN C et al.,\nUS 20040019785 A1 to Hawkes, Philip Michael et al.,\nUS 20100027783 A1 to Yup; Nhu-Ha,\nUS 20040017913 A1 to Hawkes, Philip Michael et al.\n",
  "NOABodyText": "CNTA  13/793,810  NOA  82687  2439    DETAILED ACTION  07-03-fti AIA The present application is being examined under the pre-AIA first to invent provisions.  This Office Action is in response to the application 13/793,810 filed on 08/17/2017; Claims 1, 10, 12, 19, 23, 24, 28, 29, 30, and 31 have been amended; Claims 1, 10, 19, 23, 28, 29, 30, and 31 are independent claims.  Claims 1-31 have been examined and are pending.  Authorization for this Examiner’s Amendment was given in a telephone interview with Applicant’s representative, Mr. Jun Li (Reg. No.: 70,074) has agreed and authorized the Examiner to amend claims 1, 10, 28, and 29; cancelled claims 4, 6, 13, 15, 19-26, and 30-31.   Claims  Replacing claims 1-31 as following:  1 (Currently Amended). A computer-implemented authenticated encryption method for converting a plaintext message into a ciphertext message, said method comprising:  dividing said plaintext message into at least two working blocks, each respective working block of said at least two working blocks having a mathematical relationship to said plaintext message;  for each respective working block of said at least two working blocks:  computing a working block ciphertext by using direct inputs that include said respective working block, a deterministic working block initialization vector, and a deterministic working block encryption key , wherein the deterministic working block initialization vector is a function of a global initialization vector ; and  computing a message authentication tag for said respective working block by using direct inputs that include a deterministic working block message authentication key, the working block ciphertext computed for said respective working block, and said deterministic working block initialization vector used to compute said respective working block ciphertext for said respective working block , wherein the deterministic working block message authentication key is a global message authentication key;  and wherein the message authentication tag for said respective working block is computed based on an indication corresponding to said mathematical relationship of said respective working block to said plaintext message, wherein the indication indicates a position of said respective working block within said plaintext message;  computing a global message authentication tag as a function of the message authentication tag computed for each respective working block of said at least two working blocks , said global initialization vector, and [[a]] the global message authentication key , and as a function of a length of each respective working block of said at least two working blocks ; and  transmitting, to a receiving device, said ciphertext message, wherein said ciphertext message comprises the working block ciphertext computed for each respective working block of said at least two working blocks and said global message authentication tag, and said global message authentication tag is used to authenticate the working block ciphertext for each respective working block of said at least two working blocks.  2. (Previously Presented) The method of claim 1 wherein said ciphertext message further comprises the message authentication tag computed for each respective working block of said at least two working blocks.  3. (Previously Presented) The method of claim 2 wherein said dividing said plaintext message into at least two working blocks comprises partitioning said plaintext message into at least two working blocks.  4. (Cancelled)  5. (Currently Amended). The method of claim [[4]] 1 wherein, for each respective working block of said at least two working blocks, the deterministic working block encryption key used to compute the working block ciphertext computed for said respective working block is a single encryption key common to said at least two working blocks.  6. (Cancelled)  7. (Currently Amended). The method of claim [[6]] 1 wherein, for each respective working block of said at least two working blocks, said computing a message authentication tag for respective working block comprises computing a function of a deterministic working block message authentication key and said respective working block.  8. (Currently Amended). The method of claim [[6]] 1 wherein, for each respective working block of said at least two working blocks, said computing a message authentication tag for respective working block comprises computing a function of a deterministic working block message authentication key, the working block ciphertext computed for respective working block, and at least one of (a) the deterministic working block initialization vector used to compute the working block ciphertext computed for respective working block and (b) the indication corresponding to the position of respective working block within said plaintext message.  9. (Previously Presented) The method of claim 5 wherein, for each respective working block of said at least two said working blocks, the deterministic working block message authentication key used to compute the message authentication tag for said respective working block is a function of an initial value and the indication corresponding to the position of respective working block within said plaintext message; wherein, for each respective working block of said at least two said working blocks, said computing a message authentication tag for said respective working block comprises computing a function of a deterministic working block message authentication key and the working block ciphertext computed for said respective working block.  10. (Currently Amended). A computer-implemented method for converting at least two ciphertext working blocks into a plaintext message, said at least two ciphertext working blocks associated with a global message authentication tag, said method comprising:  receiving said global message authentication tag;  for each respective ciphertext working block of said at least two ciphertext working blocks:  computing a plaintext working block by using direct inputs that include said respective ciphertext working block, a deterministic working block initialization vector, and a deterministic working block decryption key , wherein the deterministic working block initialization vector is a function of a global initialization vector ;  computing a message authentication tag for said respective ciphertext working block by using direct inputs that include a deterministic working block message authentication key, said respective ciphertext working block, said deterministic working block initialization vector used to compute said respective plaintext working block for said respective ciphertext working block , wherein the deterministic working block message authentication key is a global message authentication key;   and wherein the message authentication tag for said respective ciphertext working block is computed based on an indication corresponding to a mathematical relationship of said respective ciphertext working block to said plaintext message, wherein the indication indicates a position of said respective working block within said plaintext message;  computing a global message authentication tag as a function of the message authentication tag computed for each respective ciphertext working block of said at least two ciphertext working blocks , said global initialization vector, and [[a]] the global message authentication key , and as a function of a length of the plaintext working block computed for each respective ciphertext working block of said at least two ciphertext working blocks ;  comparing said computed global message authentication tag with said global message authentication tag associated with said at least two ciphertext working blocks;  determining whether said at least two ciphertext working blocks are authenticated based on the comparing of said computed global message authentication tag with said global message authentication tag; and  wherein said plaintext message comprises the plaintext working block computed for each respective ciphertext working block said at least two ciphertext working blocks.  11. (Previously Presented) The method of claim 10 wherein each respective ciphertext working block of said at least two ciphertext working blocks is associated with a message authentication tag and wherein said method further comprises, for each respective ciphertext working block of said at least two ciphertext working blocks, comparing the message authentication tag computed for said respective ciphertext working block with said message authentication tag associated with said respective ciphertext working block.  12. (Previously Presented) The method of claim 11 wherein said plaintext message comprises a concatenation of the plaintext working block computed for each respective ciphertext working block of said at least two ciphertext working blocks.  13. (Cancelled)  14. (Currently Amended) The method of claim [[13]] 10 wherein, for each respective ciphertext working block of said at least two ciphertext working blocks, the deterministic working block decryption key used to compute the plaintext working block for said respective ciphertext working block is a single decryption key common to said at least two ciphertext working blocks.  15. (Cancelled)  16. (Currently Amended) The method of claim [[15] 10 wherein, for each respective ciphertext working block of said at least two ciphertext working blocks, said computing a message authentication tag comprises computing a function of a deterministic working block message authentication key and the plaintext working block computed for respective ciphertext working block.  17. (Currently Amended) The method of claim [[15]] 10 wherein, for each respective ciphertext working block of said at least two ciphertext working blocks, said computing a message authentication tag comprises computing a function of a deterministic working block message authentication key, said respective ciphertext working block, and at least one of (a) the deterministic working block initialization vector used to compute the plaintext working block for said respective ciphertext working block and (b) the indication corresponding to the position of the plaintext working block computed for said respective ciphertext working block within said plaintext message.  18. (Previously Presented) The method of claim 14 wherein, for each respective ciphertext working block of said at least two ciphertext working blocks, the deterministic working block message authentication key used to compute the message authentication tag for said respective ciphertext working block is a function of an initial value and the indication corresponding to the position of the plaintext working block computed for said respective ciphertext working block within said plaintext message; wherein, for each respective ciphertext working block of said at least two ciphertext working blocks, said computing a message authentication tag for said respective ciphertext working block comprises computing a function of a deterministic working block message authentication key and said respective ciphertext working block.  19-26 (Cancelled)  27. (Previously Presented) The method of claim 1, said method further comprising:  providing an updated plaintext message that is an update to said plaintext message;  dividing said updated plaintext message into at least two updated working blocks, each respective working block of said at least two updated working blocks having a mathematical relationship to said updated plaintext message and corresponding to one of said at least two working blocks;  identifying at least one updated working block that is affected by said update to said plaintext message;  for each respective identified working block of said at least two identified updated working blocks:  computing an updated working block ciphertext as a function of said respective identified updated working block, a deterministic working block initialization vector, and a deterministic working block encryption key;  computing an updated message authentication tag as a function of a deterministic working block message authentication key and the updated working block ciphertext computed for said respective identified updated working block and an indication corresponding to said mathematical relationship of said respective identified updated working block to said updated plaintext message;  computing an updated global message authentication tag as a function of said global message authentication tag, the updated message authentication tag computed for each respective identified updated working block, the message authentication tag computed for the working block corresponding to each  respective identified updated working block, and said global message authentication key; and  wherein an updated ciphertext message comprises the working block ciphertext computed for each respective working block of said at least two working blocks not identified, if any, the updated working block ciphertext computed for each respective identified updated working block, and said updated global message authentication tag.  28. (Currently Amended) A non-transitory computer readable memory storing computer executable instructions thereon that when executed by a computer performs a method of authenticated encryption method for converting a plaintext message into a ciphertext message, said method comprising:  dividing said plaintext message into at least two working blocks, each respective working block of said at least two working blocks having a mathematical relationship to said plaintext message;  for each respective working block of said at least two working blocks:  computing a working block ciphertext by using direct inputs that include said respective working block, a deterministic working block initialization vector, and a deterministic working block encryption key , wherein the deterministic working block initialization vector is a function of a global initialization vector ; and  computing a message authentication tag by using direct inputs that include a deterministic working block message authentication key, the working block ciphertext computed for said respective working block, said deterministic working block initialization vector used to compute said working block ciphertext for said respective working block , wherein the deterministic working block message authentication key is a global message authentication key;   and wherein the message authentication tag is computed based on an indication corresponding to said mathematical relationship of said respective working block to said plaintext message, wherein the indication indicates a position of said respective working block within said plaintext message;  computing a global message authentication tag as a function of the message authentication tag computed for each respective working block of said at least two working blocks and a global message authentication key , said global initialization vector, and [[a]] the global message authentication key , and as a function of a length of each respective working block of said at least two working blocks ; and  transmitting, to a receiving device, said ciphertext message, wherein said ciphertext message comprises the working block ciphertext computed for each respective working block of said at least two working blocks and said global message authentication tag, and said global message authentication tag is used to authenticate the working block ciphertext for each respective working block of said at least two working blocks.  29. (Currently Amended) A non-transitory computer readable memory storing computer executable instructions thereon that when executed by a computer performs a method for converting at least two ciphertext working blocks into a plaintext message, said at least two ciphertext working blocks associated with a global message authentication tag, said method comprising:  receiving said global message authentication tag;  for each respective ciphertext working block of said at least two ciphertext working blocks:  computing a plaintext working block by using direct inputs that include said respective ciphertext working block, a deterministic working block initialization vector, and a deterministic working block decryption key , wherein the deterministic working block initialization vector is a function of a global initialization vector ;  computing a message authentication tag by using direct inputs that include a deterministic working block message authentication key, said respective ciphertext working block, said deterministic working block initialization vector used to compute said plaintext working block for said respective ciphertext working block , wherein the deterministic working block message authentication key is a global message authentication key ;  and wherein the message authentication tag is computed based on an indication corresponding to a mathematical relationship of said respective ciphertext working block to said plaintext message, wherein the indication indicates a position of said respective working block within said plaintext message;  computing a global message authentication tag as a function of the message authentication tag computed for each respective ciphertext working block of said at least two ciphertext working blocks , said global initialization vector, and [[a]] the global message authentication key , and as a function of a length of the plaintext working block computed for each respective ciphertext working block of said at least two ciphertext working blocks ;  comparing said computed global message authentication tag with said global message authentication tag associated with said at least two ciphertext working blocks;  determining whether said at least two ciphertext working blocks are authenticated based on the comparing of said computed global message authentication tag with said global message authentication tag; and  wherein said plaintext message comprises the plaintext working block computed for each respective ciphertext working block said at least two ciphertext working blocks.  30-31 (Cancelled).   Examiner's Statement of reason for Allowance  Claims 1-3, 5, 7-12, 14, 16-18, 27, 28, and 29.  13-03 AIA The following is an examiner’s statement of reasons for allowance:  The invention is directed a computer-implemented authenticated encryption method / non-transitory computer readable memory for converting a plaintext message into a ciphertext message.  The method includes dividing the plaintext message into at least two working blocks, each working block having a mathematical relationship to the plaintext message.  For each working block, a working block ciphertext is computed as a function of such working block, a deterministic working block initialization vector, and a deterministic working block encryption key.  For each working block, a message authentication tag is computed as a function of a deterministic working block message authentication key and at least one of (a) the working block ciphertext computed for such working block and an indication corresponding to the mathematical relationship of such working block to the plaintext message and (b) such working block.  The method further includes computing a global message authentication tag as a function of the message authentication tag computed for each working block and a global message authentication key.  The ciphertext message comprises the working block ciphertext computed for each working block and the global message authentication tag.  The closest prior art are Gregory Unruh (“Unruh,” US 2010/0303229 A1) and Roygaway (“Roygaway,” US 2006/0285684 A1) also generally directed to various aspect of the method involves dividing plaintext message into two working blocks having a mathematical relationship to plaintext message.  A working block ciphertext is computed and a message authentication tag is computed for each working block.  A global message authentication tag is computed as a function of the message authentication tag computed for each working block and a global message authentication key.  The ciphertext message comprising the working block ciphertext computed for each working block and global message authentication tag is computed.  However, none of Unruh and Roygaway teaches or suggests, alone or in combination, the particular combination of steps or elements as recited in the independent claims 1 and 28.  For examples, it failed to teach “computing a working block ciphertext by using direct inputs that include said respective working block, a deterministic working block initialization vector, and a deterministic working block encryption key, wherein the deterministic working block initialization vector is a function of a global initialization vector”,  “wherein the deterministic working block message authentication key is a global message authentication key” , and “computing a global message authentication tag as a function of the message authentication tag computed for each respective working block of said at least two working blocks, said global initialization vector, and [[a]] the global message authentication key, and as a function of a length of each respective working block of said at least two working blocks; and transmitting, to a receiving device, said ciphertext message, wherein said ciphertext message comprises the working block ciphertext computed for each respective working block of said at least two working blocks and said global message authentication tag, and said global message authentication tag is used to authenticate the working block ciphertext for each respective working block of said at least two working blocks.”  None of Unruh and Roygaway teaches or suggests, alone or in combination, the particular combination of steps or elements as recited in the independent claims 10 and 29.  For examples, it failed to teach “computing a plaintext working block by using direct inputs that include said respective ciphertext working block, a deterministic working block initialization vector, and a deterministic working block decryption key, wherein the deterministic working block initialization vector is a function of a global initialization vector;”, “wherein the deterministic working block message authentication key is a global message authentication key”, and “computing a global message authentication tag as a function of the message authentication tag computed for each respective ciphertext working block of said at least two ciphertext working blocks, said global initialization vector, and the global message authentication key, and as a function of a length of the plaintext working block computed for each respective ciphertext working block of said at least two ciphertext working blocks; comparing said computed global message authentication tag with said global message authentication tag associated with said at least two ciphertext working blocks;  determining whether said at least two ciphertext working blocks are authenticated based on the comparing of said computed global message authentication tag with said global message authentication tag; and wherein said plaintext message comprises the plaintext working block computed for each respective ciphertext working block said at least two ciphertext working blocks.”   Any comments considered necessary by applicant must be submitted no later than the payment of the issue fee and, to avoid processing delays, should preferably accompany the issue fee.  Such submissions should be clearly labeled “Comments on Statement of Reasons for Allowance.”           Conclusion  Any inquiry concerning this communication or earlier communications from the examiner should be directed to Canh Le whose telephone number is 571-270-1380.  The examiner can normally be reached on Monday to Friday 7:30AM to 5:00PM other Friday off.  If attempts to reach the examiner by telephone are unsuccessful, the examiner’s supervisor, Luu Pham can be reached on 571-270-5002.  The fax phone number for the organization where this application or proceeding is assigned is 571-273-8300.  Information regarding the status of an application may be obtained from the Patent Application Information Retrieval (PAIR) system.  Status information for published applications may be obtained from either Private PAIR or Public PAIR.  Status information for unpublished applications is available through Private PAIR only.  For more information about the PAIR system, see http://pair-direct.uspto.gov. Should you have questions on access to the Private PAIR system, contact the Electronic Business Center (EBC) at 866-217-9197 (toll-free). If you would like assistance from a USPTO Customer Service Representative or access to the automated information system, call 800-786-9199 (IN USA OR CANADA) or 571-272-1000.   /Canh Le/  Examiner, Art Unit 2439  October 24 th , 2017    /LUU PHAM/  Supervisory Patent Examiner, Art Unit 2439      Application/Control Number:  13/793,810  Page 2    Art Unit:  2439          Application/Control Number:  13/793,810  Page 3    Art Unit:  2439",
  "applicationNumber": "13793810",
  "patentsCitedByExaminer": [
    {
      "referenceIdentifier": "20080172562",
      "abstract": "Techniques for encryption and authentication of data. One or more plaintext data blocks ciphertext data blocks and corresponding authentication tags are generated by means of authenticated encryption. A tag tree is generated by means of the authentication tags. The ciphertext data blocks and the tag tree data of the tag tree are stored in an untrusted storage, and the root tag of the tag tree is stored in a trusted storage.",
      "claims": [
        "1. Method for encryption and authentication of data, comprising:\ngenerating from one or more plaintext data blocks ciphertext data blocks and corresponding authentication tags by means of authenticated encryption; and\ngenerating a tag tree by means of the authentication tags.",
        "2. A method according to claim 1, wherein the tag tree comprises tag tree data and data representing a root authentication tag;\nwherein the tag tree data are stored in an untrusted storage; and\nwherein the data representing the root authentication tag is stored in a trusted storage.",
        "3. A method according to claim 2, wherein the ciphertext data blocks are stored in the untrusted storage.",
        "4. A method according to claim 1, wherein the authenticated encryption is performed by AES using IAPM, OCB, or GCM.",
        "5. A method for decryption and verification of authenticity of data, the method comprising:\ngenerating from one or more ciphertext data blocks and corresponding authentication tags from a tag tree plaintext data blocks and verification values by means of authenticated decryption;\nverifying the authentication tags by means of a root tag; and\noutputting the plaintext data blocks, if the verification values and the verification of the authentication tags confirm the authenticity of the data and the authentication tags.",
        "6. A method according to claim 5, wherein the authenticated decryption is performed by AES, IAPM, OCB, or GCM.",
        "7. A method for generating a tag authentication tree, the method comprising:\ngenerating from plaintext data blocks authentication tags by means of authenticated encryption;\nconcatenating the authentication tags to concatenated authentication tags; and\ngenerating from the concatenated authentication tags encrypted authentication tags and authentication tags by means of authenticated encryption.",
        "8. A method according to claim 7, wherein the encrypted authentication tags are stored in an untrusted storage; and\nwherein the last generated authentication tag is stored in a trusted storage.",
        "9. A method for decryption and verification of authenticity of encrypted authentication tags of a tag tree comprising:\ngenerating from the encrypted authentication tags and a parent authentication tags decrypted authentication tags and tag verification values by means of authenticated decryption;\ngenerating from one or more ciphertext data blocks plaintext data blocks and comparison tags by means of authenticated decryption; and\noutputting the plaintext data blocks, if the tag verification values and the verification of the comparison tags confirm the authenticity of the data and the decrypted authentication tags.",
        "10. A method according to claim 9, wherein the verification of one of the comparison tags includes comparing the comparison tag with the corresponding decrypted authentication tag.",
        "11. The method according to claim 9 further comprising using a storage which is structured in blocks as untrusted and/or trusted storage.",
        "12. A computer program product embodied in a tangible media comprising:\ncomputer readable program codes coupled to the tangible media for encryption and authentication of data, the computer readable program codes configured to cause the program to:\ngenerate from one or more plaintext data blocks ciphertext data blocks and corresponding authentication tags by means of authenticated encryption; and\ngenerate a tag tree by means of the authentication tags.",
        "13. An apparatus for encryption and authentication of data, the apparatus comprising:\na generator for:\ngenerating from one or more plaintext data blocks ciphertext data blocks and corresponding authentication tags by means of authenticated encryption; and\ngenerating a tag tree by means of the authentication tags."
      ],
      "title": "ENCRYPTION AND AUTHENTICATION OF DATA AND FOR DECRYPTION AND VERIFICATION OF AUTHENTICITY OF DATA"
    },
    {
      "referenceIdentifier": "20040017913",
      "abstract": "Methods and apparatus are presented herein for encrypting and authentication data, such that some of data can be transmitted in the clear but still be authenticated by the sender. A set of cleartext positions and/or a set of ciphertext positions are used to specify which data blocks will be used to generate an input checksum value and an output checksum value. These checksums are then used to generate an authentication tag.",
      "claims": [
        "1. A method for encrypting and authenticating data as a single entity, comprising:\narranging data into a plurality of plaintext blocks, each sized according to a cipher block size;\nspecifying at least one cleartext position for which at least one ciphertext block will be the same as a corresponding plaintext block;\ndetermining a plurality of noise blocks using a nonce value and a first key;\ndetermining a plurality of intermediate ciphertext blocks, wherein the first intermediate ciphertext block corresponds to an encrypted nonce value, and the remaining intermediate ciphertexts are computed iteratively by encrypting a plurality of intermediate plaintext blocks with a second key, wherein each intermediate plaintext block is a combination of one of the plurality of plaintext blocks and a preceding intermediate ciphertext block;\ndetermining a plurality of ciphertext blocks by using the plurality of intermediate ciphertext blocks and the plurality of noise blocks, wherein the first ciphertext block is the same as the first intermediate ciphertext block and the remaining ciphertext blocks are derived by combining a corresponding intermediate ciphertext block with a corresponding noise block;\ncomputing an input checksum value based on the plurality of plaintext blocks and the intermediate ciphertext block corresponding to the last plaintext block;\ncomputing an output checksum value based on the plurality of ciphertext blocks and a noise block;\ncomputing an authentication tag by encrypting the input checksum value with the second key and combining the encrypted input checksum value with the output checksum;\nsubstituting each of the plurality of ciphertext blocks that is specified by a cleartext position with a corresponding plaintext block; and\nappending the authentication tag.",
        "2. The method of claim 1, wherein the encrypting uses block cipher encryption.",
        "3. The method of claim 1, wherein the encrypting comprises:\nchoosing to apply block cipher encryption or block cipher decryption;\nselecting a block cipher to use, according to a set of predetermined selection rules; and\nforming the plurality of intermediate ciphertext blocks by applying the chosen block cipher encryption or block cipher decryption to one of the plurality of plaintext blocks combined with the preceding intermediate ciphertext block.",
        "4. The method of claim 1, wherein computing the input checksum value comprises:\ncombining all of the plurality of plaintext blocks that correspond to a position that is not specified as the at least one cleartext position; and\ncombining the last noise block and the combined plurality of plaintext blocks.",
        "5. The method of claim 1, wherein computing the output checksum comprises:\ncombining all of the plurality of ciphertext blocks that correspond to the at least one cleartext position; and\ncombining the first noise block and the combined plurality of ciphertext blocks.",
        "6. The method of claim 1, wherein combining is performed using a bit-wise exclusive-or operation.",
        "7. The method of claim 1, wherein combining is performed using a group operator.",
        "8. The method of claim 7, wherein the group operator is a modular integer addition operator.",
        "9. A method for decrypting and verifying a plurality of data blocks accompanied by an authentication tag, wherein a set of cleartext positions is defined, comprising:\nusing a nonce value and a first key to determine a plurality of noise blocks;\ncombining each of the plurality of data blocks that is not specified by a cleartext position in the set of cleartext positions with a corresponding noise block in order to determine a plurality of intermediate ciphertext blocks;\ndesignating each of the plurality of data blocks that is specified by a cleartext position in the set of cleartext positions as a plaintext block in a plurality of plaintext blocks;\nfor each cleartext position in the set of cleartext positions, combining the corresponding plaintext block with a previous intermediate ciphertext block to form an intermediate plaintext block and encrypting the intermediate plaintext block to form an intermediate ciphertext block corresponding to the cleartext position;\nfor each position not in the set of cleartext positions, decrypting the corresponding intermediate ciphertext block to form an associated intermediate plaintext block and combining the associated intermediate plaintext block with a previous intermediate ciphertext block to form a plaintext block for each position not in the set of cleartext positions;\ndetermining a plurality of secondary ciphertext blocks, wherein each of the plurality of secondary ciphertext blocks correspond to a cleartext position in the set of cleartext positions and are formed by combining a corresponding intermediate ciphertext block with a corresponding noise block;\ncomputing an input checksum value by combining the last intermediate ciphertext block and the plurality of data blocks that is not specified by a cleartext position in the set of cleartext positions;\ncomputing an output checksum value by combining a noise block and the plurality of secondary ciphertext blocks; and\nverifying the authentication tag.",
        "10. The method of claim 9, wherein verifying the authentication tag comprises:\ncomputing a test authentication tag by encrypting the input checksum value with a second key and combining the encrypted input checksum value with the output checksum value; and\ncomparing the test authentication tag with the authentication tag, wherein the authentication tag is verified if the test authentication tag and authentication tag are the same.",
        "11. The method of claim 9, wherein verifying the authentication tag comprises:\ncombining the authentication tag with the output checksum value to form a test encrypted input checksum value;\nencrypting the input checksum value; and\ncomparing the test encrypted input checksum value with the encrypted input checksum value, wherein the authentication tag is verified if the test encrypted input checksum value and the encrypted input checksum value are the same.",
        "12. The method of claim 9, wherein verifying the authentication tag comprises:\ncombining the authentication tag with the output checksum value to form a test encrypted input checksum value;\ndecrypting the test encrypted input checksum to obtain a test input checksum value; and\ncomparing the test input checksum value with the input checksum value, wherein the authentication tag is verified if the test input checksum value and the input checksum value are the same.",
        "13. Apparatus for encrypting and authenticating data, comprising:\nat least one memory element; and\nat least one processing element configured to execute a set of instruction stored in the memory element, the set of instructions for:\narranging data into a plurality of plaintext blocks, each sized according to a cipher block size;\nspecifying at least one cleartext position for which at least one ciphertext block will be the same as a corresponding plaintext block;\ndetermining a plurality of noise blocks using a nonce value and a first key;\ndetermining a plurality of intermediate ciphertext blocks, wherein the first intermediate ciphertext block corresponds to an encrypted nonce value, and the remaining intermediate ciphertexts are computed iteratively by encrypting a plurality of intermediate plaintext blocks with a second key, wherein each intermediate plaintext block is a combination of one of the plurality of plaintext blocks and a preceding intermediate ciphertext block;\ndetermining a plurality of ciphertext blocks by using the plurality of intermediate ciphertext blocks and the plurality of noise blocks, wherein the first ciphertext block is the same as the first intermediate ciphertext block and the remaining ciphertext blocks are derived by combining a corresponding intermediate ciphertext block with a corresponding noise block;\ncomputing an input checksum value based on the plurality of plaintext blocks and the intermediate ciphertext block corresponding to the last plaintext block;\ncomputing an output checksum value based on the plurality of ciphertext blocks and a noise block;\ncomputing an authentication tag by encrypting the input checksum value with the second key and combining the encrypted input checksum value with the output checksum;\nsubstituting each of the plurality of ciphertext blocks that is specified by a cleartext position with a corresponding plaintext block; and\nappending the authentication tag.",
        "14. Apparatus for encrypting and authenticating data, comprising:\nat least one memory element; and\nat least one processing element configured to execute a set of instruction stored in the memory element, the set of instructions for:\nusing a nonce value and a first key to determine a plurality of noise blocks;\ncombining each of the plurality of data blocks that is not specified by a cleartext position in the set of cleartext positions with a corresponding noise block in order to determine a plurality of intermediate ciphertext blocks;\ndesignating each of the plurality of data blocks that is specified by a cleartext position in the set of cleartext positions as a plaintext block in a plurality of plaintext blocks;\nfor each cleartext position in the set of cleartext positions, combining the corresponding plaintext block with a previous intermediate ciphertext block to form an intermediate plaintext block and encrypting the intermediate plaintext block to form an intermediate ciphertext block corresponding to the cleartext position;\nfor each position not in the set of cleartext positions, decrypting the corresponding intermediate ciphertext block to form an associated intermediate plaintext block and combining the associated intermediate plaintext block with a previous intermediate ciphertext block to form a plaintext block for each position not in the set of cleartext positions;\ndetermining a plurality of secondary ciphertext blocks, wherein each of the plurality of secondary ciphertext blocks correspond to a cleartext position in the set of cleartext positions and are formed by combining a corresponding intermediate ciphertext block with a corresponding noise block;\ncomputing an input checksum value by combining the last intermediate ciphertext block and the plurality of data blocks that is not specified by a cleartext position in the set of cleartext positions;\ncomputing an output checksum value by combining a noise block and the plurality of secondary ciphertext blocks; and\nverifying the authentication tag.",
        "15. A method for encrypting and authenticating data as a single entity, comprising:\nspecifying a set of cleartext positions and a set of ciphertext positions, wherein the set of cleartext positions are for indicating that a block in a cleartext position is not encrypted and the set of ciphertext positions are for indicating the a block in the ciphertext position is encrypted;\nif a data block is in a cleartext position, then:\nsetting a plaintext block equal to the data block;\nXORing the plaintext block with a previous intermediate ciphertext block to form an intermediate plaintext block;\nencrypting the intermediate plaintext block to form an intermediate ciphertext block;\nif the data block is in a ciphertext position, then:\nXORing the data block with a sequence corresponding to the data block from a set of sequences to form a corresponding intermediate ciphertext block;\ndecrypting the corresponding intermediate ciphertext block to form an intermediate plaintext block; and\nXORing the intermediate plaintext block with a previous intermediate ciphertext block to form a plaintext block;\ncomputing an authentication tag using all intermediate blocks;\ncomputing a last ciphertext block using the authentication tag, the first sequence from the set of sequences and the last sequence from the set of sequences; and\ntransmitting the ciphertext blocks and the authentication tag.",
        "16. A method for secure data transmissions, wherein a first portion of the data transmission is sent as plaintext, a second portion of the data transmission is sent as ciphertext, and all of the data transmission is authenticated, the method comprising:\ngenerating a set of cleartext positions;\nencrypting the first portion of the data transmission and the second portion of the data transmission into ciphertext, wherein the first portion of the data transmission is specified by the set of cleartext positions and the second portion of the data transmission is not associated with any one of the set of cleartext positions;\ngenerating an input checksum value using the data transmission that is not associated with any one of the set of cleartext positions;\ngenerating an output checksum value using the ciphertext of the first portion of the data transmission;\ngenerating an authentication tag using the input checksum value and the output checksum value; and\ntransmitting the plaintext, the ciphertext, and the authentication tag, wherein the plaintext is the first portion of the data transmission specified by the set of cleartext positions.",
        "17. A method for decrypting and verifying a plurality of received transmission blocks, comprising:\ndetermining whether each of the plurality of received transmission blocks is specified by a cleartext position from a set of cleartext positions;\ndecrypting the plurality of received transmission blocks, the decrypting comprising:\nif not specified by a cleartext position, then generating a set of intermediate ciphertext blocks, decrypting the set of intermediate ciphertext blocks to generate a set of intermediate plaintext blocks, and generating a set of plaintext blocks;\nif specified by a cleartext position, then combining each of the plurality of received transmission blocks specified by a cleartext position with a previous intermediate ciphertext block to form an intermediate plaintext block, and encrypting the intermediate plaintext block to obtain an intermediate ciphertext block; and\nverifying the plurality of received transmission blocks, the verifying comprising:\nforming an input checksum value using the set of plaintext blocks not specified by a cleartext position;\nforming an output checksum value using a set of secondary ciphertext blocks, wherein the secondary ciphertext blocks are derived from a set of intermediate ciphertext blocks not associated with a cleartext position; and\nusing the input checksum value and the output checksum value for comparison to the authentication tag.",
        "18. The method of claim 17, wherein the decrypting is performed in parallel to the verifying.",
        "19. Apparatus for encrypting and authenticating data, comprising:\nat least one memory element for storing a set of plaintext blocks;\nat least one combining element for combining input blocks;\nat least one encrypting element for performing a cryptographic function upon inputs;\nat least one selection element for selecting either a plaintext block or a ciphertext block for transmission in a specific position in a transmission stream;\nat least two checksum generators; and\nat least one processing element, wherein the at least one processing is for controlling the at least one memory element, the at least one combining element, the at least one encrypting element, the at least two checksum generators, and the at least one selection element, such that:\na first portion of the at least one combining element is for combining a plaintext block with a previous stage intermediate ciphertext block to output an intermediate plaintext block, a first portion of the at least one encrypting element is for generating a current stage intermediate ciphertext block from the intermediate plaintext block, a second portion of the at least one combining element is for outputting a ciphertext block from combining the current state intermediate ciphertext block with a noise block, the first checksum generator is for outputting a first checksum from a set of specified plaintext blocks, a second portion of the at least one encrypting element is for encrypting the first checksum, the second checksum generator is for outputting a second checksum from a set of specified ciphertext blocks, and a third portion of the at least one combining element is for combining the encrypted first checksum and the second checksum to form an authentication tag.",
        "20. Apparatus for decrypting and verifying data transmissions, comprising:\nat least one memory element for storing a set of data transmission blocks;\nat least one combining element for combining input blocks;\nat least one encryption element for performing a first cryptographic function upon inputs;\nat least one decryption element for performing a second cryptographic function upon inputs, wherein the second cryptographic function is the reverse of the first cryptographic function;\nat least one switching element for selecting either an output from the at least one encryption element or an output from the at least one combining element;\nat least two checksum generators for generating an input checksum based on a specified set of plaintext blocks and an output checksum based on a set of secondary ciphertext blocks; and\nat least one processing element, wherein the at least one processing is for controlling the at least one memory element, the at least one combining element, the at least one encryption element, the at least one decryption element, the at least two checksum generators, and the at least one switching element such that:\na first portion of the at least one combining element is for combining a data transmission block with noise block to form an intermediate ciphertext block, the at least one decryption element is for decrypting the intermediate ciphertext block to form an intermediate plaintext block, a second portion of the at least one combining element is for combining the intermediate plaintext block with a previous stage intermediate ciphertext block to form a plaintext block, a third portion of the at least one combining element is for combining the data transmission block with the previous stage intermediate ciphertext block, to from a second intermediate plaintext block, the at least one encryption element is for encrypting the second intermediate plaintext block to form a second intermediate ciphertext block, the at least one switching element for selecting either the first intermediate ciphertext block or the second intermediate ciphertext block, and a second portion of the at least one combining element is for combining the noise block with the second intermediate ciphertext block to form a secondary ciphertext block.",
        "21. Apparatus for secure data transmissions, wherein a first portion of the data transmission is sent as plaintext, a second portion of the data transmission is sent as ciphertext, and all of the data transmission is authenticated, the method comprising:\nmeans for generating a set of cleartext positions;\nmeans for encrypting the first portion of the data transmission and the second portion of the data transmission into ciphertext, wherein the first portion of the data transmission is specified by the set of cleartext positions and the second portion of the data transmission is not associated with any one of the set of cleartext positions;\nmeans for generating an input checksum value using the data transmission that is not associated with any one of the set of cleartext positions;\nmeans for generating an output checksum value using the ciphertext of the first portion of the data transmission;\nmeans for generating an authentication tag using the input checksum value and the output checksum value; and\nmeans for transmitting the plaintext, the ciphertext, and the authentication tag, wherein the plaintext is the first portion of the data transmission specified by the set of cleartext positions.",
        "22. Apparatus for decrypting and verifying a plurality of received transmission blocks, comprising:\nmeans for determining whether each of the plurality of received transmission blocks is specified by a cleartext position from a set of cleartext positions;\nmeans for decrypting the plurality of received transmission blocks, the decrypting comprising:\nif not specified by a cleartext position, then generating a set of intermediate ciphertext blocks, decrypting the set of intermediate ciphertext blocks to generate a set of intermediate plaintext blocks, and generating a set of plaintext blocks;\nif specified by a cleartext position, then combining each of the plurality of received transmission blocks specified by a cleartext position with a previous intermediate ciphertext block to form an intermediate plaintext block, and encrypting the intermediate plaintext block to obtain an intermediate ciphertext block; and\nmeans for verifying the plurality of received transmission blocks by forming an input checksum value using the set of plaintext blocks not specified by a cleartext position, forming an output checksum value using a set of secondary ciphertext blocks, wherein the secondary ciphertext blocks are derived from a set of intermediate ciphertext blocks not associated with a cleartext position, and using the input checksum value and the output checksum value for comparison to the authentication tag."
      ],
      "title": "Efficient encryption and authentication for data processing systems"
    },
    {
      "referenceIdentifier": "20100303229",
      "abstract": "A modified Counter Mode encryption technique encrypts data by receiving a seed value, generating a first value from an operation of the seed value and the plaintext; and encrypting the first value using a block encryption cipher to produce ciphertext. The operation may be an exclusive-or operation. The seed value may be a counter value based upon a position of the block of plaintext in a record of plaintext, where the length of the counter value is based upon the length of the block. The counter value may be generated by adding an initialization vector to a product of an index value and a multiplier value, where the multiplier value comprises a randomly-generated value, the index value is based upon the position of the block of plaintext in the record of plaintext, and the length of the initialization vector and the length of the multiplier value are based upon the length of the block.",
      "claims": [
        "1. A computer implemented method of encrypting a block of plaintext, the method comprising:\nreceiving a seed value;\ngenerating a first value from an operation on the seed value and the plaintext; and\nencrypting the first value using a block encryption cipher to produce ciphertext.",
        "2. The method of claim 1, wherein the operation comprises an exclusive-or operation.",
        "3. The method of claim 1, wherein the seed value comprises a counter value based upon a position of the block of plaintext in a record of plaintext, and the length of the counter value is based upon the length of the block.",
        "4. The method of claim 3, further comprising:\ngenerating the counter value by adding an initialization vector to a product of an index value and a multiplier value, wherein the multiplier value comprises a randomly-generated value, the index value is based upon the position of the block of plaintext in the record of plaintext, and the length of the initialization vector and the length of the multiplier value are based upon the length of the block.",
        "5. The method of claim 4, wherein the length of the block, the length of the initialization vector, and the length of the multiplier are each 128 bits.",
        "6. The method of claim 1, further comprising:\ngenerating a hash result based upon a hash factor and a hash of a second ciphertext. generating a second value from a second operation of the ciphertext and a first hash value received as input; and\ngenerating a second hash value based upon Galois field multiplication of the second value by a hash factor.",
        "7. The method of claim 6, wherein the second operation comprises an exclusive-or operation.",
        "8. The method of claim 1, wherein the block encryption cipher comprises the Advanced Encryption Standard cipher.",
        "9. A computer readable storage medium comprising program code for encrypting a block of plaintext, the program code comprising:\nreceiving a seed value;\ngenerating a first value from an operation on the seed value and the plaintext; and\nencrypting the first value using a block encryption cipher to produce ciphertext.",
        "10. The computer readable medium of claim 9, wherein the operation comprises an exclusive-or operation.",
        "11. The computer readable medium of claim 9, wherein the seed value comprises a counter value based upon a position of the block of plaintext in a record of plaintext, and the length of the counter value is based upon the length of the block.",
        "12. The computer readable medium of claim 11, further comprising program code for:\ngenerating the counter value by adding an initialization vector to a product of an index value and a multiplier value, wherein the multiplier value comprises a randomly-generated value, the index value is based upon the position of the block of plaintext in the record of plaintext, and the length of the initialization vector and the length of the multiplier value are based upon the length of the block.",
        "13. The computer readable medium of claim 12, wherein the length of the block, the length of the initialization vector, and the length of the multiplier are each 128 bits.",
        "14. The computer readable medium of claim 9, further comprising program code for:\ngenerating a hash result based upon a hash factor and a hash of a second ciphertext. generating a second value from a second operation of the ciphertext and a first hash value received as input; and\ngenerating a second hash value based upon Galois field multiplication of the second value by a hash factor.",
        "15. The computer readable medium of claim 14, wherein the second operation comprises an exclusive-or operation.",
        "16. The computer readable medium of claim 9, wherein the block encryption cipher comprises the Advanced Encryption Standard cipher.",
        "17. A system comprising:\na computer memory for storing instructions; and\na processor for executing the instructions, the instructions for:\nreceiving a seed value;\ngenerating a first value based from an operation on the seed value and plaintext; and\nencrypting the first value using a block encryption cipher to produce ciphertext.",
        "18. The system of claim 17, wherein the operation comprises an exclusive-or operation.",
        "19. The system of claim 17, wherein the seed value comprises a counter value based upon a position of the block of plaintext in a record of plaintext, and the length of the counter value is based upon the length of the block.",
        "20. The system of claim 19, further comprising:\ngenerating the counter value by adding an initialization vector to a product of an index value and a multiplier value, wherein the multiplier value comprises a randomly-generated value, the index value is based upon the position of the block of plaintext in the record of plaintext, and the length of the initialization vector and the length of the multiplier value are based upon the length of the block.",
        "21. The system of claim 20, wherein the length of the block, the length of the initialization vector, and the length of the multiplier are each 128 bits.",
        "22. The system of claim 17, further comprising:\ngenerating a hash result based upon a hash factor and a hash of a second ciphertext generating a second value based upon a comparison of the ciphertext to a first hash value received as input; and\ngenerating a second hash value based upon Galois field multiplication of the second value by a hash factor.",
        "23. The system of claim 22, wherein the comparison comprises an exclusive-or operation.",
        "24. The system of claim 17, wherein the block encryption cipher comprises the Advanced Encryption Standard cipher."
      ],
      "title": "MODIFIED COUNTER MODE ENCRYPTION"
    },
    {
      "referenceIdentifier": "20020051537",
      "abstract": "A parallelizable variable-input-length pseudorandom function constructed out of a fixed-input-length pseudorandom function. The variable-input-length pseudorandom function can be used as a message authentication code. The fixed-input-length pseudorandom function from which it is built can be a block cipher. In one embodiment, using an n-bit block cipher, the given key is mapped into a sequence of offsets, and the given message is partitioned into n-bit message blocks and a final fragment that may be shorter. Each message block is xored with a corresponding offset and then the block cipher is applied. The resulting output blocks are xored together, and also xored with the padded final fragment, to yield a partial checksum. An additional offset may then be xored into the partial checksum, depending on the length of the final fragment, to yield a checksum. The block cipher is then applied to the checksum, the result being the output of the function constructed.",
      "claims": [
        "1. A method for computing a variable-input-length pseudorandom function using an n-bit pseudorandom function, which transforms a key and a message to an authentication tag, the method comprising:\ngenerating a sequence of offsets from the key;\npartitioning the message into a sequence of n-bit message blocks and a message fragment having at most n bits;\ncombining each message block with a corresponding offset to get a corresponding input block;\napplying the n-bit pseudorandom function to each input block to get a corresponding output block;\ncomputing a checksum as a function of at least the output blocks and the final fragment; and\ncomputing the authentication tag by applying the n-bit pseudorandom function to the checksum.",
        "2. The method of claim 1, wherein generating the sequence of offsets involves:\ndetermining the 1.sup.st offset as a function of the key; and\ndetermining the i.sup.th offset, for each i&gt;\n1, a function of the first offset and the number i.",
        "3. The method of claim 1, wherein generating the sequence of offsets involves:\ndetermining a plurality of basis offsets;\ndetermining each offset in the sequence of offsets by combining a given set of basis offsets.",
        "4. The method of claim 3, wherein the order that basis offsets are combined to make the i.sup.th offset is determined by a Gray code.",
        "5. The method of claim 1, wherein generating the sequence of offsets involves:\ndetermining a stride and a first offset from the key; and\ndetermining each subsequent offset by combining the prior offset and the stride.",
        "6. A method for computing a variable-input-length pseudorandom function that transforms a key and a message to an authentication tag, the method comprising:\ngenerating a sequence of offsets from the key;\npartitioning the message into a message core and a message fragment;\ncomputing a partial checksum as a function of the message core, the sequence of offsets, and the key;\ncomputing a final checksum as a function of at least the partial checksum and the message fragment; and\ncomputing the authentication tag as a function of the final checksum and the key.",
        "7. A method for authenticating messages, using a key, that associates to each message an authentication tag, comprising:\ngenerating a sequence of offsets from the key;\npartitioning the message into a message core and a message fragment;\ncomputing a partial checksum as a function of the message core, the sequence of offsets, and the key;\ncomputing a final checksum as a function of at least the partial checksum and the message fragment;\ncomputing the authentication tag as a function of the final checksum and the key.",
        "8. A method for verifying the authenticity of messages, using a key, wherein a message is presented along with a purported authentication tag, comprising:\ngenerating a sequence of offsets from the key;\npartitioning the message into a message core and a message fragment;\ncomputing a partial checksum as a function of the message core, the sequence of offsets, and the key;\ncomputing a final checksum as a function of at least the partial checksum and the message fragment;\ncomputing an authentication tag as a function of the final checksum and the key;\nregarding the message as authentic if the authentication tag equals the purported authentication tag; and\nregarding the message as inauthentic if the authentication tag differs from the purported authentication tag.",
        "9. A method for computing a variable-input-length pseudorandom function that uses a keyed block cipher to produce an authentication tag from a message, comprising:\ndetermining a key variant by applying the keyed block cipher to a constant;\ncomputing a sequence of offsets from the key variant;\nusing the keyed block cipher to compute a checksum from the message and the sequence of offsets; and\napplying the keyed block cipher to the checksum to yield the authentication tag.",
        "10. A method for generating a sequence of offsets, to be used for authenticating messages between parties who share a secret key, comprising:\ndetermining a key variant as a function of the secret key;\nusing the key variant to determine a sequence of basis offsets; and\ndetermining a sequence of offsets from the sequence of basis offsets, wherein each offset in the sequence of basis offsets is determined by combining certain basis offsets from the sequence of basis offsets.",
        "11. The method for generating a sequence of offsets as described in claim 10, wherein the basis offsets are combined in an order determined by a Gray code.",
        "12. A method for computing a variable-input-length pseudorandom function that uses a block cipher, keyed by a given key, to produce an authentication tag from a message, the method comprising:\ndetermining a stride value by applying the block cipher to a constant;\ncomputing a first offsets using the block cipher;\ncomputing each subsequent offset in a sequence of offsets by combining the prior offset and the stride value; and\ncomputing the authentication tag using the block cipher, the message, and the sequence of offsets.",
        "13. A computer-readable storage medium storing instructions that when executed by a computer cause the computer to perform a method for computing a variable-input-length pseudorandom function using an n-bit pseudorandom function, which transforms a key and a message to an authentication tag, the method comprising:\ngenerating a sequence of offsets from the key;\npartitioning the message into a sequence of n-bit message blocks and a message fragment having at most n bits;\ncombining each message block with a corresponding offset to get a corresponding input block;\napplying the n-bit pseudorandom function to each input block to get a corresponding output block;\ncomputing a checksum as a function of at least the output blocks and the final fragment; and\ncomputing the authentication tag by applying the n-bit pseudorandom function to the checksum.",
        "14. The computer-readable storage medium of claim 13, wherein generating the sequence of offsets involves:\ndetermining the 1.sup.st offset as a function of the key; and\ndetermining the i.sup.th offset, for each i&gt;\n1, a function of the first offset and the number i.",
        "15. The computer-readable storage medium of claim 13, wherein generating the sequence of offsets involves:\ndetermining a plurality of basis offsets;\ndetermining each offset in the sequence of offsets by combining a given set of basis offsets.",
        "16. The computer-readable storage medium of claim 15, wherein the order that basis offsets are combined to make the i.sup.th offset is determined by a Gray code.",
        "17. The computer-readable storage medium of claim 13, wherein generating the sequence of offsets involves:\ndetermining a stride and a first offset from the key; and\ndetermining each subsequent offset by combining the prior offset and the stride.",
        "18. A computer-readable storage medium storing instructions that when executed by a computer cause the computer to perform a method for computing a variable-input-length pseudorandom function that transforms a key and a message to an authentication tag, the method comprising:\ngenerating a sequence of offsets from the key;\npartitioning the message into a message core and a message fragment;\ncomputing a partial checksum as a function of the message core, the sequence of offsets, and the key;\ncomputing a final checksum as a function of at least the partial checksum and the message fragment; and\ncomputing the authentication tag as a function of the final checksum and the key.",
        "19. A computer-readable storage medium storing instructions that when executed by a computer cause the computer to perform a method for authenticating messages, using a key, that associates to each message an authentication tag, the method comprising:\ngenerating a sequence of offsets from the key;\npartitioning the message into a message core and a message fragment;\ncomputing a partial checksum as a function of the message core, the sequence of offsets, and the key;\ncomputing a final checksum as a function of at least the partial checksum and the message fragment;\ncomputing the authentication tag as a function of the final checksum and the key.",
        "20. A computer-readable storage medium storing instructions that when executed by a computer cause the computer to perform a method for verifying the authenticity of messages, using a key, wherein a message is presented along with a purported authentication tag, the method comprising:\ngenerating a sequence of offsets from the key;\npartitioning the message into a message core and a message fragment;\ncomputing a partial checksum as a function of the message core, the sequence of offsets, and the key;\ncomputing a final checksum as a function of at least the partial checksum and the message fragment;\ncomputing an authentication tag as a function of the final checksum and the key;\nregarding the message as authentic if the authentication tag equals the purported authentication tag; and\nregarding the message as inauthentic if the authentication tag differs from the purported authentication tag.",
        "21. A computer-readable storage medium storing instructions that when executed by a computer cause the computer to perform a method for computing a variable-input-length pseudorandom function that uses a keyed block cipher to produce an authentication tag from a message, the method comprising:\ndetermining a key variant by applying the keyed block cipher to a constant;\ncomputing a sequence of offsets from the key variant;\nusing the keyed block cipher to compute a checksum from the message and the sequence of offsets; and\napplying the keyed block cipher to the checksum to yield the authentication tag.",
        "22. A computer-readable storage medium storing instructions that when executed by a computer cause the computer to perform a method for generating a sequence of offsets, to be used for authenticating messages between parties who share a secret key, the method comprising:\ndetermining a key variant as a function of the secret key;\nusing the key variant to determine a sequence of basis offsets; and\ndetermining a sequence of offsets from the sequence of basis offsets, wherein each offset in the sequence of basis offsets is determined by combining certain basis offsets from the sequence of basis offsets.",
        "23. The computer-readable storage medium for generating a sequence of offsets as described in claim 10, wherein the basis offsets are combined in an order determined by a Gray code.",
        "24. A computer-readable storage medium storing instructions that when executed by a computer cause the computer to perform a method for computing a variable-input-length pseudorandom function that uses a block cipher, keyed by a given key, to produce an authentication tag from a message, the method comprising:\ndetermining a stride value by applying the block cipher to a constant;\ncomputing a first offsets using the block cipher;\ncomputing each subsequent offset in a sequence of offsets by combining the prior offset and the stride value; and\ncomputing the authentication tag using the block cipher, the message, and the sequence of offsets.",
        "25. An apparatus that computes a variable-input-length pseudorandom function using an n-bit pseudorandom function, which transforms a key and a message to an authentication tag, the apparatus comprising:\na generating mechanism that is configured to generate a sequence of offsets from the key;\na partitioning mechanism that is configured to partition the message into a sequence of n-bit message blocks and a message fragment having at most n bits;\na combining mechanism that is configured to combine each message block with a corresponding offset to get a corresponding input block;\na pseudorandom function mechanism that is configured to apply the n-bit pseudorandom function to each input block to get a corresponding output block;\na checksum mechanism that is configured to compute a checksum as a function of at least the output blocks and the final fragment; and\nan authentication tag mechanism that is configured to compute the authentication tag by applying the n-bit pseudorandom function to the checksum.",
        "26. An apparatus that computes a variable-input-length pseudorandom function that transforms a key and a message to an authentication tag, the apparatus comprising:\na generation mechanism that is configured to generate a sequence of offsets from the key;\na partitioning mechanism that is configured to partition the message into a message core and a message fragment;\na checksum mechanism that is configured to, compute a partial checksum as a function of the message core, the sequence of offsets, and the key, and to compute a final checksum as a function of at least the partial checksum and the message fragment; and\nan authentication tag mechanism that is configured to compute the authentication tag as a function of the final checksum and the key.",
        "27. An apparatus that authenticates messages, using a key, that associates to each message an authentication tag, comprising:\na generation mechanism that is configured to generate a sequence of offsets from the key;\na partitioning mechanism that is configured to partition the message into a message core and a message fragment;\na checksum mechanism that is configured to, compute a partial checksum as a function of the message core, the sequence of offsets, and the key, and to compute a final checksum as a function of at least the partial checksum and the message fragment;\nan authentication tag mechanism that is configured to compute the authentication tag as a function of the final checksum and the key.",
        "28. An apparatus that computes a variable-input-length pseudorandom function that uses a keyed block cipher to produce an authentication tag from a message, comprising:\na key variant mechanism that is configured to determine a key variant by applying the keyed block cipher to a constant;\nan offset mechanism that is configured to compute a sequence of offsets from the key variant;\na checksum mechanism that is configured to, use the keyed block cipher to compute a checksum from the message and the sequence of offsets, and to apply the keyed block cipher to the checksum to yield the authentication tag.",
        "29. An apparatus that generates a sequence of offsets, to be used for authenticating messages between parties who share a secret key, comprising:\na key variant mechanism that is configured to determine a key variant as a function of the secret key;\na basis computing mechanism that is configured to, use the key variant to determine a sequence of basis offsets, and to determine a sequence of offsets from the sequence of basis offsets, wherein each offset in the sequence of basis offsets is determined by combining certain basis offsets from the sequence of basis offsets."
      ],
      "title": "Method and apparatus for realizing a parallelizable variable-input-length pseudorandom function"
    },
    {
      "referenceIdentifier": "20050213752",
      "abstract": "Stream cipher encryption and message authentication. Stream cipher encryption is performed by generating a keystream at the transmitting end from a state value, applying the keystream to plaintext to generate an encrypted message block having at least a portion of the plaintext converted to ciphertext, and updating the state value as a function of said at least a portion of the plaintext. Stream cipher decryption is performed by generating a keystream at the receiving end from the same state value, applying the keystream to the encrypted message block to convert the ciphertext to plaintext, and updating the state value as a function of the plaintext. Message authentication techniques are also described.",
      "claims": [
        "1. An encryption module, comprising:\na storage medium configured to store a state value; and\na processor configured to generate a keystream from the state value, and apply the keystream to plaintext to generate an encrypted message block having at least a portion of the plaintext converted to ciphertext, and wherein the processor is further configured to update the state value in the storage medium as a function of said at least a portion of the plaintext.",
        "2. The encryption module of claim 1 wherein the plaintext includes a second portion, and the encrypted message block includes the ciphertext and the second portion of the plaintext, wherein the processor is further configured to update the state value in the storage medium as a function of ciphertext generated from the second portion of the plaintext.",
        "3. The encryption module of claim 1 wherein the plaintext includes a second portion, and the encrypted message block includes the ciphertext and the second portion of the plaintext, and wherein the processor is further configured to apply a mask to the keystream, the masked keystream preventing the second portion of the plaintext from being converted to ciphertext.",
        "4. The encryption module of claim 1 wherein the processor is further configured to generate a plaintext message block with only plaintext, and update the state value in the storage medium as a function of ciphertext generated from the plaintext in the plaintext message block.",
        "5. The encryption module of claim 4 wherein the processor is further configured to apply a mask to the keystream, the masked keystream preventing the plaintext in the plaintext message block from being converted to ciphertext.",
        "6. The encryption module of claim 5 wherein the processor is further configured to generate a transmission block including one or more plaintext message blocks and one or more encrypted message blocks, and attaching a message authentication tag to the transmission block, the processor being further configured to generate the message authentication tag from the state value in the storage medium at some time after the one or more plaintext message blocks and the one or more encrypted message blocks have been generated.",
        "7. The encryption module of claim 1 wherein the processor is further configured to truncate the keystream when the text in the encrypted message block is less than a block length.",
        "8. The encryption module of claim 7 wherein the processor is further configured to update the state value in the storage medium by applying a non-linear function to feedback with padding, the feedback including said at least a portion of the plaintext.",
        "9. The encryption module of claim 8 wherein the processor is further configured to mask the keystream, the mask being generated by setting to zero bits corresponding to bits in the encrypted message block without text.",
        "10. A decryption module, comprising:\na storage medium configured to store a state value; and\na processor configured to generate a keystream from the state value, and apply the keystream to an encrypted message block to convert ciphertext to plaintext, and wherein the processor is further configured to update the state value in the storage medium as a function of the plaintext.",
        "11. The decryption module of claim 10 wherein the encrypted message block further includes plaintext, and wherein the processor is further configured to update the state value in the storage medium as a function of ciphertext generated from the plaintext in the encrypted message block.",
        "12. The decryption module of claim 11 wherein the processor is further configured to apply a mask to the keystream, the masked keystream preventing the plaintext in the encrypted message block from being converted to ciphertext.",
        "13. The decryption module of claim 10 wherein the processor is further configured to receive a plaintext message block with only plaintext, and update the state value in the storage medium as a function of ciphertext generated from the plaintext in the plaintext message block.",
        "14. The decryption module of claim 13 wherein the processor is further configured to apply a mask to the keystream, the masked keystream preventing the plaintext in the plaintext message block from being converted to ciphertext.",
        "15. The decryption module of claim 13 wherein the processor is further configured to receive a transmission block including one or more plaintext message blocks and one or more encrypted message blocks, and verify a message authentication tag attached to the transmission block.",
        "16. The decryption module of claim 15 wherein the processor is further configured to verify the message authentication tag by generating an expected message authentication tag from the state value in the storage medium at some time after the keystream has been applied to the one or more plaintext message blocks and the one or more encrypted message blocks, and comparing the expected message authentication tag with the message authentication tag attached to the transmission block.",
        "17. The decryption module of claim 10 wherein the processor is further configured to truncate the keystream when the text in the encrypted message block is less than a block length.",
        "18. The decryption module of claim 17 wherein the processor is further configured to update the state value in the storage medium by applying a non-linear function to feedback with padding, the feedback including the plaintext.",
        "19. The decryption module of claim 18 wherein the processor is further configured to mask the keystream, the mask being generated by setting to zero bits corresponding to bits in the encrypted message block without text.",
        "20. A method of encryption, comprising:\ngenerating a keystream from a state value;\napplying the keystream to plaintext to generate an encrypted message block having at least a portion of the plaintext converted to ciphertext; and\nupdating the state value in the storage medium as a function of said at least a portion of the plaintext.",
        "21. The method of claim 20 wherein the plaintext includes a second portion, and the encrypted message block includes the ciphertext and the second portion of the plaintext, wherein the method further comprises updating the state value as a function of ciphertext generated from the second portion of the plaintext.",
        "22. The method of claim 20 wherein the plaintext includes a second portion, and the encrypted message block includes the ciphertext and the second portion of the plaintext, and wherein the method further comprises masking the keystream, the masked keystream preventing the second portion of the plaintext from being converted to ciphertext.",
        "23. The method of claim 20 further comprising generating a plaintext message block with only plaintext, and updating the state value in the storage medium as a function of ciphertext generated from the plaintext in the plaintext message block.",
        "24. The method of claim 23 further comprising masking the keystream, the masked keystream preventing the plaintext in the plaintext message block from being converted to ciphertext.",
        "25. The method of claim 24 further comprising generating a transmission block including the plaintext message block and the encrypted message block, and attaching a message authentication tag to the transmission block, and wherein the message authentication tag is generated from the state value in the storage medium at some time after the plaintext message block and the encrypted message block have been generated.",
        "26. A method of decryption, comprising:\ngenerating a keystream from the state value;\napplying the keystream to an encrypted message block to convert ciphertext to plaintext; and\nupdating the state value in the storage medium as a function of the plaintext.",
        "27. The method of claim 26 wherein the encrypted message block further includes plaintext, and wherein the state value is updated as a function of ciphertext generated from the plaintext in the encrypted message block.",
        "28. The method of claim 27 further comprising masking the keystream, the masked keystream preventing the plaintext in the encrypted message block from being converted to ciphertext.",
        "29. The method of claim 26 further comprising receiving a plaintext message block with only plaintext, and wherein the state value is updated as a function of ciphertext generated from the plaintext in the plaintext message block.",
        "30. The method of claim 29 further comprising masking the keystream, the masked keystream preventing the plaintext in the plaintext message block from being converted to ciphertext.",
        "31. The method of claim 29 further comprising receiving a transmission block including the plaintext message block and the encrypted message block, and verifying a message authentication tag attached to the transmission block.",
        "32. The method of claim 31 wherein the message authentication tag is verified by generating an expected message authentication tag from the state value in the storage medium at some time after the keystream has been applied to the plaintext message block and the encrypted message block, and comparing the expected message authentication tag with the message authentication tag attached to the transmission block.",
        "33. Computer readable media embodying a program of instructions executable by a processor to perform a method of encryption, the method comprising:\ngenerating a keystream from a state value;\napplying the keystream to plaintext to generate an encrypted message block having at least a portion of the plaintext converted to ciphertext; and\nupdating the state value in the storage medium as a function of said at least a portion of the plaintext.",
        "34. The computer readable media of claim 33 wherein the plaintext includes a second portion, and the encrypted message block includes the ciphertext and the second portion of the plaintext, wherein the state value is updated as a function of ciphertext generated from the second portion of the plaintext.",
        "35. The computer readable media of claim 33 wherein the plaintext includes a second portion, and the encrypted message block includes the ciphertext and the second portion of the plaintext, and wherein the method further comprises masking the keystream, the masked keystream preventing the second portion of the plaintext from being converted to ciphertext.",
        "36. The computer readable media of claim 33 wherein the method further comprises generating a plaintext message block with only plaintext, and updating the state value in the storage medium as a function of ciphertext generated from the plaintext in the plaintext message block.",
        "37. Computer readable media embodying a program of instructions executable by a processor to perform a method of decryption, the method comprising:\ngenerating a keystream from the state value;\napplying the keystream to an encrypted message block to convert ciphertext to plaintext; and\nupdating the state value in the storage medium as a function of the plaintext.",
        "38. The computer readable media of claim 37 wherein the encrypted message block further includes plaintext, and wherein the state value is updated as a function of ciphertext generated from the plaintext in the encrypted message block.",
        "39. The computer readable media of claim 38 wherein the method further comprises masking the keystream, the masked keystream preventing the plaintext in the encrypted message block from being converted to ciphertext.",
        "40. The computer readable media of claim 37 wherein the method further comprises receiving a plaintext message block with only plaintext, and wherein the state value is updated as a function of ciphertext generated from the plaintext in the plaintext message block.",
        "41. An encryption module, comprising:\nmeans for generating a keystream from a state value;\nmeans for applying the keystream to plaintext to generate an encrypted message block having at least a portion of the plaintext converted to ciphertext; and\nmeans for updating the state value in the storage medium as a function of said at least a portion of the plaintext.",
        "42. A method of decryption, comprising:\nmeans for generating a keystream from the state value;\nmeans for applying the keystream to an encrypted message block to convert ciphertext to plaintext; and\nmeans for updating the state value in the storage medium as a function of the plaintext."
      ],
      "title": "Stream cipher encryption and message authentication"
    },
    {
      "referenceIdentifier": "20100027783",
      "abstract": "An authenticated encryption method includes receiving, by an Advanced Encryption Standard (AES) engine, a cipher key and computing a hash key using the received cipher key. The computed hash key is stored in a storage memory. The AES engine then receives a packet of data and encrypts the packet of data using the received cipher key. The hash key from the storage memory is sent to a GHASH engine which is used to authenticate the packet of data. Encrypting the packet of data is performed after the hash key is stored in the storage memory. Input flow of the packet of data is enabled after the hash key is stored in the storage memory.",
      "claims": [
        "1. An authenticated encryption method comprising the steps of:\n(a) receiving, by an Advanced Encryption Standard (AES) engine, a cipher key;\n(b) computing, by the AES engine, a hash key using the received cipher key;\n(c) storing the computed hash key in a storage memory;\n(d) receiving, by the AES engine, a packet of data;\n(e) encrypting, by the AES engine, the packet of data using the received cipher key;\n(f) receiving the hash key, by a GHASH engine, from the storage memory; and\n(g) authenticating the packet of data, by the GHASH engine, using the hash key.",
        "2. The method of claim 1 wherein the encrypting step includes using a counter mode in the AES engine to encrypt the packet of data.",
        "3. The method of claim 2 wherein using the counter mode includes iteratively XOR-ing (a) a plaintext portion of the packet of data with (b) an encrypted value of counter data using the cipher key, and thereby obtaining a ciphertext of data.",
        "4. The method of claim 1 wherein the authenticating step includes transmitting the ciphertext to the GHASH engine, and iteratively multiplying the ciphertext, by the GHASH engine, using the hash key.",
        "5. The method of claim 1 wherein encrypting the packet of data is performed after the hash key is stored in the storage memory.",
        "6. The method of claim 1 further including the step of:\nenabling flow of the packet of data, after the hash key is stored in the storage memory.",
        "7. The method of claim 6 wherein after enabling the flow of the packet of data, encrypting the packet of data using the encryption key, by the AES engine, and after enabling the flow of the packet of data, authenticating the packet of data, using the hash key stored in the storage memory, by the GHASH engine.",
        "8. The method of claim 1 wherein computing the hash key includes performing 10 rounds of key expansion on the received cipher key, if the received cipher key is a 128 bit block of data, and computing the hash key includes performing 12 rounds of key expansion on the received cipher key, if the received cipher key is a 192 bit block of data, and computing the hash key includes performing 14 rounds of key expansion on the received cipher key, if the received cipher key is a 256 bit block of data.",
        "9. The method of claim 1 wherein receiving the cipher key includes receiving at least two separate cipher keys from respective data channels, and computing the hash key includes computing at least two separate hash keys corresponding to the at least two separately received cipher keys.",
        "10. The method of claim 1 wherein receiving the packet of data includes receiving during an interval of time a predetermined number of packets of data, calculating the hash key includes calculating the hash key once per the interval of time, and storing the computed hash key includes storing the computed hash key once per the interval of time.",
        "11. An authenticated decryption method comprising the steps of:\n(a) receiving, by an Advanced Encryption Standard (AES) engine, a cipher key;\n(b) computing, by the AES engine, a hash key using the received cipher key;\n(c) storing the computed hash key in a storage memory;\n(d) receiving, by the AES engine, a packet of data;\n(e) decrypting, by the AES engine, the packet of data using the received cipher key;\n(f) receiving the hash key, by a GHASH engine, from the storage memory; and\n(g) authenticating the packet of data, by the GHASH engine, using the hash key.",
        "12. The method of claim 11 wherein the decrypting step includes using a counter mode in the AES engine to decrypt the packet of data.",
        "13. The method of claim 11 wherein decrypting the packet of data is performed after the hash key is stored in the storage memory.",
        "14. The method of claim 11 further including the step of:\nenabling flow of the packet of data, after the hash key is stored in the storage memory.",
        "15. The method of claim 14 wherein after enabling the flow of the packet of data, decrypting the packet of data using the encryption key, by the AES engine, and after enabling the flow of the packet of data, authenticating the packet of data, using the hash key stored in the storage memory, by the GHASH engine.",
        "16. An authenticated encryption module comprising an Advanced Encryption Standard (AES) engine for using a cipher key to compute a hash key, a storage memory for storing the computed hash key, and a GHASH engine for receiving the computed hash key stored in the storage memory for authenticating a packet of data, wherein (a) the AES engine encrypts the packet of data to form ciphertext, (b) the GHASH engine receives the ciphertext from the AES engine to multiply the received ciphertext with the computed hash key, and (c) an authentication tag is computed using the multiplied ciphertext with the computed hash key.",
        "17. The module of claim 16 including a controller for enabling input flow of the packet of data, after the computed hash key is stored in the storage memory.",
        "18. The module of claim 16 wherein the packet of data includes additional authenticated data (AAD), and the GHASH engine is configured to receive the AAD to multiply the AAD with the computed hash key.",
        "19. The module of claim 16 wherein the AES engine is configured to receive at least two different encryption keys from respective data channels, and the AES engine includes two encryption modules for encrypting at least two different packets of data received from the respective data channels using the at least two different encryption keys.",
        "20. The module of claim 16 wherein the packet of data includes multiple packets of data, and the hash key is computed by the AES engine once for all the received multiple packets of data, and the hash key is stored in the storage memory once for all the received multiple packets of data."
      ],
      "title": "Precalculated encryption key"
    },
    {
      "referenceIdentifier": "20040019785",
      "abstract": "Methods and apparatus are presented for encrypting and authenticating data, wherein some data is encrypted and some data is not encrypted, but all of the data is authenticated. Different formulations for authentication blocks are used according to whether a block of data occupies a cleartext position or ciphertext position. The authentication blocks are then combined to form a checksum, which is encrypted to form an authentication tag.",
      "claims": [
        "1. A method for encrypting and authenticating data as a single entity, comprising:\narranging data into a plurality of plaintext blocks, each sized according to a cipher block size;\nspecifying at least one cleartext position for which at least one ciphertext block will be the same as a corresponding plaintext block;\ndetermining a plurality of noise blocks using a nonce value and a first key;\ndetermining a plurality of intermediate ciphertext blocks, wherein the first intermediate ciphertext block corresponds to an encryption of the nonce, and the remaining intermediate ciphertexts are determined by:\nfor each of the plurality of plaintext blocks specified by a cleartext position, combining the plaintext block with a corresponding noise block; and\nfor each of the plurality of plaintext blocks not specified by a cleartext position, forming an intermediate plaintext block using the plaintext block and a preceding intermediate ciphertext block and then encrypting the intermediate plaintext block using a second key;\ndetermining a plurality of ciphertext blocks, wherein the plurality of ciphertext blocks are determined by:\nsetting the first ciphertext block equal to the first intermediate ciphertext block;\nsetting each of the ciphertext blocks specified by a cleartext position equal to a corresponding plaintext block; and\ndetermining each of the remaining ciphertext blocks by combining a corresponding intermediate ciphertext block with a corresponding noise block;\ndetermining a plurality of authentication blocks, wherein the plurality of authentication blocks are determined by:\nif an authentication block is associated with a plaintext block that is not specified by a cleartext position, then setting the authentication block equal to the plaintext block;\nif an authentication block is associated with a plaintext block that is specified by a cleartext position, then determining the authentication block by decrypting an associated intermediate ciphertext block and combining the decrypted associated intermediate ciphertext block with a preceding intermediate ciphertext block;\ncomputing an authentication tag by combining all of the plurality of authentication blocks with a noise block and then encrypting the combined result; and\nappending the authentication tag to the plurality of ciphertext blocks.",
        "2. The method of claim 1, wherein the encrypting uses block cipher encryption.",
        "3. The method of claim 1, wherein the encrypting and the decrypting comprise:\nchoosing to apply block cipher encryption or block cipher decryption;\nselecting a key and a block cipher to use, according to a set of predetermined selection rules; and\nusing the key with the block cipher on a plurality of input blocks to obtain a plurality of output blocks.",
        "4. The method of claim 1, wherein combining is performed using a bitwise exclusive-or operation.",
        "5. The method of claim 1, wherein combining is performed using a group operator.",
        "6. The method of claim 5, wherein the group operator is a modular integer addition operator.",
        "7. A method for decrypting and verifying a plurality of transmission blocks accompanied by an authentication tag, comprising:\ndetermining a plurality of noise blocks using a nonce value and a first key;\ndetermining a plurality of intermediate ciphertext blocks by combining each of the plurality of transmission blocks with a corresponding noise block;\ndetermining a plurality of authentication blocks, wherein each of the plurality of authentication blocks is formed by decrypting a corresponding intermediate ciphertext block and then combining the decrypted intermediate ciphertext block with a preceding intermediate ciphertext block;\nsetting each of the plurality of authentication blocks that is not associated with any predetermined cleartext position as a plaintext block;\nsetting each of the plurality of transmission blocks that is associated with any predetermined cleartext position as a plaintext block; and\nverifying the authentication tag by determining whether the last authentication block equals the combination of all other authentication blocks.",
        "8. The method of claim 6, wherein the nonce value is pre-negotiated between a receiver of the plurality of transmission blocks and the sender of the plurality of transmission blocks.",
        "9. The method of claim 6, wherein the nonce value is derived from the first transmission block.",
        "10. Apparatus for encrypting and authenticating data as a single entity, comprising:\nat least one memory element; and\nat least one processing element configured to execute a set of instructions stored on the at least one memory element, the set of instructions for:\narranging data into a plurality of plaintext blocks, each sized according to a cipher block size;\nspecifying at least one cleartext position for which at least one ciphertext block will be the same as a corresponding plaintext block;\ndetermining a plurality of noise blocks using a nonce value and a first key;\ndetermining a plurality of intermediate ciphertext blocks, wherein the first intermediate ciphertext block corresponds to an encryption of the nonce, and the remaining intermediate ciphertexts are determined by:\nfor each of the plurality of plaintext blocks specified by a cleartext position, combining the plaintext block with a corresponding noise block; and\nfor each of the plurality of plaintext blocks not specified by a cleartext position, forming an intermediate plaintext block using the plaintext block and a preceding intermediate ciphertext block and then encrypting the intermediate plaintext block using a second key;\ndetermining a plurality of ciphertext blocks, wherein the plurality of ciphertext blocks are determined by:\nsetting the first ciphertext block equal to the first intermediate ciphertext block;\nsetting each of the ciphertext blocks specified by a cleartext position equal to a corresponding plaintext block; and\ndetermining each of the remaining ciphertext blocks by combining a corresponding intermediate ciphertext block with a corresponding noise block;\ndetermining a plurality of authentication blocks, wherein the plurality of authentication blocks are determined by:\nif an authentication block is associated with a plaintext block that is not specified by a cleartext position, then setting the authentication block equal to the plaintext block;\nif an authentication block is associated with a plaintext block that is specified by a cleartext position, then determining the authentication block by decrypting an associated intermediate ciphertext block and combining the decrypted associated intermediate ciphertext block with a preceding intermediate ciphertext block;\ncomputing an authentication tag by combining all of the plurality of authentication blocks with a noise block and then encrypting the combined result; and\nappending the authentication tag to the plurality of ciphertext blocks.",
        "11. Apparatus for decrypting and verifying a plurality of transmission blocks accompanied by an authentication tag, comprising:\nat least one memory element; and\nat least one processing element configured to execute a set of instructions stored on the at least one memory element, the set of instructions for:\ndetermining a plurality of noise blocks using a nonce value and a first key;\ndetermining a plurality of intermediate ciphertext blocks by combining each of the plurality of transmission blocks with a corresponding noise block;\ndetermining a plurality of authentication blocks, wherein each of the plurality of authentication blocks is formed by decrypting a corresponding intermediate ciphertext block and then combining the decrypted intermediate ciphertext block with a preceding intermediate ciphertext block;\nsetting each of the plurality of authentication blocks that is not associated with any predetermined cleartext position as a plaintext block;\nsetting each of the plurality of transmission blocks that is associated with any predetermined cleartext position as a plaintext block; and\nverifying the authentication tag by determining whether the last authentication block equals the combination of all other authentication blocks.",
        "12. Apparatus for encrypting and authenticating data as a single entity, comprising:\nmeans for arranging data into a plurality of plaintext blocks, each sized according to a cipher block size;\nmeans for specifying at least one cleartext position for which at least one ciphertext block will be the same as a corresponding plaintext block;\nmeans for determining a plurality of noise blocks using a nonce value and a first key;\nmeans for determining a plurality of intermediate ciphertext blocks, wherein the first intermediate ciphertext block corresponds to an encryption of the nonce, and the remaining intermediate ciphertexts are determined by:\nfor each of the plurality of plaintext blocks specified by a cleartext position, combining the plaintext block with a corresponding noise block; and\nfor each of the plurality of plaintext blocks not specified by a cleartext position, forming an intermediate plaintext block using the plaintext block and a preceding intermediate ciphertext block and then encrypting the intermediate plaintext block using a second key;\nmeans for determining a plurality of ciphertext blocks, wherein the plurality of ciphertext blocks are determined by:\nsetting the first ciphertext block equal to the first intermediate ciphertext block;\nsetting each of the ciphertext blocks specified by a cleartext position equal to a corresponding plaintext block; and\ndetermining each of the remaining ciphertext blocks by combining a corresponding intermediate ciphertext block with a corresponding noise block;\nmeans for determining a plurality of authentication blocks, wherein the plurality of authentication blocks are determined by:\nif an authentication block is associated with a plaintext block that is not specified by a cleartext position, then setting the authentication block equal to the plaintext block;\nif an authentication block is associated with a plaintext block that is specified by a cleartext position, then determining the authentication block by decrypting an associated intermediate ciphertext block and combining the decrypted associated intermediate ciphertext block with a preceding intermediate ciphertext block;\nmeans for computing an authentication tag by combining all of the plurality of authentication blocks with a noise block and then encrypting the combined result; and\nmeans for appending the authentication tag to the plurality of ciphertext blocks.",
        "13. Apparatus for decrypting and verifying a plurality of transmission blocks accompanied by an authentication tag, comprising:\nmeans for determining a plurality of noise blocks using a nonce value and a first key;\nmeans for determining a plurality of intermediate ciphertext blocks by combining each of the plurality of transmission blocks with a corresponding noise block;\nmeans for determining a plurality of authentication blocks, wherein each of the plurality of authentication blocks is formed by decrypting a corresponding intermediate ciphertext block and then combining the decrypted intermediate ciphertext block with a preceding intermediate ciphertext block;\nmeans for setting each of the plurality of authentication blocks that is not associated with any predetermined cleartext position as a plaintext block;\nmeans for setting each of the plurality of transmission blocks that is associated with any predetermined cleartext position as a plaintext block; and\nmeans for verifying the authentication tag by determining whether the last authentication block equals the combination of all other authentication blocks.",
        "14. A method for secure data transmissions, wherein a first portion of the data transmission is sent as plaintext, a second portion of the data transmission is sent as ciphertext, and all of the data transmission is authenticated, the method comprising:\ngenerating a set of cleartext positions;\nencrypting the first portion of the data transmission and the second portion of the data transmission into ciphertext, wherein the first portion of the data transmission is specified by the set of cleartext positions and second portion of the data transmission is not associated with any one of the set of cleartext positions;\ndetermining a plurality of intermediate ciphertext blocks through an iterative procedure;\ngenerating a plurality of authentication blocks, wherein each of a first portion of the plurality of authentication blocks is set equal to a corresponding member of the first portion of the data transmission and each of a second portion of the plurality of authentication blocks is derived from combining a corresponding intermediate ciphertext block and a previous intermediate ciphertext block;\ngenerating an authentication tag by combining each of the plurality of authentication blocks and a noise block and encrypting the combined result;\ntransmitting the plaintext, the ciphertext, and the authentication tag, wherein the plaintext is the first portion of the data transmission specified by the set of cleartext positions.",
        "15. Apparatus for secure data transmissions, wherein a first portion of the data transmission is sent as plaintext, a second portion of the data transmission is sent as ciphertext, and all of the data transmission is authenticated, the method comprising:\nmeans for generating a set of cleartext positions;\nmeans for encrypting the first portion of the data transmission and the second portion of the data transmission into ciphertext, wherein the first portion of the data transmission is specified by the set of cleartext positions and second portion of the data transmission is not associated with any one of the set of cleartext positions;\nmeans for determining a plurality of intermediate ciphertext blocks through an iterative procedure;\nmeans for generating a plurality of authentication blocks, wherein each of a first portion of the plurality of authentication blocks is set equal to a corresponding member of the first portion of the data transmission and each of a second portion of the plurality of authentication blocks is derived from combining a corresponding intermediate ciphertext block and a previous intermediate ciphertext block;\nmeans for generating an authentication tag by combining each of the plurality of authentication blocks and a noise block and encrypting the combined result;\nmeans for transmitting the plaintext, the ciphertext, and the authentication tag, wherein the plaintext is the first portion of the data transmission specified by the set of cleartext positions."
      ],
      "title": "Efficient encryption and authentication for data processing systems"
    }
  ],
  "firstInventorToFileIndicator": "N",
  "applicationStatusCode": 150,
  "applicationTypeCode": "UTL",
  "entityStatusData": {
    "businessEntityStatusCategory": "Regular Undiscounted"
  },
  "filingDate": "2013-03-11",
  "class/subclass": "380/28",
  "nationalStageIndicator": false,
  "firstInventorName": "Atsushi Yamada",
  "cpcClassificationBag": [
    "H04L9/0643",
    "H04L9/30",
    "H04L9/0637",
    "H04L2209/125"
  ],
  "effectiveFilingDate": "2013-03-11",
  "publicationDateBag": [
    "2014-05-29"
  ],
  "publicationSequenceNumberBag": [
    "0146964"
  ],
  "earliestPublicationDate": "2014-05-29",
  "applicationTypeLabelName": "Utility",
  "applicationStatusDate": "2018-02-21",
  "class": "380",
  "applicationTypeCategory": "REGULAR",
  "applicationStatusDescriptionText": "Patented Case",
  "patentNumber": "9917695",
  "grantDate": "2018-03-13",
  "applicantBag": [
    {
      "applicantNameText": "BlackBerry Limited",
      "correspondenceAddressBag": [
        {
          "cityName": "Waterloo",
          "countryCode": "CA",
          "postalCode": "N2K 0A7",
          "nameLineOneText": "BlackBerry Limited",
          "countryName": "CANADA",
          "postalAddressCategory": "postal"
        }
      ]
    },
    {
      "applicantNameText": "Certicom Corp.",
      "correspondenceAddressBag": [
        {
          "cityName": "Mississauga",
          "countryCode": "CA",
          "nameLineOneText": "Certicom Corp.",
          "countryName": "CANADA",
          "postalAddressCategory": "postal"
        }
      ]
    }
  ],
  "firstApplicantName": "BlackBerry Limited",
  "customerNumber": 94149,
  "groupArtUnitNumber": "2439",
  "earliestPublicationNumber": "US20140146964A1",
  "inventionTitle": "AUTHENTICATED ENCRYPTION METHOD USING WORKING BLOCKS",
  "applicationConfirmationNumber": 9056,
  "examinerNameText": "LE, CANH",
  "subclass": "28",
  "publicationCategoryBag": [
    "Granted/Issued",
    "Pre-Grant Publications - PGPub"
  ],
  "docketNumber": "29717-2042001",
  "title": "AUTHENTICATED ENCRYPTION METHOD USING WORKING BLOCKS",
  "parsed_CTNF": [
    {
      "claimNumber": 1,
      "parentClaim": -1,
      "isReject": true,
      "reasons": [
        {
          "sectionCode": 102,
          "citedPatents": [
            {
              "patentNum": "US 20100303229",
              "text": [
                12,
                13,
                38,
                46,
                48,
                52,
                58,
                59,
                60,
                61
              ],
              "img": [
                "1",
                "2A",
                "2C",
                "3"
              ]
            }
          ],
          "reason": "Regarding claim 1, Unruh discloses a computer-implemented authenticated encryption method for converting a plaintext message into a ciphertext message, said method comprising: (A) dividing said plaintext message into at least two working blocks, each said working block having a mathematical relationship to said plaintext message (Unruh: fig. 2A, par. 0038, plaintext block 212 & plaintext block 222; fig. 3; par. 0058, initialization vector and index value; fig. 1; pars. 0012-0013); (B) for each said working block, computing a working block ciphertext as a function of such working block, a deterministic working block initialization vector, and a deterministic working block encryption key (Unruh: fig. 2A, par. 0038; plaint text 1 (212), Seed(1) & encryption key for the operation 214 is represented by a value Kw, Ciphertext 1 (216); fig. 3; par. 0058, initialization vector and index value; par. 0059-0061; fig. 1; pars. 0012-0013; encryption key, initialization vector (IV)); (C) for each said working block, computing a message authentication tag as a function of a deterministic working block message authentication key (Unruh: fig. 2C; par. 0040, applying hash function for each block cipher multH (218); fig. 1; par. 0012, Authentication tag which is generated by applying a hash function to each block of ciphertext) and at least one of (a) the working block ciphertext computed for such working block and (b) such working block (Unruh: Unruh: fig. 2C; par. 0040, applying hash function for each block cipher multH (218); fig. 1; par. 0012, Authentication tag, which is generated by applying a hash function to each block of ciphertext); (D) computing a global message authentication tag as a function of the message authentication tag computed for each said working block and a global message authentication key (Unruh: fig. 2C, 248 (Auth Tag), pars. 0046, 0052, Global message authentication ; fig. 1, par. 0016; The result of operations is Auth. Tag); and (E) wherein said ciphertext message comprises the working block ciphertext computed for each said working block and said global message authentication tag (Unruh: fig. 2C, ciphertext 1, ciphertext 2, … ciphertext N; Unruh: fig. 2C, 248 (Auth Tag), pars. 0046, 0052, Global message authentication; fig. 1, par. 0016; The result of operations is Auth. Tag)."
        }
      ]
    },
    {
      "claimNumber": 2,
      "parentClaim": 1,
      "isReject": true,
      "reasons": [
        {
          "sectionCode": 102,
          "citedPatents": [
            {
              "patentNum": "US 20100303229",
              "text": [
                12,
                40
              ],
              "img": [
                "1",
                "2C"
              ]
            }
          ],
          "reason": "Regarding claim 2, Unruh discloses the method of claim 1. Unruh further discloses wherein said ciphertext message further comprises the message authentication tag computed for each said working block (Unruh: fig. 2C; par. 0040, applying hash function for each block cipher multH (218); fig. 1; par. 0012, Authentication tag, which is generated by applying a hash function to each block of ciphertext)."
        }
      ]
    },
    {
      "claimNumber": 3,
      "parentClaim": 2,
      "isReject": true,
      "reasons": [
        {
          "sectionCode": 102,
          "citedPatents": [
            {
              "patentNum": "US 20100303229",
              "text": [
                12,
                13,
                38,
                48,
                58,
                59,
                60,
                61
              ],
              "img": [
                "1",
                "2A",
                "3"
              ]
            }
          ],
          "reason": "Regarding claim 3, Unruh discloses the method of claim 2. Unruh further discloses wherein said dividing said plaintext message into at least two working blocks comprises partitioning said plaintext message into at least two working blocks (Unruh: fig. 2A, par. 0038, plaintext block 212 & plaintext block 222; fig. 3; par. 0058, initialization vector and index value; fig. 1; pars. 0012-0013), and wherein, for each said working block, the indication corresponding to said mathematical relationship of such working block to said plaintext message comprises an indication corresponding to a position of such working block within said plaintext message (Unruh: par. 0048; I is an index that corresponds to the position of a block in the plaintext record; fig. 3; par. 0058, initialization vector and index value; pars. 0059-0061)."
        }
      ]
    },
    {
      "claimNumber": 4,
      "parentClaim": 3,
      "isReject": true,
      "reasons": [
        {
          "sectionCode": 102,
          "citedPatents": [
            {
              "patentNum": "US 20100303229",
              "text": [
                48,
                58,
                59,
                60,
                61
              ],
              "img": [
                "3"
              ]
            }
          ],
          "reason": "Regarding claim 4, Unruh discloses the method of claim 3. Unruh further discloses wherein, for each said working block, the deterministic working block initialization vector used to compute the working block ciphertext computed for such working block is a function of a global initialization vector and the indication corresponding to said position of such working block within said plaintext message (Unruh: par. 0048; I is an index that corresponds to the position of a block in the plaintext record; fig. 3; par. 0058, initialization vector and index value; pars. 0059-0061)."
        }
      ]
    },
    {
      "claimNumber": 5,
      "parentClaim": 4,
      "isReject": true,
      "reasons": [
        {
          "sectionCode": 102,
          "citedPatents": [
            {
              "patentNum": "US 20100303229",
              "text": [
                38
              ],
              "img": [
                "2A"
              ]
            }
          ],
          "reason": "Regarding claim 5, Unruh discloses the method of claim 4. Unruh further discloses wherein, for each said working block, the deterministic working block encryption key used to compute the working block ciphertext computed for such working block is a single encryption key common to said at least two working blocks (Unruh: fig. 2A, par. 0038; plaint text 1 (212), Seed(1) & encryption key for the operation 214 is represented by a value Kw, Ciphertext 1 (216))."
        }
      ]
    },
    {
      "claimNumber": 6,
      "parentClaim": 5,
      "isReject": true,
      "reasons": [
        {
          "sectionCode": 102,
          "citedPatents": [
            {
              "patentNum": "US 20100303229",
              "text": [
                16,
                46,
                48,
                51,
                52,
                58,
                59,
                60,
                61
              ],
              "img": [
                "1",
                "3",
                "2C"
              ]
            }
          ],
          "reason": "Regarding claim 6, Unruh discloses the method of claim 5. Unruh further discloses wherein, for each said working block, the deterministic working block message authentication key used to compute the message authentication tag computed for such working block is said global message authentication key (Unruh: fig. 2C, 248 (Auth Tag), pars. 0046, 0052, Global message authentication ; fig. 1, par. 0016; The result of operations is Auth. Tag (i.e. Global message authentication tag), wherein said computing a global message authentication tag is further a function of the length of each said working block (Unruh: pars. 0046, 0051, 0058; length of authentication data and the length of the ciphertext), and wherein said computing a global message authentication tag is further a function of said global initialization vector (Unruh: par. 0048; I is an index that corresponds to the position of a block in the plaintext record; fig. 3; par. 0058, initialization vector and index value; pars. 0059-0061)."
        }
      ]
    },
    {
      "claimNumber": 7,
      "parentClaim": 6,
      "isReject": true,
      "reasons": [
        {
          "sectionCode": 102,
          "citedPatents": [
            {
              "patentNum": "US 20100303229",
              "text": [
                12,
                40
              ],
              "img": [
                "1",
                "2C"
              ]
            }
          ],
          "reason": "Regarding claim 7, Unruh discloses the method of claim 6. Unruh further discloses wherein, for each said working block, said computing a message authentication tag for such working block comprises computing a function of a deterministic working block message authentication key and such working block (Unruh: fig. 2C; par. 0040, applying hash function for each block cipher multH (218); fig. 1; par. 0012, Authentication tag which is generated by applying a hash function to each block of ciphertext)."
        }
      ]
    },
    {
      "claimNumber": 8,
      "parentClaim": 6,
      "isReject": true,
      "reasons": [
        {
          "sectionCode": 102,
          "citedPatents": [
            {
              "patentNum": "US 20100303229",
              "text": [
                12,
                13,
                38,
                48,
                58,
                59,
                60,
                61
              ],
              "img": [
                "1",
                "2A",
                "3"
              ]
            }
          ],
          "reason": "Regarding claim 8, Unruh discloses the method of claim 6. Unruh further discloses wherein, for each said working block, said computing a message authentication tag for such working block comprises computing a function of a deterministic working block message authentication key, the working block ciphertext computed for such working block (Unruh: fig. 2A, par. 0038; plaint text 1 (212), Seed(1) & encryption key for the operation 214 is represented by a value Kw, Ciphertext 1 (216); fig. 3; par. 0058, initialization vector and index value; par. 0059-0061; fig. 1; pars. 0012-0013; encryption key, initialization vector (IV), and at least one of (a) the deterministic working block initialization vector used to compute the working block ciphertext computed for such working block and (b) the indication corresponding to the position of such working block within said plaintext message (Unruh: par. 0048; I is an index that corresponds to the position of a block in the plaintext record; fig. 3; par. 0058, initialization vector and index value; pars. 0059-0061)."
        }
      ]
    },
    {
      "claimNumber": 9,
      "parentClaim": 5,
      "isReject": true,
      "reasons": [
        {
          "sectionCode": 102,
          "citedPatents": [
            {
              "patentNum": "US 20100303229",
              "text": [
                12,
                13,
                38,
                40,
                58,
                59,
                60,
                61
              ],
              "img": [
                "1",
                "2A",
                "2C",
                "3"
              ]
            }
          ],
          "reason": "Regarding claim 9, Unruh discloses the method of claim 5. Unruh further discloses wherein, for each said working block, the deterministic working block message authentication key used to compute the message authentication tag for such working block is a function of an initial value and the indication corresponding to the position of such working block within said plaintext message (Unruh: fig. 2A, par. 0038; plaint text 1 (212), Seed(1) & encryption key for the operation 214 is represented by a value Kw, Ciphertext 1 (216); fig. 3; par. 0058, initialization vector and index value; pars 0059-0061; fig. 1; pars. 0012-0013; encryption key, initialization vector (IV)); wherein, for each said working block, said computing a message authentication tag for such working block comprises computing a function of a deterministic working block message authentication key and the working block ciphertext computed for such working block (Unruh: fig. 2C; par. 0040, applying hash function for each block cipher multH (218); fig. 1; par. 0012, Authentication tag which is generated by applying a hash function to each block of ciphertext)."
        }
      ]
    },
    {
      "claimNumber": 10,
      "parentClaim": -1,
      "isReject": true,
      "reasons": [
        {
          "sectionCode": 102,
          "citedPatents": [
            {
              "patentNum": "US 20100303229",
              "text": [
                12,
                54,
                56,
                62
              ],
              "img": [
                "1",
                "2D",
                "5"
              ]
            }
          ],
          "reason": "Regarding claim 10, Unruh discloses a computer-implemented method for converting at least two ciphertext working blocks into a plaintext message, said at least two ciphertext working blocks associated with a global message authentication tag, said method comprising: (A) for each said ciphertext working block, computing a plaintext working block as a function of such ciphertext working block, a deterministic working block initialization vector, and a deterministic working block decryption key (Unruh: fig. 2D; Ciphertext 1, Ciphertext 2.., Plaintext 1, Plaintext 2, Seed (1), Seed(2), encryption key.; par. 0054; the ciphertext may be decrypted by reversing the direction of data flow; fig. 5, par. 0062); (B) for each said ciphertext working block, computing a message authentication tag as a function of a deterministic working block message authentication key (Unruh: fig. 2D; pars. 54-56, applying hash function for each block cipher multH (218); fig. 1; par. 0012, Authentication tag which is generated by applying a hash function to each block of ciphertext and at least one of (a) such ciphertext working block and an indication corresponding to a mathematical relationship of such ciphertext working block to said plaintext message and (b) the plaintext working block computed for such ciphertext working block (Unruh: fig. 2D; pars. 54-56, applying hash function for each block cipher multH (218)); (C) computing a global message authentication tag as a function of the message authentication tag computed for each said working block and a global message authentication key (Unruh: fig. 2D, Auth. Tag (248); pars. 0054-0056; The tag T’); (D) comparing said computed global message authentication tag with said global message authentication tag associated with said at least two ciphertext working blocks (Unruh: par. 0056; The tag T’ generated by the decryption method (i.e. computed global message authentication tag) may be compared to the tag T generated (i.e. Global message authentication tag) by the encryption method); and (D) wherein said plaintext message comprises each plaintext working block computed for each said ciphertext working block (Unruh: fig. 2D, par. 0054)."
        }
      ]
    },
    {
      "claimNumber": 11,
      "parentClaim": 10,
      "isReject": true,
      "reasons": [
        {
          "sectionCode": 102,
          "citedPatents": [
            {
              "patentNum": "US 20100303229",
              "text": [
                54,
                56
              ],
              "img": []
            }
          ],
          "reason": "Regarding claim 11, Unruh discloses the method of claim 10. Unruh further discloses wherein each said ciphertext working block is associated with a message authentication tag and wherein said method further comprises, for each said ciphertext working block, comparing the message authentication tag computed for such ciphertext working block with said message authentication tag associated with such ciphertext working block (Unruh: pars. 0054-0056; The tag T’ generated by the decryption method (i.e. computed global message authentication tag) may be compared to the tag T generated (i.e. Global message authentication tag) by the encryption method)."
        }
      ]
    },
    {
      "claimNumber": 12,
      "parentClaim": 11,
      "isReject": true,
      "reasons": [
        {
          "sectionCode": 102,
          "citedPatents": [
            {
              "patentNum": "US 20100303229",
              "text": [
                48,
                58,
                59,
                60,
                61
              ],
              "img": [
                "3"
              ]
            }
          ],
          "reason": "Regarding claim 12, Unruh discloses the method of claim 11. Unruh further discloses wherein said plaintext message comprises the concatenation of each plaintext working block computed for each said ciphertext working block, and wherein, for each said ciphertext working block, the indication corresponding to said mathematical relationship of such ciphertext working block to said plaintext message comprises an indication corresponding to a position of the plaintext working block computed for such ciphertext working block within said plaintext message (Unruh: par. 0048; I is an index that corresponds to the position of a block in the plaintext record; fig. 3; par. 0058, initialization vector and index value; pars. 0059-0061)."
        }
      ]
    },
    {
      "claimNumber": 13,
      "parentClaim": 12,
      "isReject": true,
      "reasons": [
        {
          "sectionCode": 102,
          "citedPatents": [
            {
              "patentNum": "US 20100303229",
              "text": [
                48,
                58,
                59,
                60,
                61
              ],
              "img": [
                "3"
              ]
            }
          ],
          "reason": "Regarding claim 13, Unruh discloses the method of claim 12. Unruh further discloses wherein, for each said ciphertext working block, the deterministic working block initialization vector used to compute the plaintext working block for such ciphertext working block is a function of a global initialization vector (Unruh: par. 0048; I is an index that corresponds to the position of a block in the plaintext record; fig. 3; par. 0058, initialization vector and index value; pars. 0059-0061) and the indication corresponding to said position of the plaintext working block computed for such ciphertext working block within said plaintext message (Unruh: par. 0048; I is an index that corresponds to the position of a block in the plaintext record; fig. 3; par. 0058, initialization vector and index value; par. 0059-0061)."
        }
      ]
    },
    {
      "claimNumber": 14,
      "parentClaim": 13,
      "isReject": true,
      "reasons": [
        {
          "sectionCode": 102,
          "citedPatents": [
            {
              "patentNum": "US 20100303229",
              "text": [
                39
              ],
              "img": [
                "2B"
              ]
            }
          ],
          "reason": "Regarding claim 14, Unruh discloses the method of claim 13. Unruh further discloses wherein, for each said ciphertext working block, the deterministic working block decryption key used to compute the plaintext working block for such ciphertext working block is a single decryption key common to said at least two ciphertext working blocks (Unruh: fig. 2B, par. 0039; plaint text 1 (212), Seed(1) & encryption key for the operation 214 is represented by a value Kw, Ciphertext 1 (216)."
        }
      ]
    },
    {
      "claimNumber": 15,
      "parentClaim": 14,
      "isReject": true,
      "reasons": [
        {
          "sectionCode": 102,
          "citedPatents": [
            {
              "patentNum": "US 20100303229",
              "text": [
                46,
                48,
                51,
                58,
                59,
                60,
                61
              ],
              "img": [
                "3"
              ]
            }
          ],
          "reason": "Regarding claim 15, Unruh discloses the method of claim 14. Unruh further discloses wherein, for each said ciphertext working block, the deterministic working block message authentication key used to compute the message authentication tag for such ciphertext working block is said global message authentication key, wherein said computing a global message authentication tag is further a function of the length of each plaintext working block computed for each said ciphertext working block (Unruh: pars. 0046, 0051, 0058; length of authentication data and the length of the ciphertext), and wherein said computing a global message authentication tag is further a function of said global initialization vector (Unruh: par. 0048; I is an index that corresponds to the position of a block in the plaintext record; fig. 3; par. 0058, initialization vector and index value; pars. 0059-0061)."
        }
      ]
    },
    {
      "claimNumber": 16,
      "parentClaim": 15,
      "isReject": true,
      "reasons": [
        {
          "sectionCode": 102,
          "citedPatents": [
            {
              "patentNum": "US 20100303229",
              "text": [
                12,
                54
              ],
              "img": [
                "1",
                "2D"
              ]
            }
          ],
          "reason": "Regarding claim 16, Unruh discloses the method of claim 15. Unruh further discloses wherein, for each said ciphertext working block, said computing a message authentication tag comprises computing a function of a deterministic working block message authentication key and the plaintext working block computed for such ciphertext working block (Unruh: fig. 2D; par. 0054, applying hash function for each block cipher multH (218); fig. 1; par. 0012, Authentication tag which is generated by applying a hash function to each block of ciphertext.)"
        }
      ]
    },
    {
      "claimNumber": 17,
      "parentClaim": 15,
      "isReject": true,
      "reasons": [
        {
          "sectionCode": 102,
          "citedPatents": [
            {
              "patentNum": "US 20100303229",
              "text": [
                48,
                58,
                59,
                60,
                61
              ],
              "img": [
                "3"
              ]
            }
          ],
          "reason": "Regarding claim 17, Unruh discloses the method of claim 15. Unruh further discloses wherein, for each said ciphertext working block, said computing a message authentication tag comprises computing a function of a deterministic working block message authentication key, such ciphertext working block, and at least one of (a) the deterministic working block initialization vector used to compute the plaintext working block for such ciphertext working block and (b) the indication corresponding to the position of the plaintext working block computed for such ciphertext working block within said plaintext message (Unruh: par. 0048; I is an index that corresponds to the position of a block in the plaintext record; fig. 3; par. 0058, initialization vector and index value; pars. 0059-0061)."
        }
      ]
    },
    {
      "claimNumber": 18,
      "parentClaim": 14,
      "isReject": true,
      "reasons": [
        {
          "sectionCode": 102,
          "citedPatents": [
            {
              "patentNum": "US 20100303229",
              "text": [
                54,
                58
              ],
              "img": [
                "2D",
                "3"
              ]
            }
          ],
          "reason": "Regarding claim 18, Unruh discloses the method of claim 14. Unruh further discloses wherein, for each said ciphertext working block, the deterministic working block message authentication key used to compute the message authentication tag for such ciphertext working block is a function of an initial value and the indication corresponding to the position of the plaintext working block computed for such ciphertext working block within said plaintext message (Unruh: fig. 3; par. 0058, initialization vector and index value); wherein, for each said ciphertext working block, said computing a message authentication tag for such ciphertext working block comprises computing a function of a deterministic working block message authentication key and such ciphertext working block (Unruh: fig. 2D, par. 0054)."
        }
      ]
    },
    {
      "claimNumber": 19,
      "parentClaim": -1,
      "isReject": true,
      "reasons": [
        {
          "sectionCode": 102,
          "citedPatents": [
            {
              "patentNum": "US 20100303229",
              "text": [
                12,
                13,
                38,
                46,
                48,
                52,
                58,
                59,
                60,
                61
              ],
              "img": [
                "1",
                "2A",
                "2C",
                "3"
              ]
            }
          ],
          "reason": "Regarding claim 19, Unruh discloses a computer-implemented message authentication method for producing message authentication information, said method comprising: (A) dividing a message into at least two working blocks, each said working block having a mathematical relationship to said message (Unruh: fig. 2A, par. 0038, plaintext block 212 & plaintext block 222; fig. 3; par. 0058, initialization vector and index value; fig. 1; pars. 0012-0013); (B) for each said working block, computing a message authentication tag as a function of such working block (Unruh: fig. 2A, par. 0038; plaint text 1 (212), Seed(1) & encryption key for the operation 214 is represented by a value Kw, Ciphertext 1 (216); fig. 3; par. 0058, initialization vector and index value; pars. 0059-0061; fig. 1; pars. 0012-0013; encryption key, initialization vector (IV)) and at least one of (a) a global message authentication key and an indication corresponding to said mathematical relationship of such working block to said message and (b) a deterministic working block message authentication key that comprises an indication corresponding to said mathematical relationship of such working block to said message (Unruh: par. 0048; I is an index that corresponds to the position of a block in the plaintext record; fig. 3; par. 0058, initialization vector and index value; par. 0059-0061); (C) computing a global message authentication tag as a function of the message authentication tag computed for each said working block and said global message authentication key (Unruh: fig. 2C, 248 (Auth Tag), pars. 0046, 0052, Global message authentication; fig. 1, par. 0016; The result of operations is Auth. Tag); and (D) wherein said message authentication information comprises said global message authentication tag (Unruh: fig. 2C, 248 (Auth Tag) (i.e. Global message authentication tag), pars. 0046, 0052, Global message authentication; fig. 1, par. 0016; The result of operations is Auth. Tag)."
        }
      ]
    },
    {
      "claimNumber": 20,
      "parentClaim": 19,
      "isReject": true,
      "reasons": [
        {
          "sectionCode": 102,
          "citedPatents": [
            {
              "patentNum": "US 20100303229",
              "text": [
                12,
                13,
                38,
                58,
                59,
                60,
                61
              ],
              "img": [
                "1",
                "2A",
                "3"
              ]
            }
          ],
          "reason": "Regarding claim 20, Unruh discloses the method of claim 19. Unruh further discloses wherein said message authentication information further comprises the message authentication tag computed for each said working block Unruh: fig. 2A, par. 0038; plaint text 1 (212), Seed(1) & encryption key for the operation 214 is represented by a value Kw, Ciphertext 1 (216); fig. 3; par. 0058, initialization vector and index value; par. 0059-0061; fig. 1; pars. 0012-0013; encryption key, initialization vector (IV), and wherein said dividing said message into at least two working blocks comprises partitioning said message into at least two working blocks (Unruh: fig. 2A, par. 0038, plaintext block 212 & plaintext block 222; fig. 3; par. 0058, initialization vector and index value; fig. 1; pars. 0012-0013)."
        }
      ]
    },
    {
      "claimNumber": 21,
      "parentClaim": 20,
      "isReject": true,
      "reasons": [
        {
          "sectionCode": 102,
          "citedPatents": [
            {
              "patentNum": "US 20100303229",
              "text": [
                46,
                48,
                51,
                58,
                59,
                60,
                61
              ],
              "img": [
                "3"
              ]
            }
          ],
          "reason": "Regarding claim 21, Unruh discloses the method of claim 20. Unruh further discloses wherein, for each said working block, the indication corresponding to said mathematical relationship of such working block to said message comprises an indication corresponding to a position of such working block within said message (Unruh: par. 0048; I is an index that corresponds to the position of a block in the plaintext record; fig. 3; par. 0058, initialization vector and index value; pars. 0059-0061), and wherein said computing a global message authentication tag is further a function of the length of each said working block (Unruh: pars. 0046, 0051, 0058; length of authentication data and the length of the ciphertext)."
        }
      ]
    },
    {
      "claimNumber": 22,
      "parentClaim": 20,
      "isReject": true,
      "reasons": [
        {
          "sectionCode": 102,
          "citedPatents": [
            {
              "patentNum": "US 20100303229",
              "text": [
                58
              ],
              "img": [
                "3"
              ]
            }
          ],
          "reason": "Regarding claim 22, Unruh discloses the method of claim 20. Unruh further discloses wherein, for each said working block, the deterministic working block message authentication key that comprises an indication corresponding to said mathematical relationship of such working block to said message is a function of an initial value and an indication corresponding to a position of such working block within said message (Unruh: fig. 3; par. 0058, initialization vector and index value)."
        }
      ]
    },
    {
      "claimNumber": 23,
      "parentClaim": -1,
      "isReject": true,
      "reasons": [
        {
          "sectionCode": 102,
          "citedPatents": [
            {
              "patentNum": "US 20100303229",
              "text": [
                12,
                54,
                56,
                62
              ],
              "img": [
                "1",
                "2D",
                "5"
              ]
            }
          ],
          "reason": "Regarding claim 23, Unruh discloses a computer-implemented method for determining the authenticity of at least two working blocks comprising a message, said at least two working blocks associated with a global message authentication tag, said method comprising: (A) for each said working block, computing a message authentication tag as a function of such working block (Unruh: fig. 2D; pars. 54-56, applying hash function for each block cipher multH (218); fig. 1; par. 0012, Authentication tag which is generated by applying a hash function to each block of ciphertext) and at least one of (a) a global message authentication key and an indication corresponding to a mathematical relationship of such working block to said message and (b) a deterministic working block message authentication key that comprises an indication corresponding to said mathematical relationship of such working block to said message (Unruh: par. 0048; I is an index that corresponds to the position of a block in the plaintext record; fig. 5, par. 0062); (B) computing a global message authentication tag as a function of the message authentication tag computed for each said working block and said global message authentication key (Unruh: fig. 2D, Auth. Tag (248); pars. 0054-0056; The tag T’); and (C) comparing said computed global message authentication tag with said global message authentication tag associated with said at least two working blocks (Unruh: par. 0056;The tag T’ generated by the decryption method (i.e. computed global message authentication tag) may be compared to the tag T generated (i.e. Global message authentication tag) by the encryption method)."
        }
      ]
    },
    {
      "claimNumber": 24,
      "parentClaim": 23,
      "isReject": true,
      "reasons": [
        {
          "sectionCode": 102,
          "citedPatents": [
            {
              "patentNum": "US 20100303229",
              "text": [
                54,
                56
              ],
              "img": []
            }
          ],
          "reason": "Regarding claim 24, Unruh discloses the method of claim 23. Unruh further discloses wherein each said working block is associated with a message authentication tag and wherein said method further comprises, for each said working block, comparing the message authentication tag computed for such working block with said message authentication tag associated with said working block (Unruh: pars. 0054-0056; The tag T’ generated by the decryption method (i.e. computed global message authentication tag) may be compared to the tag T generated (i.e. Global message authentication tag) by the encryption method), and wherein said message comprises the concatenation of each said working block (Unruh: pars. 0054-0056)."
        }
      ]
    },
    {
      "claimNumber": 25,
      "parentClaim": 24,
      "isReject": true,
      "reasons": [
        {
          "sectionCode": 102,
          "citedPatents": [
            {
              "patentNum": "US 20100303229",
              "text": [
                46,
                47,
                48,
                51,
                58,
                59,
                60,
                61
              ],
              "img": [
                "3"
              ]
            }
          ],
          "reason": "Regarding claim 25, Unruh discloses the method of claim 24. Unruh further discloses wherein, for each said working block, the indication corresponding to said mathematical relationship of such working block to said message comprises an indication corresponding to a position of such working block within said message (Unruh: par. 0047; I is an index that corresponds to the position of a block in the plaintext record; fig. 3; par. 0058, initialization vector and index value; pars. 0059-0061), and wherein said computing a global message authentication tag is further a function of the length of each said working block (Unruh: pars. 0046, 0051, 0058; length of authentication data and the length of the ciphertext)."
        }
      ]
    },
    {
      "claimNumber": 26,
      "parentClaim": 24,
      "isReject": true,
      "reasons": [
        {
          "sectionCode": 102,
          "citedPatents": [
            {
              "patentNum": "US 20100303229",
              "text": [
                58
              ],
              "img": [
                "3"
              ]
            }
          ],
          "reason": "Regarding claim 26, Unruh discloses the method of claim 24. Unruh further discloses wherein, for each said working block, the deterministic working block message authentication key that comprises an indication corresponding to said mathematical relationship of such working block to said message is a function of an initial value and an indication corresponding to a position of such working block within said message (Unruh: fig. 3; par. 0058, initialization vector and index value)."
        }
      ]
    },
    {
      "claimNumber": 27,
      "parentClaim": 1,
      "isReject": true,
      "reasons": [
        {
          "sectionCode": 103,
          "citedPatents": [
            {
              "patentNum": "US 20100303229",
              "text": [],
              "img": []
            },
            {
              "patentNum": "US 20050213752",
              "text": [
                8,
                10
              ],
              "img": []
            }
          ],
          "reason": "Regarding claim 27, Unruh discloses the method of claim 1. Unruh does not explicitly disclose providing an updated plaintext message that is an update to said plaintext message, identifying at least one updated working block that is affected by said update to said plaintext message. However, in an analogous art, Hawkes discloses a stream cipher encryption and message authentication. In one embodiment, Hawkes discloses applying the keystream to plaintext to generate an encrypted message block having at least a portion of the plaintext converted to ciphertext, and updating the state value as a function of said at least a portion of the plaintext (Hawkes:abstract; pars. 0008, 0010). Therefore, it would have been obvious to one of ordinary skill in the art at the time the invention was made to combine the teachings of Hawkes with the method and system of Unruh wherein providing an updated plaintext message that is an update to said plaintext message to provide users with a means for to ensuring security of communication message effectively (Hawkes: par. 0008)."
        }
      ]
    },
    {
      "claimNumber": 28,
      "parentClaim": 1,
      "isReject": true,
      "reasons": [
        {
          "sectionCode": 102,
          "citedPatents": [
            {
              "patentNum": "US 20100303229",
              "text": [],
              "img": []
            }
          ],
          "reason": "Regarding claim 28, claim 28 is directed to a computer readable memory storing computer executable instructions thereon that when executed by a computer perform the method of claim 1; claim 28 is similar in scope to claim 1, and is therefore rejected under similar rationale."
        }
      ]
    }
  ]
}